{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport axios from \"/axios.js\";\nexport default {\n  name: \"yearset-forecast-sales\",\n  created: function created() {\n    this.FETCH_PLAN(); // this.FETCH_ACTUAL();\n  },\n  data: function data() {\n    return {\n      quarter: [{\n        no: \"YEAR 2023\"\n      }, {\n        no: \"Q1\"\n      }, {\n        no: \"Q2\"\n      }, {\n        no: \"Q3\"\n      }, {\n        no: \"Q4\"\n      }, {\n        no: \"TOTAL\"\n      }],\n      ForecastSalesYearSetData: []\n    };\n  },\n  methods: {\n    FETCH_PLAN: function FETCH_PLAN() {\n      var _this = this;\n\n      axios({\n        method: \"post\",\n        url: \"forecast-sales/forecast-sales-sumbyquarter\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: {\n          year_no: moment().year() + 1\n        }\n      }).then(function (res) {\n        // console.log(res);\n        if (res.data) {\n          _this.ForecastSalesYearSetData = res.data;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      }).finally(function () {});\n    }\n  },\n  computed: {\n    total_plan: function total_plan() {\n      if (this.ForecastSalesYearSetData.length > 0) {\n        var sum = 0;\n\n        for (var i = 0; i < this.ForecastSalesYearSetData.length; i++) {\n          sum = sum + this.ForecastSalesYearSetData[i].y;\n        }\n\n        return sum;\n      } else return 0;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AAEA;AACAA,gCADA;AAEAC,SAFA,qBAEA;AACA,sBADA,CAEA;AACA,GALA;AAMAC,MANA,kBAMA;AACA;AACAC,gBACA;AACAC;AADA,OADA,EAIA;AACAA;AADA,OAJA,EAOA;AACAA;AADA,OAPA,EAUA;AACAA;AADA,OAVA,EAaA;AACAA;AADA,OAbA,EAgBA;AACAA;AADA,OAhBA,CADA;AAqBAC;AArBA;AAuBA,GA9BA;AA+BAC;AACAC,cADA,wBACA;AAAA;;AACAC;AACAC,sBADA;AAEAC,yDAFA;AAGAC;AACAC;AADA,SAHA;AAMAV;AACAW;AADA;AANA,SAUAC,IAVA,CAUA;AACA;AACA;AACA;AACA;AACA,OAfA,EAgBAC,KAhBA,CAgBA;AACAC;AACA,OAlBA,EAmBAC,OAnBA,CAmBA,cAnBA;AAoBA;AAtBA,GA/BA;AAuDAC;AACAC,cADA,wBACA;AACA;AACA;;AACA;AACAC;AACA;;AACA;AACA,OANA,MAMA;AACA;AATA;AAvDA","names":["name","created","data","quarter","no","ForecastSalesYearSetData","methods","FETCH_PLAN","axios","method","url","headers","Authorization","year_no","then","catch","console","finally","computed","total_plan","sum"],"sourceRoot":"src/views/Applications/ExecutiveManagement/YearSet","sources":["forecast-sales.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card-set-year fix-six\">\n      <div\n        class=\"card-item-month monthlabel\"\n        v-for=\"item in quarter\"\n        :key=\"item.no\"\n      >\n        <p>{{ item.no }}</p>\n      </div>\n    </div>\n    <div class=\"card-set-year fix-six\">\n      <div class=\"card-item-month table-td\">\n        <p>FORECAST REVENUE</p>\n      </div>\n      <div\n        class=\"card-item-month actual\"\n        v-for=\"item in ForecastSalesYearSetData\"\n        :key=\"item.quarter_no\"\n      >\n        <p class=\"label-value\">{{ (item.y / 1000000).toFixed(2) }}</p>\n        <p class=\"label-currency\">MB</p>\n      </div>\n      <div class=\"card-item-month table-td\">\n        <p class=\"label-value\">\n          {{ (total_plan / 1000000).toFixed(2) }}\n        </p>\n        <p class=\"label-currency\">MB</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport axios from \"/axios.js\";\n\nexport default {\n  name: \"yearset-forecast-sales\",\n  created() {\n    this.FETCH_PLAN();\n    // this.FETCH_ACTUAL();\n  },\n  data() {\n    return {\n      quarter: [\n        {\n          no: \"YEAR 2023\",\n        },\n        {\n          no: \"Q1\",\n        },\n        {\n          no: \"Q2\",\n        },\n        {\n          no: \"Q3\",\n        },\n        {\n          no: \"Q4\",\n        },\n        {\n          no: \"TOTAL\",\n        },\n      ],\n      ForecastSalesYearSetData: [],\n    };\n  },\n  methods: {\n    FETCH_PLAN() {\n      axios({\n        method: \"post\",\n        url: \"forecast-sales/forecast-sales-sumbyquarter\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: {\n          year_no: moment().year() + 1,\n        },\n      })\n        .then((res) => {\n          // console.log(res);\n          if (res.data) {\n            this.ForecastSalesYearSetData = res.data;\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(() => {});\n    },\n  },\n  computed: {\n    total_plan() {\n      if (this.ForecastSalesYearSetData.length > 0) {\n        var sum = 0;\n        for (var i = 0; i < this.ForecastSalesYearSetData.length; i++) {\n          sum = sum + this.ForecastSalesYearSetData[i].y;\n        }\n        return sum;\n      } else return 0;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.chart-item {\n  min-height: 200px;\n}\n.fix-six {\n  grid-template-columns: repeat(6, 16.66%);\n}\n* {\n  font-family: \"Play\", \"Noto Sans Thai\" !important;\n}\n</style>"]},"metadata":{},"sourceType":"module"}