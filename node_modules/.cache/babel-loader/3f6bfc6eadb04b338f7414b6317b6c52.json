{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"/axios.js\";\nimport clone from \"just-clone\";\nimport DxDateBox from \"devextreme-vue/date-box\";\nexport default {\n  name: \"popup-edit-mileage\",\n  components: {\n    DxDateBox\n  },\n  props: {\n    editInfo: Object\n  },\n\n  data() {\n    return {\n      formData: {},\n      formSelect: {\n        now: new Date()\n      }\n    };\n  },\n\n  computed: {\n    baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;else if (mode == \"prod\") return this.$store.state.modeURL.prod;else return console.log(\"develpment mode set up incorrect.\");\n    }\n\n  },\n\n  created() {\n    this.formData = clone(this.editInfo);\n    let id = JSON.parse(localStorage.getItem(\"user\"));\n    this.formData.id_user = id.id_user;\n    this.formData.doc_seq = parseInt(this.formData.doc_seq);\n  },\n\n  mounted() {\n    if (this.formData.start_img != null) {\n      document.getElementById(\"preview_img_start\").src = this.baseURL + this.formData.start_img;\n    }\n\n    if (this.formData.end_img != null) {\n      document.getElementById(\"preview_img_end\").src = this.baseURL + this.formData.end_img;\n    }\n  },\n\n  methods: {\n    PREVIEW_IMG_UPLOAD(option) {\n      if (option == \"start-img\") {\n        this.formData.start_file = this.$refs.file_start_img.files[0];\n        var img_start = this.formData.start_file;\n\n        if (img_start) {\n          if (img_start.type == \"image/png\" || img_start.type == \"image/jpeg\") {\n            if (img_start.size < 20000000) {\n              document.getElementById(\"preview_img_start\").src = window.URL.createObjectURL(img_start);\n            } else {\n              this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n              this.PREVIEW_IMG_FORM_CLEAR(\"start-img\");\n            }\n          } else {\n            this.$ons.notification.alert(\"Incorrect filetype. <br/> Only PNG/JPG/JPEG file can be uploaded.\");\n            this.PREVIEW_IMG_FORM_CLEAR(\"start-img\");\n          }\n        }\n      } else if (option == \"end-img\") {\n        this.formData.end_file = this.$refs.file_end_img.files[0];\n        var img_end = this.formData.end_file;\n\n        if (img_end) {\n          if (img_end.type == \"image/png\" || img_end.type == \"image/jpeg\") {\n            if (img_end.size < 20000000) {\n              document.getElementById(\"preview_img_end\").src = window.URL.createObjectURL(img_end);\n            } else {\n              this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n              this.PREVIEW_IMG_FORM_CLEAR(\"start-img\");\n            }\n          } else {\n            this.$ons.notification.alert(\"Incorrect filetype. <br/> Only PNG/JPG/JPEG file can be uploaded.\");\n            this.PREVIEW_IMG_FORM_CLEAR(\"end-img\");\n          }\n        }\n      }\n    },\n\n    PREVIEW_IMG_DELETE(option) {\n      if (option == \"start-img\") {\n        this.formData.start_file = \"\";\n        document.getElementById(\"preview_img_start\").src = \"\";\n      } else if (option == \"end-img\") {\n        this.formData.end_file = \"\";\n        document.getElementById(\"preview_img_end\").src = \"\";\n      }\n    },\n\n    PREVIEW_IMG_FORM_CLEAR(option) {\n      if (option == \"start-img\") {\n        const file = document.getElementById(\"preview_input_img_start\");\n        file.val = \"\";\n        this.formData.start_file = \"\";\n      } else if (option == \"end-img\") {\n        const file = document.getElementById(\"preview_input_img_end\");\n        this.formData.end_file = \"\";\n        file.val = \"\";\n      }\n    },\n\n    SAVE() {\n      if (this.formData.start_date) {\n        if (this.formData.start_mile) {\n          let isInt = isNaN(this.formData.start_mile);\n\n          if (isInt == false) {\n            if (this.formData.start_file || this.formData.start_img) {\n              this.$ons.notification.confirm(\"Confirm save?\").then(res => {\n                if (res == 1) {\n                  if (this.formData.start_file) this.formData.start_img = null;\n                  if (this.formData.end_file) this.formData.end_img = null;\n                  const data = this.formData;\n                  console.log(data);\n                  axios({\n                    method: \"put\",\n                    url: \"/mile-record/mile-record-edit\",\n                    headers: {\n                      \"Content-Type\": \"multipart/form-data\",\n                      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n                    },\n                    data: data\n                  }).then(res => {\n                    if (res.status == 200) {\n                      this.$ons.notification.alert(\"Edit Mileage Record successful\");\n                      this.$emit(\"btn-cancel-edit\");\n                      this.$emit(\"refreshList\");\n                    }\n                  }).catch(error => {\n                    console.log(error);\n                  }).finally(() => {});\n                }\n              });\n            } else {\n              this.$ons.notification.alert('\"Start Mile Image\" field cannot be empty');\n            }\n          } else {\n            this.$ons.notification.alert('\"Start Mile Number\" should be numberic input only');\n          }\n        } else {\n          this.$ons.notification.alert('\"Start Mile Number\" field cannot be empty');\n        }\n      } else {\n        this.$ons.notification.alert('\"Start Date\" field cannot be empty');\n      }\n    },\n\n    CANCEL() {\n      // console.log(this.formData);\n      let form = this.formData; // console.log(form);\n\n      if (this.formData != form) {\n        this.$ons.notification.confirm(\"Your unsaved changes will be lost\").then(res => {\n          if (res == 1) {\n            this.$emit(\"btn-cancel-edit\");\n          }\n        });\n      } else {\n        this.$emit(\"btn-cancel-edit\");\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AACA;AACA;AACAA,4BADA;AAEAC;AAAAC;AAAA,GAFA;AAGAC;AACAC;AADA,GAHA;;AAMAC;AACA;AACAC,kBADA;AAEAC;AACAC;AADA;AAFA;AAMA,GAbA;;AAcAC;AACAC;AACA;AACA,mEACA,+DACA;AACA;;AANA,GAdA;;AAuBAC;AACA;AACA;AACA;AACA;AACA,GA5BA;;AA6BAC;AACA;AACAC,yDACA,sCADA;AAEA;;AACA;AACAA,uDACA,oCADA;AAEA;AACA,GAtCA;;AAuCAC;AACAC;AACA;AACA;AACA;;AACA;AACA;AACA;AACAF,iEACAG,qCADA;AAEA,aAHA,MAGA;AACA;AACA;AACA;AACA,WARA,MAQA;AACA,yCACA,mEADA;AAGA;AACA;AACA;AACA,OAnBA,MAmBA;AACA;AACA;;AAEA;AACA;AACA;AACAH,+DACAG,mCADA;AAEA,aAHA,MAGA;AACA;AACA;AACA;AACA,WARA,MAQA;AACA,yCACA,mEADA;AAGA;AACA;AACA;AACA;AACA,KA1CA;;AA2CAC;AACA;AACA;AACAJ;AACA,OAHA,MAGA;AACA;AACAA;AACA;AACA,KAnDA;;AAoDAK;AACA;AACA;AACAC;AACA;AACA,OAJA,MAIA;AACA;AACA;AACAA;AACA;AACA,KA9DA;;AA+DAC;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC;AACAC;AACAC,iCADA;AAEAC,wDAFA;AAGAC;AACA,2DADA;AAEAC,qCACA;AAHA,qBAHA;AAQArB;AARA,qBAUAsB,IAVA,CAUAC;AACA;AACA,mDACA,gCADA;AAGA;AACA;AACA;AACA,mBAlBA,EAmBAC,KAnBA,CAmBAC;AACAT;AACA,mBArBA,EAsBAU,OAtBA,CAsBA,QAtBA;AAuBA;AACA,eA9BA;AA+BA,aAhCA,MAgCA;AACA,2CACA,0CADA;AAGA;AACA,WAtCA,MAsCA;AACA,yCACA,mDADA;AAGA;AACA,SA7CA,MA6CA;AACA,uCACA,2CADA;AAGA;AACA,OAnDA,MAmDA;AACA;AACA;AACA,KAtHA;;AAuHAC;AACA;AACA,+BAFA,CAGA;;AACA;AACA,+BACAC,OADA,CACA,mCADA,EAEAN,IAFA,CAEAC;AACA;AACA;AACA;AACA,SANA;AAOA,OARA,MAQA;AACA;AACA;AACA;;AAtIA;AAvCA","names":["name","components","DxDateBox","props","editInfo","data","formData","formSelect","now","computed","baseURL","created","mounted","document","methods","PREVIEW_IMG_UPLOAD","window","PREVIEW_IMG_DELETE","PREVIEW_IMG_FORM_CLEAR","file","SAVE","console","axios","method","url","headers","Authorization","then","res","catch","error","finally","CANCEL","confirm"],"sourceRoot":"src/views/Applications/Record/Mileage","sources":["mileage-edit.vue"],"sourcesContent":["<template>\n  <div class=\"popup-wrapper\">\n    <div class=\"popup-card\">\n      <div class=\"popup-header\">\n        <label>Edit Record</label>\n      </div>\n      <div class=\"popup-content form\">\n        <div class=\"form-item-container\">\n          <label class=\"section-text\">Start Mile</label>\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Start Date:</p>\n              <span class=\"star-label\"><i class=\"las la-asterisk\"></i></span>\n            </div>\n            <DxDateBox\n              :value=\"formSelect.now\"\n              type=\"date\"\n              v-model=\"formData.start_date\"\n              placeholder=\"Start Date\"\n            />\n          </div>\n\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Mile Number:</p>\n              <span class=\"star-label\"><i class=\"las la-asterisk\"></i></span>\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Mile Number\"\n              v-model=\"formData.start_mile\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">ODO Image:</p>\n              <!-- <span class=\"star-label\"><i class=\"las la-asterisk\"></i></span> -->\n            </div>\n            <div class=\"picture-upload-box\">\n              <div class=\"preview-box\">\n                <img id=\"preview_img_start\" src=\"\" alt=\"\" />\n              </div>\n              <div class=\"upload-box\">\n                <div class=\"upload-btn-wrapper\">\n                  <input\n                    type=\"file\"\n                    id=\"preview_input_img_start\"\n                    style=\"display: none\"\n                    ref=\"file_start_img\"\n                    @change=\"PREVIEW_IMG_UPLOAD('start-img')\"\n                  />\n                  <v-ons-toolbar-button>\n                    <label for=\"preview_input_img_start\"\n                      ><i class=\"las la-image\"></i>Select File</label\n                    >\n                  </v-ons-toolbar-button>\n                  <v-ons-toolbar-button\n                    class=\"btn-delete\"\n                    v-on:click=\"PREVIEW_IMG_DELETE('start-img')\"\n                  >\n                    <i class=\"las la-trash\"></i>\n                  </v-ons-toolbar-button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"hr-verticle\"></div>\n        <div class=\"form-item-container\">\n          <label class=\"section-text\">End Mile</label>\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">End Date:</p>\n            </div>\n            <DxDateBox\n              :value=\"formSelect.now\"\n              type=\"date\"\n              v-model=\"formData.end_date\"\n              placeholder=\"End Date\"\n            />\n          </div>\n\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Mile Number:</p>\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Mile Number\"\n              v-model=\"formData.end_mile\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">ODO Image:</p>\n              <!-- <span class=\"star-label\"><i class=\"las la-asterisk\"></i></span> -->\n            </div>\n            <div class=\"picture-upload-box\">\n              <div class=\"preview-box\">\n                <img id=\"preview_img_end\" src=\"\" alt=\"\" />\n              </div>\n              <div class=\"upload-box\">\n                <div class=\"upload-btn-wrapper\">\n                  <input\n                    type=\"file\"\n                    id=\"preview_input_img_end\"\n                    style=\"display: none\"\n                    ref=\"file_end_img\"\n                    @change=\"PREVIEW_IMG_UPLOAD('end-img')\"\n                  />\n                  <v-ons-toolbar-button>\n                    <label for=\"preview_input_img_end\"\n                      ><i class=\"las la-image\"></i>Select File</label\n                    >\n                  </v-ons-toolbar-button>\n                  <v-ons-toolbar-button\n                    class=\"btn-delete\"\n                    v-on:click=\"PREVIEW_IMG_DELETE('end-img')\"\n                  >\n                    <i class=\"las la-trash\"></i>\n                  </v-ons-toolbar-button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <div class=\"button-set\">\n          <button class=\"blue\" v-on:click=\"SAVE()\">\n            <label>Save</label>\n          </button>\n          <button class=\"grey\" v-on:click=\"CANCEL()\">\n            <label>Cancel</label>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"/axios.js\";\nimport clone from \"just-clone\";\nimport DxDateBox from \"devextreme-vue/date-box\";\nexport default {\n  name: \"popup-edit-mileage\",\n  components: { DxDateBox },\n  props: {\n    editInfo: Object,\n  },\n  data() {\n    return {\n      formData: {},\n      formSelect: {\n        now: new Date(),\n      },\n    };\n  },\n  computed: {\n    baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;\n      else if (mode == \"prod\") return this.$store.state.modeURL.prod;\n      else return console.log(\"develpment mode set up incorrect.\");\n    },\n  },\n\n  created() {\n    this.formData = clone(this.editInfo);\n    let id = JSON.parse(localStorage.getItem(\"user\"));\n    this.formData.id_user = id.id_user;\n    this.formData.doc_seq = parseInt(this.formData.doc_seq);\n  },\n  mounted() {\n    if (this.formData.start_img != null) {\n      document.getElementById(\"preview_img_start\").src =\n        this.baseURL + this.formData.start_img;\n    }\n    if (this.formData.end_img != null) {\n      document.getElementById(\"preview_img_end\").src =\n        this.baseURL + this.formData.end_img;\n    }\n  },\n  methods: {\n    PREVIEW_IMG_UPLOAD(option) {\n      if (option == \"start-img\") {\n        this.formData.start_file = this.$refs.file_start_img.files[0];\n        var img_start = this.formData.start_file;\n        if (img_start) {\n          if (img_start.type == \"image/png\" || img_start.type == \"image/jpeg\") {\n            if (img_start.size < 20000000) {\n              document.getElementById(\"preview_img_start\").src =\n                window.URL.createObjectURL(img_start);\n            } else {\n              this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n              this.PREVIEW_IMG_FORM_CLEAR(\"start-img\");\n            }\n          } else {\n            this.$ons.notification.alert(\n              \"Incorrect filetype. <br/> Only PNG/JPG/JPEG file can be uploaded.\"\n            );\n            this.PREVIEW_IMG_FORM_CLEAR(\"start-img\");\n          }\n        }\n      } else if (option == \"end-img\") {\n        this.formData.end_file = this.$refs.file_end_img.files[0];\n        var img_end = this.formData.end_file;\n\n        if (img_end) {\n          if (img_end.type == \"image/png\" || img_end.type == \"image/jpeg\") {\n            if (img_end.size < 20000000) {\n              document.getElementById(\"preview_img_end\").src =\n                window.URL.createObjectURL(img_end);\n            } else {\n              this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n              this.PREVIEW_IMG_FORM_CLEAR(\"start-img\");\n            }\n          } else {\n            this.$ons.notification.alert(\n              \"Incorrect filetype. <br/> Only PNG/JPG/JPEG file can be uploaded.\"\n            );\n            this.PREVIEW_IMG_FORM_CLEAR(\"end-img\");\n          }\n        }\n      }\n    },\n    PREVIEW_IMG_DELETE(option) {\n      if (option == \"start-img\") {\n        this.formData.start_file = \"\";\n        document.getElementById(\"preview_img_start\").src = \"\";\n      } else if (option == \"end-img\") {\n        this.formData.end_file = \"\";\n        document.getElementById(\"preview_img_end\").src = \"\";\n      }\n    },\n    PREVIEW_IMG_FORM_CLEAR(option) {\n      if (option == \"start-img\") {\n        const file = document.getElementById(\"preview_input_img_start\");\n        file.val = \"\";\n        this.formData.start_file = \"\";\n      } else if (option == \"end-img\") {\n        const file = document.getElementById(\"preview_input_img_end\");\n        this.formData.end_file = \"\";\n        file.val = \"\";\n      }\n    },\n    SAVE() {\n      if (this.formData.start_date) {\n        if (this.formData.start_mile) {\n          let isInt = isNaN(this.formData.start_mile);\n          if (isInt == false) {\n            if (this.formData.start_file || this.formData.start_img) {\n              this.$ons.notification.confirm(\"Confirm save?\").then((res) => {\n                if (res == 1) {\n                  if (this.formData.start_file) this.formData.start_img = null;\n                  if (this.formData.end_file) this.formData.end_img = null;\n                  const data = this.formData;\n                  console.log(data);\n                  axios({\n                    method: \"put\",\n                    url: \"/mile-record/mile-record-edit\",\n                    headers: {\n                      \"Content-Type\": \"multipart/form-data\",\n                      Authorization:\n                        \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n                    },\n                    data: data,\n                  })\n                    .then((res) => {\n                      if (res.status == 200) {\n                        this.$ons.notification.alert(\n                          \"Edit Mileage Record successful\"\n                        );\n                        this.$emit(\"btn-cancel-edit\");\n                        this.$emit(\"refreshList\");\n                      }\n                    })\n                    .catch((error) => {\n                      console.log(error);\n                    })\n                    .finally(() => {});\n                }\n              });\n            } else {\n              this.$ons.notification.alert(\n                '\"Start Mile Image\" field cannot be empty'\n              );\n            }\n          } else {\n            this.$ons.notification.alert(\n              '\"Start Mile Number\" should be numberic input only'\n            );\n          }\n        } else {\n          this.$ons.notification.alert(\n            '\"Start Mile Number\" field cannot be empty'\n          );\n        }\n      } else {\n        this.$ons.notification.alert('\"Start Date\" field cannot be empty');\n      }\n    },\n    CANCEL() {\n      // console.log(this.formData);\n      let form = this.formData;\n      // console.log(form);\n      if (this.formData != form) {\n        this.$ons.notification\n          .confirm(\"Your unsaved changes will be lost\")\n          .then((res) => {\n            if (res == 1) {\n              this.$emit(\"btn-cancel-edit\");\n            }\n          });\n      } else {\n        this.$emit(\"btn-cancel-edit\");\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n\n.popup-content {\n  display: flex;\n  column-gap: 20px;\n}\n.form-item-container {\n  width: 300px;\n  display: block;\n}\ntextarea {\n  max-width: 610px;\n  min-width: 610px;\n}\n.hr-verticle {\n  height: auto;\n}\n</style>"]},"metadata":{},"sourceType":"module"}