{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"/axios.js\"; // import clone from \"just-clone\";\n\nexport default {\n  name: \"popup-add-client\",\n  components: {},\n\n  data() {\n    return {\n      formData: {\n        client_name: \"\",\n        location: \"\",\n        is_domestic: true,\n        phone_no: \"\",\n        email: \"\",\n        address: \"\"\n      }\n    };\n  },\n\n  methods: {\n    SAVE() {\n      if (this.formData.client_name) {\n        this.$ons.notification.confirm(\"Confirm save?\").then(res => {\n          if (res == 1) {\n            const data = this.formData;\n            axios({\n              method: \"post\",\n              url: \"/project-manager/client-add\",\n              headers: {\n                Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n              },\n              data: data\n            }).then(res => {\n              if (res.status == 200) {\n                this.$ons.notification.alert(\"Client Add successful\");\n                this.$emit(\"btn-cancel-add\");\n                this.$emit(\"refreshList\");\n              }\n            }).catch(error => {\n              this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n            }).finally(() => {});\n          }\n        });\n      } else {\n        this.$ons.notification.alert('\"Client name\" field cannot be empty');\n      }\n    },\n\n    CANCEL() {\n      console.log(this.formData);\n      let form = this.formData;\n      console.log(form);\n\n      if (this.formData != form) {\n        this.$ons.notification.confirm(\"Your unsaved changes will be lost\").then(res => {\n          if (res == 1) {\n            this.$emit(\"btn-cancel-add\");\n          }\n        });\n      } else {\n        this.$emit(\"btn-cancel-add\");\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,8B,CACA;;AACA;AACAA,0BADA;AAEAC,gBAFA;;AAGAC;AACA;AACAC;AACAC,uBADA;AAEAC,oBAFA;AAGAC,yBAHA;AAIAC,oBAJA;AAKAC,iBALA;AAMAC;AANA;AADA;AAUA,GAdA;;AAeAC;AACAC;AACA;AACA;AACA;AACA;AACAC;AACAC,4BADA;AAEAC,gDAFA;AAGAC;AACAC,+BACA;AAFA,eAHA;AAOAd;AAPA,eASAe,IATA,CASAC;AACA;AACA;AACA;AACA;AACA;AACA,aAfA,EAgBAC,KAhBA,CAgBAC;AACA,2CACAA,8DADA;AAGA,aApBA,EAqBAC,OArBA,CAqBA,QArBA;AAsBA;AACA,SA1BA;AA2BA,OA5BA,MA4BA;AACA;AACA;AACA,KAjCA;;AAkCAC;AACAC;AACA;AACAA;;AACA;AACA,+BACAC,OADA,CACA,mCADA,EAEAP,IAFA,CAEAC;AACA;AACA;AACA;AACA,SANA;AAOA,OARA,MAQA;AACA;AACA;AACA;;AAjDA;AAfA","names":["name","components","data","formData","client_name","location","is_domestic","phone_no","email","address","methods","SAVE","axios","method","url","headers","Authorization","then","res","catch","error","finally","CANCEL","console","confirm"],"sourceRoot":"src/views/Applications/Contact/Client","sources":["client-add.vue"],"sourcesContent":["<template>\n  <div class=\"popup-wrapper\">\n    <div class=\"popup-card\">\n      <div class=\"popup-header\">\n        <label>Add New Client Info</label>\n      </div>\n      <div class=\"popup-content form\">\n        <div class=\"form-item-container\">\n          <div class=\"input-set\">\n            <p class=\"label\">Client Name:</p>\n            <input\n              type=\"text\"\n              placeholder=\"Client Name\"\n              v-model=\"formData.client_name\"\n            />\n            <label class=\"star-label\"><i class=\"las la-asterisk\"></i></label>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Location:</p>\n            <input\n              type=\"text\"\n              placeholder=\"Location\"\n              v-model=\"formData.location\"\n            />\n          </div>\n\n          <div class=\"input-set\">\n            <p class=\"label\">Phone No:</p>\n            <input\n              type=\"text\"\n              placeholder=\"Phone No\"\n              v-model=\"formData.phone_no\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Email:</p>\n            <input type=\"email\" placeholder=\"Email\" v-model=\"formData.email\" />\n          </div>\n          <div class=\"input-set\" style=\"grid-column: span 2\">\n            <p class=\"label\">Address:</p>\n            <textarea\n              type=\"text\"\n              placeholder=\"Address\"\n              style=\"height: 60px; width: 610px; max-height: 610px\"\n              v-model=\"formData.address\"\n            />\n          </div>\n          <div class=\"checkbox-set\">\n            <v-ons-checkbox input-id=\"incountry\" v-model=\"formData.is_domestic\">\n            </v-ons-checkbox>\n            <label for=\"incountry\">Client is located in Thailand</label>\n          </div>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <div class=\"button-set\">\n          <button class=\"blue\" v-on:click=\"SAVE()\">\n            <label>Save</label>\n          </button>\n          <button class=\"grey\" v-on:click=\"CANCEL()\">\n            <label>Cancel</label>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"/axios.js\";\n// import clone from \"just-clone\";\nexport default {\n  name: \"popup-add-client\",\n  components: {},\n  data() {\n    return {\n      formData: {\n        client_name: \"\",\n        location: \"\",\n        is_domestic: true,\n        phone_no: \"\",\n        email: \"\",\n        address: \"\",\n      },\n    };\n  },\n  methods: {\n    SAVE() {\n      if (this.formData.client_name) {\n        this.$ons.notification.confirm(\"Confirm save?\").then((res) => {\n          if (res == 1) {\n            const data = this.formData;\n            axios({\n              method: \"post\",\n              url: \"/project-manager/client-add\",\n              headers: {\n                Authorization:\n                  \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n              },\n              data: data,\n            })\n              .then((res) => {\n                if (res.status == 200) {\n                  this.$ons.notification.alert(\"Client Add successful\");\n                  this.$emit(\"btn-cancel-add\");\n                  this.$emit(\"refreshList\");\n                }\n              })\n              .catch((error) => {\n                this.$ons.notification.alert(\n                  error.code + \" \" + error.response.status + \" \" + error.message\n                );\n              })\n              .finally(() => {});\n          }\n        });\n      } else {\n        this.$ons.notification.alert('\"Client name\" field cannot be empty');\n      }\n    },\n    CANCEL() {\n      console.log(this.formData);\n      let form = this.formData;\n      console.log(form);\n      if (this.formData != form) {\n        this.$ons.notification\n          .confirm(\"Your unsaved changes will be lost\")\n          .then((res) => {\n            if (res == 1) {\n              this.$emit(\"btn-cancel-add\");\n            }\n          });\n      } else {\n        this.$emit(\"btn-cancel-add\");\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n.form-item-container {\n  width: auto;\n  display: grid;\n  grid-template-columns: repeat(2, 300px);\n  grid-gap: 10px;\n}\n\ntextarea {\n  max-width: 610px;\n  min-width: 610px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}