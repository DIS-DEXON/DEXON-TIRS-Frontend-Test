{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//DataGrid\nimport \"devextreme/dist/css/dx.light.css\";\nimport { Workbook } from \"exceljs\";\nimport saveAs from \"file-saver\";\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\nimport { DxDataGrid, DxSearchPanel, DxPaging, DxPager, DxScrolling, DxColumn, DxExport } from \"devextreme-vue/data-grid\"; //API\n\nimport axios from \"/axios.js\"; //Pages & Structures\n\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupAdd from \"@/views/Applications/Contact/Client/client-add.vue\";\nimport popupEdit from \"@/views/Applications/Contact/Client/client-edit.vue\";\nimport contentLoading from \"@/components/app-structures/app-content-loading.vue\";\nimport clone from \"just-clone\";\nexport default {\n  name: \"ViewClientList\",\n  components: {\n    toolbar: toolbar,\n    DxDataGrid: DxDataGrid,\n    DxSearchPanel: DxSearchPanel,\n    DxPaging: DxPaging,\n    DxPager: DxPager,\n    DxScrolling: DxScrolling,\n    DxColumn: DxColumn,\n    DxExport: DxExport,\n    contentLoading: contentLoading,\n    popupAdd: popupAdd,\n    popupEdit: popupEdit\n  },\n  created: function created() {\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"Client Contact\",\n      icon: \"/img/icon_menu/contact/client.png\"\n    });\n    if (this.$store.state.status.server == true) this.FETCH_LIST();\n  },\n  data: function data() {\n    return {\n      clientList: [],\n      isAdd: false,\n      isEdit: false,\n      isLoading: false,\n      currentViewRow: {},\n      errorMessage: \"\",\n      editInfo: \"\"\n    };\n  },\n  computed: {},\n  methods: {\n    EXPORT_DATA: function EXPORT_DATA(e) {\n      var workbook = new Workbook();\n      var worksheet = workbook.addWorksheet(\"Clients\");\n      exportDataGrid({\n        worksheet: worksheet,\n        component: e.component\n      }).then(function () {\n        workbook.xlsx.writeBuffer().then(function (buffer) {\n          saveAs(new Blob([buffer], {\n            type: \"application/octet-stream\"\n          }), \"Clients.xlsx\");\n        });\n      });\n      e.cancel = true;\n    },\n    VIEW_INFO: function VIEW_INFO(e) {\n      this.currentViewRow = e.data;\n    },\n    TOGGLE_POPUP: function TOGGLE_POPUP(m) {\n      if (m == \"add\") {\n        if (this.isAdd == true) this.isAdd = false;else this.isAdd = true;\n      } else if (m == \"edit\") {\n        if (this.isEdit == true) this.isEdit = false;else {\n          this.editInfo = clone(this.currentViewRow);\n          this.isEdit = true;\n        }\n      }\n    },\n    FETCH_LIST: function FETCH_LIST() {\n      var _this = this;\n\n      this.isLoading = true;\n      axios({\n        method: \"get\",\n        url: \"/contact-client/client-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        }\n      }).then(function (res) {\n        // console.log(res);\n        if (res.data) {\n          _this.clientList = res.data;\n          _this.currentViewRow = _this.clientList[0];\n        }\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.response.statusText);\n      }).finally(function () {\n        _this.isLoading = false;\n      });\n    },\n    DELETE_CLIENT: function DELETE_CLIENT() {\n      var _this2 = this;\n\n      var rowID = this.currentViewRow.id_client;\n      this.$ons.notification.confirm(\"Confirm delete?\").then(function (res) {\n        if (res == 1) {\n          axios({\n            method: \"delete\",\n            url: \"/contact-client/client-delete\",\n            headers: {\n              Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n            },\n            data: {\n              id_client: rowID\n            }\n          }).then(function (res) {\n            if (res.status == 200) {\n              _this2.$ons.notification.alert(\"Client contact delete successful\");\n\n              _this2.FETCH_LIST();\n            }\n          }).catch(function (error) {\n            _this2.$ons.notification.alert(error.code + \" \" + error.response.status);\n          }).finally(function () {});\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA;AACA;AACA;AACA,SACAA,UADA,EAEAC,aAFA,EAGAC,QAHA,EAIAC,OAJA,EAKAC,WALA,EAMAC,QANA,EAOAC,QAPA,QAQA,0BARA,C,CAUA;;AACA,8B,CAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC,wBADA;AAEAC;AACAC,oBADA;AAEAT,0BAFA;AAGAC,gCAHA;AAIAC,sBAJA;AAKAC,oBALA;AAMAC,4BANA;AAOAC,sBAPA;AAQAC,sBARA;AASAI,kCATA;AAUAC,sBAVA;AAWAC;AAXA,GAFA;AAeAC,SAfA,qBAeA;AACA;AACAN,4BADA;AAEAO;AAFA;AAIA;AACA,GArBA;AAsBAC,MAtBA,kBAsBA;AACA;AACAC,oBADA;AAEAC,kBAFA;AAGAC,mBAHA;AAIAC,sBAJA;AAKAC,wBALA;AAMAC,sBANA;AAOAC;AAPA;AASA,GAhCA;AAiCAC,cAjCA;AAkCAC;AACAC,eADA,uBACAC,CADA,EACA;AACA;AACA;AACAC;AACAC,4BADA;AAEAC;AAFA,SAGAC,IAHA,CAGA;AACAC;AACAC,iBACA;AAAAC;AAAA,YADA,EAEA,cAFA;AAIA,SALA;AAMA,OAVA;AAWAP;AACA,KAhBA;AAiBAQ,aAjBA,qBAiBAR,CAjBA,EAiBA;AACA;AACA,KAnBA;AAoBAS,gBApBA,wBAoBAC,CApBA,EAoBA;AACA;AACA,wDACA;AACA,OAHA,MAGA;AACA,0DACA;AACA;AACA;AACA;AACA;AACA,KA/BA;AAgCAC,cAhCA,wBAgCA;AAAA;;AACA;AACAC;AACAC,qBADA;AAEAC,0CAFA;AAGAC;AACAC;AADA;AAHA,SAOAZ,IAPA,CAOA;AACA;AACA;AACA;AACA;AACA;AACA,OAbA,EAcAa,KAdA,CAcA;AACAC;;AACA,sCACAC,aACA,GADA,GAEAA,qBAFA,GAGA,GAHA,GAIAA,yBALA;AAOA,OAvBA,EAwBAC,OAxBA,CAwBA;AACA;AACA,OA1BA;AA2BA,KA7DA;AA8DAC,iBA9DA,2BA8DA;AAAA;;AACA;AACA;AACA;AACAT;AACAC,4BADA;AAEAC,gDAFA;AAGAC;AACAC,6BACA;AAFA,aAHA;AAOA3B;AAAAiC;AAAA;AAPA,aASAlB,IATA,CASA;AACA;AACA,6CACA,kCADA;;AAGA;AACA;AACA,WAhBA,EAiBAa,KAjBA,CAiBA;AACA,2CACAE,wCADA;AAGA,WArBA,EAsBAC,OAtBA,CAsBA,cAtBA;AAuBA;AACA,OA1BA;AA2BA;AA3FA;AAlCA","names":["DxDataGrid","DxSearchPanel","DxPaging","DxPager","DxScrolling","DxColumn","DxExport","name","components","toolbar","contentLoading","popupAdd","popupEdit","created","icon","data","clientList","isAdd","isEdit","isLoading","currentViewRow","errorMessage","editInfo","computed","methods","EXPORT_DATA","e","exportDataGrid","worksheet","component","then","workbook","saveAs","type","VIEW_INFO","TOGGLE_POPUP","m","FETCH_LIST","axios","method","url","headers","Authorization","catch","console","error","finally","DELETE_CLIENT","id_client"],"sourceRoot":"src/views/Applications/Contact/Client","sources":["ClientList.vue"],"sourcesContent":["<template>\n  <div class=\"pm-page\">\n    <div class=\"pm-toolbar\">\n      <toolbar\n        pageName=\"Client Contact\"\n        @refreshInfo=\"FETCH_LIST()\"\n        :isNewBtn=\"true\"\n        newBtnLabel=\"New Client Info\"\n        @newBtnFn=\"TOGGLE_POPUP('add')\"\n      />\n    </div>\n    <div class=\"pm-page-container\">\n      <div class=\"page-content page-list\">\n        <DxDataGrid\n          id=\"contact-client-list\"\n          :data-source=\"clientList\"\n          :selection=\"{ mode: 'single' }\"\n          :hover-state-enabled=\"true\"\n          :allow-column-reordering=\"false\"\n          :show-borders=\"true\"\n          :show-row-lines=\"false\"\n          :row-alternation-enabled=\"true\"\n          @exporting=\"EXPORT_DATA\"\n        >\n          <DxColumn data-field=\"client_name\" caption=\"Client Name\" />\n          <DxColumn data-field=\"location\" caption=\"Location\" />\n          <DxColumn data-field=\"phone_no\" caption=\"Phone No\" />\n          <DxColumn :width=\"50\" caption=\"\" cell-template=\"option-btn-set\" />\n          <template #option-btn-set=\"{ data }\">\n            <div class=\"table-btn-group\">\n              <div class=\"table-btn\" v-on:click=\"VIEW_INFO(data)\">\n                <i class=\"las la-search blue\"></i>\n              </div>\n              <!-- <div class=\"table-btn\" v-on:click=\"TOGGLE_POPUP('edit', data)\">\n                <i class=\"las la-pen green\"></i>\n              </div>\n              <div class=\"table-btn\" v-on:click=\"DELETE_CLIENT(data)\">\n                <i class=\"las la-trash red\"></i>\n              </div> -->\n            </div>\n          </template>\n          <!-- Configuration goes here -->\n          <!-- <DxFilterRow :visible=\"true\" /> -->\n          <DxScrolling mode=\"standard\" />\n          <DxSearchPanel :visible=\"true\" />\n          <DxPaging :page-size=\"10\" :page-index=\"0\" />\n          <DxPager\n            :show-page-size-selector=\"true\"\n            :allowed-page-sizes=\"[5, 10, 20]\"\n            :show-navigation-buttons=\"true\"\n            :show-info=\"true\"\n            info-text=\"Page {0} of {1} ({2} items)\"\n          />\n          <DxExport :enabled=\"true\" />\n        </DxDataGrid>\n      </div>\n      <div class=\"page-content page-info border-left\">\n        <div class=\"pm-info-sidebar form\">\n          <p class=\"pm-section-label\">Details</p>\n          <!-- <div class=\"pm-sidebar-close-btn\" v-on:click=\"$emit('close-infobar')\">\n      <i class=\"las la-times\"></i>\n    </div> -->\n          <div class=\"form-item-container\">\n            <div class=\"input-set\">\n              <p class=\"label\">Client Name:</p>\n              <p class=\"info\">\n                {{ currentViewRow.client_name }}\n              </p>\n            </div>\n            <div class=\"input-set\">\n              <p class=\"label\">Address:</p>\n              <p class=\"info\">\n                {{ currentViewRow.address }}\n              </p>\n            </div>\n            <div class=\"input-set\">\n              <p class=\"label\">Location:</p>\n              <p class=\"info\">\n                {{ currentViewRow.location }}\n              </p>\n            </div>\n            <div class=\"input-set\">\n              <p class=\"label\">Domestic:</p>\n              <p class=\"info\" v-if=\"currentViewRow.is_domestic == true\">Yes</p>\n              <p class=\"info\" v-if=\"currentViewRow.is_domestic == false\">No</p>\n            </div>\n            <div class=\"input-set\">\n              <p class=\"label\">Phone:</p>\n              <p class=\"info\">\n                {{ currentViewRow.phone_no }}\n              </p>\n            </div>\n            <div class=\"input-set\">\n              <p class=\"label\">Email:</p>\n              <p class=\"info\">\n                {{ currentViewRow.email }}\n              </p>\n            </div>\n          </div>\n          <div class=\"form-button-container\">\n            <div class=\"button-set info-button-set\">\n              <v-ons-toolbar-button v-on:click=\"TOGGLE_POPUP('edit')\">\n                <i class=\"las la-pen\"></i>\n                <span>Edit</span>\n              </v-ons-toolbar-button>\n              <v-ons-toolbar-button class=\"red\" v-on:click=\"DELETE_CLIENT()\">\n                <i class=\"las la-trash\"></i>\n                <span>Delete</span>\n              </v-ons-toolbar-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <popupAdd\n      v-if=\"isAdd == true\"\n      @btn-cancel-add=\"TOGGLE_POPUP('add')\"\n      @refreshList=\"FETCH_LIST()\"\n    />\n    <popupEdit\n      v-if=\"isEdit == true\"\n      @btn-cancel-edit=\"TOGGLE_POPUP('edit')\"\n      @refreshList=\"FETCH_LIST()\"\n      v-bind:editInfo=\"editInfo\"\n    />\n    <contentLoading\n      text=\"Loading, please wait...\"\n      v-if=\"isLoading == true\"\n      color=\"#fc9b21\"\n    />\n  </div>\n</template> \n\n<script>\n//DataGrid\nimport \"devextreme/dist/css/dx.light.css\";\nimport { Workbook } from \"exceljs\";\nimport saveAs from \"file-saver\";\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\nimport {\n  DxDataGrid,\n  DxSearchPanel,\n  DxPaging,\n  DxPager,\n  DxScrolling,\n  DxColumn,\n  DxExport,\n} from \"devextreme-vue/data-grid\";\n\n//API\nimport axios from \"/axios.js\";\n\n//Pages & Structures\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupAdd from \"@/views/Applications/Contact/Client/client-add.vue\";\nimport popupEdit from \"@/views/Applications/Contact/Client/client-edit.vue\";\nimport contentLoading from \"@/components/app-structures/app-content-loading.vue\";\nimport clone from \"just-clone\";\n\nexport default {\n  name: \"ViewClientList\",\n  components: {\n    toolbar,\n    DxDataGrid,\n    DxSearchPanel,\n    DxPaging,\n    DxPager,\n    DxScrolling,\n    DxColumn,\n    DxExport,\n    contentLoading,\n    popupAdd,\n    popupEdit,\n  },\n  created() {\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"Client Contact\",\n      icon: \"/img/icon_menu/contact/client.png\",\n    });\n    if (this.$store.state.status.server == true) this.FETCH_LIST();\n  },\n  data() {\n    return {\n      clientList: [],\n      isAdd: false,\n      isEdit: false,\n      isLoading: false,\n      currentViewRow: {},\n      errorMessage: \"\",\n      editInfo: \"\",\n    };\n  },\n  computed: {},\n  methods: {\n    EXPORT_DATA(e) {\n      const workbook = new Workbook();\n      const worksheet = workbook.addWorksheet(\"Clients\");\n      exportDataGrid({\n        worksheet: worksheet,\n        component: e.component,\n      }).then(function () {\n        workbook.xlsx.writeBuffer().then(function (buffer) {\n          saveAs(\n            new Blob([buffer], { type: \"application/octet-stream\" }),\n            \"Clients.xlsx\"\n          );\n        });\n      });\n      e.cancel = true;\n    },\n    VIEW_INFO(e) {\n      this.currentViewRow = e.data;\n    },\n    TOGGLE_POPUP(m) {\n      if (m == \"add\") {\n        if (this.isAdd == true) this.isAdd = false;\n        else this.isAdd = true;\n      } else if (m == \"edit\") {\n        if (this.isEdit == true) this.isEdit = false;\n        else {\n          this.editInfo = clone(this.currentViewRow);\n          this.isEdit = true;\n        }\n      }\n    },\n    FETCH_LIST() {\n      this.isLoading = true;\n      axios({\n        method: \"get\",\n        url: \"/contact-client/client-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n      })\n        .then((res) => {\n          // console.log(res);\n          if (res.data) {\n            this.clientList = res.data;\n            this.currentViewRow = this.clientList[0];\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          this.$ons.notification.alert(\n            error.code +\n              \" \" +\n              error.response.status +\n              \" \" +\n              error.response.statusText\n          );\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n    DELETE_CLIENT() {\n      let rowID = this.currentViewRow.id_client;\n      this.$ons.notification.confirm(\"Confirm delete?\").then((res) => {\n        if (res == 1) {\n          axios({\n            method: \"delete\",\n            url: \"/contact-client/client-delete\",\n            headers: {\n              Authorization:\n                \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n            },\n            data: { id_client: rowID },\n          })\n            .then((res) => {\n              if (res.status == 200) {\n                this.$ons.notification.alert(\n                  \"Client contact delete successful\"\n                );\n                this.FETCH_LIST();\n              }\n            })\n            .catch((error) => {\n              this.$ons.notification.alert(\n                error.code + \" \" + error.response.status\n              );\n            })\n            .finally(() => {});\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n.pm-page {\n  border: 1px solid #e6e6e6;\n  border-width: 0 0 0 1px;\n  background-color: #ffffff;\n  height: 100%;\n  // display: grid;\n  // grid-template-rows: 61px auto;\n  // grid-template-columns: auto 360px;\n\n  .pm-page-container {\n    background-color: #ffffff;\n    // padding: 20px 20px 0px 20px;\n    height: calc(100vh - 180px);\n    display: flex;\n\n    .page-content {\n      width: 100%;\n      height: 100%;\n      margin: 0 auto;\n    }\n    .page-nodata {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    .page-list {\n      width: auto;\n      padding: 20px 20px 0 20px;\n    }\n    .page-info {\n      width: auto;\n    }\n  }\n}\n\n.pm-toolbar {\n  grid-column: span 2;\n}\n.border-left {\n  border: 1px solid #e6e6e6;\n  border-width: 0 0 0 1px;\n  padding: 0 !important;\n  height: calc(100vh - 139px) !important;\n}\n.pm-info-sidebar {\n  width: 360px;\n  height: 100%;\n  background: #fff;\n  padding: 0 20px;\n  overflow-y: scroll;\n  position: relative;\n  .pm-section-label {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 1.75em;\n    line-height: 16px;\n    letter-spacing: -0.08px;\n    color: $web-font-color-black;\n    padding: 20px 0 10px 0;\n    margin: 0;\n    user-select: text;\n  }\n  .form-item-container {\n    display: block;\n  }\n  .pm-sidebar-close-btn {\n    width: 40px;\n    height: 20px;\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #f3f0f0;\n    border-radius: 20px;\n    cursor: pointer;\n    i {\n      font-size: 1.75em;\n    }\n  }\n\n  .pm-sidebar-close-btn:hover {\n    background: #f6f6f6;\n  }\n  .pm-sidebar-close-btn:active {\n    background: #f3f0f0;\n  }\n}\n\n.pm-info-sidebar::-webkit-scrollbar {\n  display: none;\n}\n\n.form-item-container:last-child {\n  margin-bottom: 40px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}