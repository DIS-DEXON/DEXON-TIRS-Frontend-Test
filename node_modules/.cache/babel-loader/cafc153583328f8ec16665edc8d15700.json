{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//DxDataGrid\nimport \"devextreme/dist/css/dx.light.css\"; // import { Workbook } from \"exceljs\";\n// import saveAs from \"file-saver\";\n// import { exportDataGrid } from \"devextreme/excel_exporter\";\n\nimport { DxDataGrid, DxSearchPanel, // DxPaging,\n// DxPager,\nDxScrolling, DxColumn, DxEditing, DxRequiredRule // DxLookup,\n// DxExport,\n} from \"devextreme-vue/data-grid\"; //Components\n\nimport ChartProjectProgress from \"@/views/Applications/ExecutiveManagement/Charts/project-progress-line-nodetail.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupEdit from \"@/views/Applications/ProjectManager/Projects/project-edit.vue\";\nimport VueTabsChrome from \"vue-tabs-chrome\";\nimport pdfvuer from \"pdfvuer\";\nimport UnderDevelopment from \"@/components/unavailable-feature.vue\"; //API\n\nimport axios from \"/axios.js\";\nimport moment from \"moment\";\nexport default {\n  name: \"ViewProjectInfo\",\n  components: {\n    DxDataGrid,\n    DxSearchPanel,\n    // DxPaging,\n    // DxPager,\n    DxScrolling,\n    DxColumn,\n    DxEditing,\n    DxRequiredRule,\n    // DxLookup,\n    // DxExport,\n    toolbar,\n    popupEdit,\n    pdf: pdfvuer,\n    VueTabsChrome,\n    ChartProjectProgress,\n    UnderDevelopment\n  },\n\n  created() {\n    if (this.$store.state.status.server == true) {\n      this.GET_MONTH();\n      this.FETCH_INFO();\n    }\n  },\n\n  data() {\n    return {\n      info: {},\n      isEdit: false,\n      page: 1,\n      numPages: 0,\n      pdfdata: undefined,\n      fileUpload: \"\",\n      tabCurrent: \"progress\",\n      tabs: [{\n        label: \"Project Progress\",\n        key: \"progress\",\n        closable: false\n      }, {\n        label: \"Information Sheet (PDF)\",\n        key: \"pdf\",\n        closable: false\n      }, {\n        label: \"Attached Files\",\n        key: \"file\",\n        closable: false\n      }],\n      masterMonth: [],\n      progressChart: {},\n      progressList: {}\n    };\n  },\n\n  methods: {\n    FETCH_INFO() {\n      const id_project = this.$route.params;\n\n      if (id_project) {\n        axios({\n          method: \"post\",\n          url: \"/project-manager/project-info\",\n          headers: {\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n          },\n          data: id_project\n        }).then(res => {\n          // console.log(res);\n          if (res.status == 200 && res.data[0]) {\n            this.info = res.data[0];\n            this.GET_PDF();\n            this.FETCH_INFO_PROGRESS();\n          }\n        }).catch(error => {\n          this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n        }).finally(() => {});\n      }\n    },\n\n    FETCH_INFO_PROGRESS() {\n      const id = this.$route.params;\n\n      if (id) {\n        axios({\n          method: \"post\",\n          url: \"/current-sales/project-current-sales-progress-byid\",\n          headers: {\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n          },\n          data: {\n            project_id: id.id_project\n          }\n        }).then(res => {\n          // console.log(res);\n          if (res.status == 200 && res.data[0]) {\n            this.progressChart = res.data[0];\n            this.progressList = this.progressChart.progress_by_month;\n          }\n        }).catch(error => {\n          this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n        }).finally(() => {});\n      }\n    },\n\n    GET_MONTH() {\n      axios({\n        method: \"get\",\n        url: \"/global/master-month-quarter\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        }\n      }).then(res => {\n        // console.log(res.data);\n        this.masterMonth = res.data;\n      }).catch(error => {\n        this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(() => {});\n    },\n\n    GET_PDF() {\n      // console.log(axios);\n      if (this.info.pdf_path != null) {\n        var self = this;\n        var pdfPath = this.info.pdf_path;\n        self.pdfdata = pdfvuer.createLoadingTask(this.baseURL + pdfPath);\n        self.pdfdata.then(pdf => {\n          self.numPages = pdf.numPages; // console.log(\"pdf page count: \" + self.numPages);\n        });\n      }\n    },\n\n    UPLOAD_FILE() {\n      this.fileUpload = this.$refs.file.files[0]; // console.log(this.fileUpload);\n\n      if (this.fileUpload && this.fileUpload.type == \"application/pdf\") {\n        if (this.fileUpload.size < 20000000) {\n          axios({\n            method: \"post\",\n            url: \"/project-manager/project-upload-pdf\",\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n            },\n            data: {\n              id_project: this.info.id_project,\n              file: this.fileUpload\n            }\n          }).then(res => {\n            if (res.status == 200) {\n              this.FETCH_INFO();\n            }\n          }).catch(error => {\n            this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n          }).finally(() => {});\n        } else {\n          this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n          const file = document.getElementById(\"pdf-upload-btn\");\n          file.val = \"\";\n        }\n      } else {\n        this.$ons.notification.alert(\"Incorrect filetype. <br/> Only PDF file can be uploaded.\");\n        const file = document.getElementById(\"pdf-upload-btn\");\n        file.val = \"\";\n      }\n    },\n\n    DELETE_PDF() {\n      this.$ons.notification.confirm(\"Confirm delete PDF file?\").then(res => {\n        if (res == 1) {\n          if (this.info.id_pdf) {\n            axios({\n              method: \"delete\",\n              url: \"/project-manager/project-delete-pdf\",\n              headers: {\n                Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n              },\n              data: {\n                id_project: this.info.id_project,\n                id_pdf: this.info.id_pdf\n              }\n            }).then(res => {\n              if (res.status == 200) {\n                this.FETCH_INFO();\n              }\n            }).catch(error => {\n              this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n            }).finally(() => {});\n          }\n        }\n      });\n    },\n\n    DOWNLOAD_PDF() {\n      this.$ons.notification.confirm(\"You are downloading project information sheet of project no: \" + this.info.project_no).then(res => {\n        if (res == 1) {\n          const link = document.createElement(\"a\");\n          link.href = this.info.pdf_path;\n          link.download = \"project_information_\" + this.info.project_no + \".pdf\";\n          link.click();\n        }\n      });\n    },\n\n    DELETE_PROJECT() {\n      const id_project = this.$route.params;\n      this.$ons.notification.confirm(\"Confirm delete?\").then(res => {\n        if (res == 1) {\n          axios({\n            method: \"delete\",\n            url: \"/project-manager/project-delete\",\n            headers: {\n              Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n            },\n            data: id_project\n          }).then(res => {\n            if (res.status == 200) {\n              this.$ons.notification.alert(\"Project delete successful\");\n              this.$router.go(-1);\n            }\n          }).catch(error => {\n            this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n          }).finally(() => {});\n        }\n      });\n    },\n\n    TOGGLE_POPUP() {\n      this.isEdit = !this.isEdit;\n    },\n\n    CREATE_PROGRESS(e) {\n      e.data.id_project = this.$route.params.id_project; // console.log(e.data);\n\n      axios({\n        method: \"post\",\n        url: \"/current-sales/current-sales-add\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: e.data\n      }).then(res => {\n        if (res.status == 200) {\n          // console.log(\"ok\");\n          this.FETCH_INFO_PROGRESS();\n        }\n      }).catch(error => {\n        this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(() => {});\n    },\n\n    UPDATE_PROGRESS(e) {\n      e.data.id_project = this.$route.params.id_project; // console.log(e.data);\n\n      axios({\n        method: \"put\",\n        url: \"/current-sales/current-sales-edit\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: e.data\n      }).then(res => {\n        if (res.status == 200) {\n          // console.log(\"ok\");\n          this.FETCH_INFO_PROGRESS();\n        }\n      }).catch(error => {\n        this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(() => {});\n    },\n\n    DELETE_PROGRESS(e) {\n      // console.log(e.data);\n      axios({\n        method: \"delete\",\n        url: \"/current-sales/current-sales-delete\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: e.data\n      }).then(res => {\n        if (res.status == 200) {\n          // console.log(\"ok\");\n          this.FETCH_INFO_PROGRESS();\n        }\n      }).catch(error => {\n        this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(() => {});\n    }\n\n  },\n  computed: {\n    isShowDownloadBtn() {\n      if (this.info.pdf_path) return true;\n      return false;\n    },\n\n    jobConfirmDate() {\n      if (this.info.job_confirm_date) return moment(this.info.job_confirm_date).format(\"LL\");else return \"N/A\";\n    },\n\n    jobStartDate() {\n      if (this.info.job_start_date) return moment(this.info.job_start_date).format(\"LL\");else return \"N/A\";\n    },\n\n    jobEndDate() {\n      if (this.info.job_end_date) return moment(this.info.job_end_date).format(\"LL\");else return \"N/A\";\n    },\n\n    baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;else if (mode == \"prod\") return this.$store.state.modeURL.prod;else return console.log(\"develpment mode set up incorrect.\");\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["DxDataGrid","DxSearchPanel","DxScrolling","DxColumn","DxEditing","DxRequiredRule","name","components","toolbar","popupEdit","pdf","VueTabsChrome","ChartProjectProgress","UnderDevelopment","created","data","info","isEdit","page","numPages","pdfdata","fileUpload","tabCurrent","tabs","label","key","closable","masterMonth","progressChart","progressList","methods","FETCH_INFO","axios","method","url","headers","Authorization","then","res","catch","error","finally","FETCH_INFO_PROGRESS","project_id","GET_MONTH","GET_PDF","self","UPLOAD_FILE","id_project","file","DELETE_PDF","id_pdf","DOWNLOAD_PDF","confirm","link","DELETE_PROJECT","TOGGLE_POPUP","CREATE_PROGRESS","e","UPDATE_PROGRESS","DELETE_PROGRESS","computed","isShowDownloadBtn","jobConfirmDate","jobStartDate","jobEndDate","baseURL"],"sourceRoot":"src/views/Applications/ProjectManager/Projects","sources":["ProjectsInfo.vue"],"sourcesContent":["<template>\n  <div class=\"pm-page\">\n    <div class=\"pm-toolbar\">\n      <toolbar\n        :pageSubName=\"info.project_no + ' - ' + info.project_name\"\n        :isBack=\"true\"\n        :isEdit=\"true\"\n        :isDelete=\"true\"\n        :isPrint=\"false\"\n        :isDownload=\"isShowDownloadBtn\"\n        @isDeleteBtn=\"DELETE_PROJECT()\"\n        @isEditBtn=\"TOGGLE_POPUP()\"\n        @isDownloadBtn=\"DOWNLOAD_PDF()\"\n        @refreshInfo=\"FETCH_INFO()\"\n      />\n    </div>\n    <div class=\"pm-page-container\">\n      <div class=\"pm-project-info-sidebar form\">\n        <p class=\"pm-section-label\">Project Informations</p>\n        <div class=\"form-item-container\">\n          <div class=\"input-set\">\n            <p class=\"label\">Project Number:</p>\n            <p class=\"info\">\n              {{ info.project_no }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Project Name:</p>\n            <p class=\"info\">\n              {{ info.project_name }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Purchase Order Number:</p>\n            <p class=\"info\">\n              {{ info.po_no }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Quotation Number:</p>\n            <p class=\"info\">\n              {{ info.quotation_no }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Job Type:</p>\n            <p class=\"info\">\n              {{ info.job_type }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Service Type:</p>\n            <p class=\"info\">\n              {{ info.service_type_desc }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Project Value (Baht):</p>\n            <p class=\"info\">\n              {{\n                info.project_value\n                  .toFixed(2)\n                  .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")\n              }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Start Date:</p>\n            <p class=\"info\">\n              {{ jobStartDate }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">End Date:</p>\n            <p class=\"info\">\n              {{ jobEndDate }}\n            </p>\n          </div>\n\n          <p class=\"pm-section-label\">Client Contact</p>\n\n          <div class=\"input-set\">\n            <p class=\"label\">Client Name:</p>\n            <p class=\"info\">\n              {{ info.client_name }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Contact Name:</p>\n            <p class=\"info\">\n              {{ info.client_contact_name }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Phone:</p>\n            <p class=\"info\">\n              {{ info.client_contact_phone_no }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Email:</p>\n            <p class=\"info\">\n              {{ info.client_contact_email }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div class=\"tab-wrapper\">\n        <vue-tabs-chrome v-model=\"tabCurrent\" :tabs=\"tabs\" />\n      </div>\n      <div class=\"page-content\" v-if=\"this.tabCurrent == 'progress'\">\n        <ChartProjectProgress\n          :info=\"progressChart\"\n          v-if=\"this.progressChart\"\n          :key=\"this.progressChart\"\n        />\n        <DxDataGrid\n          id=\"project-manager-project-list\"\n          key-expr=\"id_current_sales\"\n          :data-source=\"progressList\"\n          :selection=\"{ mode: 'single' }\"\n          :hover-state-enabled=\"true\"\n          :allow-column-reordering=\"true\"\n          :show-borders=\"true\"\n          :show-row-lines=\"false\"\n          :row-alternation-enabled=\"true\"\n          @row-inserted=\"CREATE_PROGRESS\"\n          @row-updated=\"UPDATE_PROGRESS\"\n          @row-removed=\"DELETE_PROGRESS\"\n        >\n          <DxEditing\n            :allow-updating=\"true\"\n            :allow-deleting=\"true\"\n            :allow-adding=\"true\"\n            mode=\"row\"\n          />\n          <!-- <DxColumn\n            data-field=\"id_month\"\n            :width=\"100\"\n            caption=\"id_month\">  \n            <DxLookup\n              :data-source=\"masterMonth\"\n              display-expr=\"month_decs\"\n              value-expr=\"id_month\"\n            />\n          </DxColumn> -->\n          <DxColumn data-field=\"month_no\" :width=\"100\" caption=\"Month\">\n            <DxRequiredRule />\n          </DxColumn>\n          <DxColumn data-field=\"year_no\" :width=\"120\" caption=\"Year\">\n            <DxRequiredRule />\n          </DxColumn>\n          <DxColumn data-field=\"plan_progress\" caption=\"Plan (%)\">\n            <DxRequiredRule />\n          </DxColumn>\n          <DxColumn\n            data-field=\"plan_cumulative\"\n            caption=\"Plan Cumulative (%)\"\n            :allow-editing=\"false\"\n          />\n          <DxColumn data-field=\"actual_progress\" caption=\"Actual Progress (%)\">\n            <DxRequiredRule />\n          </DxColumn>\n          <DxColumn\n            data-field=\"actual_cumulative\"\n            caption=\"Actual Cumulative (%)\"\n            :allow-editing=\"false\"\n          />\n          <DxColumn\n            data-field=\"value_by_month\"\n            caption=\"Value (Baht/Month)\"\n            :allow-editing=\"false\"\n            format=\"#,##0.00\"\n          />\n\n          <!-- Configuration goes here -->\n          <!-- <DxFilterRow :visible=\"true\" /> -->\n          <DxScrolling mode=\"standard\" />\n          <DxSearchPanel :visible=\"true\" />\n          <!-- <DxExport :enabled=\"true\" /> -->\n        </DxDataGrid>\n      </div>\n      <div\n        class=\"page-content white-gradient-bg\"\n        v-if=\"this.tabCurrent == 'pdf'\"\n      >\n        <div class=\"upload-btn-wrapper\" v-if=\"!this.info.pdf_path\">\n          <input\n            type=\"file\"\n            id=\"pdf-upload-btn\"\n            style=\"display: none\"\n            ref=\"file\"\n            @change=\"UPLOAD_FILE()\"\n          />\n          <v-ons-toolbar-button v-if=\"!this.info.pdf_path\">\n            <label for=\"pdf-upload-btn\"\n              ><i class=\"las la-plus\"></i>Add PDF file</label\n            >\n          </v-ons-toolbar-button>\n          <v-ons-toolbar-button\n            class=\"btn-delete\"\n            v-if=\"this.info.pdf_path\"\n            v-on:click=\"DELETE_PDF()\"\n          >\n            <i class=\"las la-trash\"></i>\n          </v-ons-toolbar-button>\n        </div>\n        <div class=\"render-view\" v-if=\"numPages >= 1\">\n          <pdf\n            :src=\"pdfdata\"\n            :page=\"1\"\n            style=\"width: 100%; margin: 20px auto\"\n            :annotation=\"true\"\n            :resize=\"true\"\n          >\n          </pdf>\n        </div>\n        <div class=\"render-view\" v-if=\"numPages >= 2\">\n          <pdf\n            :src=\"pdfdata\"\n            :page=\"2\"\n            style=\"width: 100%; margin: 20px auto\"\n            :annotation=\"true\"\n            :resize=\"true\"\n          >\n          </pdf>\n        </div>\n        <div class=\"render-view\" v-if=\"numPages >= 3\">\n          <pdf\n            :src=\"pdfdata\"\n            :page=\"3\"\n            style=\"width: 100%; margin: 20px auto\"\n            :annotation=\"true\"\n            :resize=\"true\"\n          >\n          </pdf>\n        </div>\n      </div>\n      <div class=\"page-content\" v-if=\"this.tabCurrent == 'file'\">\n        <UnderDevelopment />\n      </div>\n    </div>\n    <popupEdit\n      v-if=\"isEdit == true\"\n      @closePopup=\"TOGGLE_POPUP()\"\n      @refreshInfo=\"FETCH_INFO()\"\n      :editInfo=\"info\"\n    />\n  </div>\n</template>\n\n<script>\n//DxDataGrid\nimport \"devextreme/dist/css/dx.light.css\";\n// import { Workbook } from \"exceljs\";\n// import saveAs from \"file-saver\";\n// import { exportDataGrid } from \"devextreme/excel_exporter\";\nimport {\n  DxDataGrid,\n  DxSearchPanel,\n  // DxPaging,\n  // DxPager,\n  DxScrolling,\n  DxColumn,\n  DxEditing,\n  DxRequiredRule,\n  // DxLookup,\n  // DxExport,\n} from \"devextreme-vue/data-grid\";\n\n//Components\nimport ChartProjectProgress from \"@/views/Applications/ExecutiveManagement/Charts/project-progress-line-nodetail.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupEdit from \"@/views/Applications/ProjectManager/Projects/project-edit.vue\";\nimport VueTabsChrome from \"vue-tabs-chrome\";\nimport pdfvuer from \"pdfvuer\";\nimport UnderDevelopment from \"@/components/unavailable-feature.vue\";\n\n//API\nimport axios from \"/axios.js\";\nimport moment from \"moment\";\nexport default {\n  name: \"ViewProjectInfo\",\n  components: {\n    DxDataGrid,\n    DxSearchPanel,\n    // DxPaging,\n    // DxPager,\n    DxScrolling,\n    DxColumn,\n    DxEditing,\n    DxRequiredRule,\n    // DxLookup,\n    // DxExport,\n    toolbar,\n    popupEdit,\n    pdf: pdfvuer,\n    VueTabsChrome,\n    ChartProjectProgress,\n    UnderDevelopment,\n  },\n  created() {\n    if (this.$store.state.status.server == true) {\n      this.GET_MONTH();\n      this.FETCH_INFO();\n    }\n  },\n  data() {\n    return {\n      info: {},\n      isEdit: false,\n      page: 1,\n      numPages: 0,\n      pdfdata: undefined,\n      fileUpload: \"\",\n      tabCurrent: \"progress\",\n      tabs: [\n        {\n          label: \"Project Progress\",\n          key: \"progress\",\n          closable: false,\n        },\n        {\n          label: \"Information Sheet (PDF)\",\n          key: \"pdf\",\n          closable: false,\n        },\n        {\n          label: \"Attached Files\",\n          key: \"file\",\n          closable: false,\n        },\n      ],\n      masterMonth: [],\n      progressChart: {},\n      progressList: {},\n    };\n  },\n  methods: {\n    FETCH_INFO() {\n      const id_project = this.$route.params;\n      if (id_project) {\n        axios({\n          method: \"post\",\n          url: \"/project-manager/project-info\",\n          headers: {\n            Authorization:\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n          },\n          data: id_project,\n        })\n          .then((res) => {\n            // console.log(res);\n\n            if (res.status == 200 && res.data[0]) {\n              this.info = res.data[0];\n              this.GET_PDF();\n              this.FETCH_INFO_PROGRESS();\n            }\n          })\n          .catch((error) => {\n            this.$ons.notification.alert(\n              error.code + \" \" + error.response.status + \" \" + error.message\n            );\n          })\n          .finally(() => {});\n      }\n    },\n    FETCH_INFO_PROGRESS() {\n      const id = this.$route.params;\n      if (id) {\n        axios({\n          method: \"post\",\n          url: \"/current-sales/project-current-sales-progress-byid\",\n          headers: {\n            Authorization:\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n          },\n          data: { project_id: id.id_project },\n        })\n          .then((res) => {\n            // console.log(res);\n\n            if (res.status == 200 && res.data[0]) {\n              this.progressChart = res.data[0];\n              this.progressList = this.progressChart.progress_by_month;\n            }\n          })\n          .catch((error) => {\n            this.$ons.notification.alert(\n              error.code + \" \" + error.response.status + \" \" + error.message\n            );\n          })\n          .finally(() => {});\n      }\n    },\n    GET_MONTH() {\n      axios({\n        method: \"get\",\n        url: \"/global/master-month-quarter\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n      })\n        .then((res) => {\n          // console.log(res.data);\n          this.masterMonth = res.data;\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {});\n    },\n    GET_PDF() {\n      // console.log(axios);\n      if (this.info.pdf_path != null) {\n        var self = this;\n        var pdfPath = this.info.pdf_path;\n        self.pdfdata = pdfvuer.createLoadingTask(this.baseURL + pdfPath);\n        self.pdfdata.then((pdf) => {\n          self.numPages = pdf.numPages;\n          // console.log(\"pdf page count: \" + self.numPages);\n        });\n      }\n    },\n    UPLOAD_FILE() {\n      this.fileUpload = this.$refs.file.files[0];\n      // console.log(this.fileUpload);\n      if (this.fileUpload && this.fileUpload.type == \"application/pdf\") {\n        if (this.fileUpload.size < 20000000) {\n          axios({\n            method: \"post\",\n            url: \"/project-manager/project-upload-pdf\",\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n              Authorization:\n                \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n            },\n            data: {\n              id_project: this.info.id_project,\n              file: this.fileUpload,\n            },\n          })\n            .then((res) => {\n              if (res.status == 200) {\n                this.FETCH_INFO();\n              }\n            })\n            .catch((error) => {\n              this.$ons.notification.alert(\n                error.code + \" \" + error.response.status + \" \" + error.message\n              );\n            })\n            .finally(() => {});\n        } else {\n          this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n          const file = document.getElementById(\"pdf-upload-btn\");\n          file.val = \"\";\n        }\n      } else {\n        this.$ons.notification.alert(\n          \"Incorrect filetype. <br/> Only PDF file can be uploaded.\"\n        );\n        const file = document.getElementById(\"pdf-upload-btn\");\n        file.val = \"\";\n      }\n    },\n    DELETE_PDF() {\n      this.$ons.notification.confirm(\"Confirm delete PDF file?\").then((res) => {\n        if (res == 1) {\n          if (this.info.id_pdf) {\n            axios({\n              method: \"delete\",\n              url: \"/project-manager/project-delete-pdf\",\n              headers: {\n                Authorization:\n                  \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n              },\n              data: {\n                id_project: this.info.id_project,\n                id_pdf: this.info.id_pdf,\n              },\n            })\n              .then((res) => {\n                if (res.status == 200) {\n                  this.FETCH_INFO();\n                }\n              })\n              .catch((error) => {\n                this.$ons.notification.alert(\n                  error.code + \" \" + error.response.status + \" \" + error.message\n                );\n              })\n              .finally(() => {});\n          }\n        }\n      });\n    },\n    DOWNLOAD_PDF() {\n      this.$ons.notification\n        .confirm(\n          \"You are downloading project information sheet of project no: \" +\n            this.info.project_no\n        )\n        .then((res) => {\n          if (res == 1) {\n            const link = document.createElement(\"a\");\n            link.href = this.info.pdf_path;\n            link.download =\n              \"project_information_\" + this.info.project_no + \".pdf\";\n            link.click();\n          }\n        });\n    },\n    DELETE_PROJECT() {\n      const id_project = this.$route.params;\n      this.$ons.notification.confirm(\"Confirm delete?\").then((res) => {\n        if (res == 1) {\n          axios({\n            method: \"delete\",\n            url: \"/project-manager/project-delete\",\n            headers: {\n              Authorization:\n                \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n            },\n            data: id_project,\n          })\n            .then((res) => {\n              if (res.status == 200) {\n                this.$ons.notification.alert(\"Project delete successful\");\n                this.$router.go(-1);\n              }\n            })\n            .catch((error) => {\n              this.$ons.notification.alert(\n                error.code + \" \" + error.response.status + \" \" + error.message\n              );\n            })\n            .finally(() => {});\n        }\n      });\n    },\n    TOGGLE_POPUP() {\n      this.isEdit = !this.isEdit;\n    },\n    CREATE_PROGRESS(e) {\n      e.data.id_project = this.$route.params.id_project;\n      // console.log(e.data);\n      axios({\n        method: \"post\",\n        url: \"/current-sales/current-sales-add\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: e.data,\n      })\n        .then((res) => {\n          if (res.status == 200) {\n            // console.log(\"ok\");\n            this.FETCH_INFO_PROGRESS();\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {});\n    },\n    UPDATE_PROGRESS(e) {\n      e.data.id_project = this.$route.params.id_project;\n      // console.log(e.data);\n      axios({\n        method: \"put\",\n        url: \"/current-sales/current-sales-edit\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: e.data,\n      })\n        .then((res) => {\n          if (res.status == 200) {\n            // console.log(\"ok\");\n            this.FETCH_INFO_PROGRESS();\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {});\n    },\n    DELETE_PROGRESS(e) {\n      // console.log(e.data);\n      axios({\n        method: \"delete\",\n        url: \"/current-sales/current-sales-delete\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: e.data,\n      })\n        .then((res) => {\n          if (res.status == 200) {\n            // console.log(\"ok\");\n            this.FETCH_INFO_PROGRESS();\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {});\n    },\n  },\n  computed: {\n    isShowDownloadBtn() {\n      if (this.info.pdf_path) return true;\n      return false;\n    },\n    jobConfirmDate() {\n      if (this.info.job_confirm_date)\n        return moment(this.info.job_confirm_date).format(\"LL\");\n      else return \"N/A\";\n    },\n    jobStartDate() {\n      if (this.info.job_start_date)\n        return moment(this.info.job_start_date).format(\"LL\");\n      else return \"N/A\";\n    },\n    jobEndDate() {\n      if (this.info.job_end_date)\n        return moment(this.info.job_end_date).format(\"LL\");\n      else return \"N/A\";\n    },\n    baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;\n      else if (mode == \"prod\") return this.$store.state.modeURL.prod;\n      else return console.log(\"develpment mode set up incorrect.\");\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n.pm-page {\n  border: 1px solid #e6e6e6;\n  border-width: 0 0 0 1px;\n  background-color: #ffffff;\n  width: 100%;\n  height: calc(100vh - 78px);\n  display: grid;\n  grid-template-rows: 61px calc(100vh - 61px);\n\n  .pm-page-container {\n    background-color: #d9d9d9;\n    display: grid;\n    grid-template-columns: 360px calc(100% - 360px);\n    grid-template-rows: 48px auto;\n    height: calc(100% - 78px);\n\n    @media screen and (max-width: 1024px) {\n      grid-template-columns: 100%;\n    }\n\n    .page-content {\n      // width: calc(100vw - 600px);\n      width: 100%;\n      height: calc(100vh - 139px);\n      // padding: 20px;\n      overflow-x: scroll;\n      overflow-y: scroll;\n      display: block;\n      background-color: #fff;\n      .render-view {\n        width: 100%;\n        height: 100%;\n        min-height: 1130px;\n        // min-width: 800px;\n        -o-object-fit: contain;\n        object-fit: contain;\n        max-width: 800px;\n        margin: 0 auto;\n        margin-bottom: 20px;\n        box-shadow: $web-card-shadow;\n        .pdf-view {\n          padding-top: 20px;\n        }\n\n        @media screen and (max-width: 1024px) {\n          max-width: 90%;\n        }\n      }\n      .render-view:last-child {\n        margin-bottom: 60px;\n      }\n    }\n\n    .page-content::-webkit-scrollbar {\n      display: none;\n    }\n  }\n}\nh1 {\n  font-size: 2em;\n}\n\n.pm-project-info-sidebar {\n  width: auto;\n  height: 100%;\n  background: #fff;\n  padding: 0 20px;\n  overflow-y: scroll;\n  border: 1px solid #e6e6e6;\n  border-width: 0 1px 0 0px;\n  grid-row: span 2;\n  @media screen and (max-width: 1024px) {\n    display: none;\n  }\n\n  .pm-section-label {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 1.75em;\n    line-height: 16px;\n    letter-spacing: -0.08px;\n    color: $web-font-color-black;\n    padding: 20px 0 10px 0;\n    margin: 0;\n    user-select: text;\n  }\n  .form-item-container {\n    display: block;\n    padding-bottom: 40px;\n  }\n}\n\n.pm-project-info-sidebar::-webkit-scrollbar {\n  display: none;\n}\n\n.input-set:last-child {\n  margin-bottom: 40px;\n}\n\n.upload-btn-wrapper {\n  width: 100%;\n  height: 100%;\n  background-color: #fff;\n}\n\n.dx-tabs {\n  border: none;\n}\n\n.tab-wrapper {\n  height: 48px;\n}\n.vue-tabs-chrome {\n  padding-top: 10px;\n  background-color: #d9d9d9;\n  font-size: 14px;\n}\n\n#project-manager-project-list {\n  padding: 0px 20px 80px 20px;\n  height: 600px;\n}\n\n.white-gradient-bg {\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 1) 0%,\n    rgba(235, 235, 235, 1) 6%,\n    rgba(217, 217, 217, 1) 100%\n  );\n}\n</style>"]},"metadata":{},"sourceType":"module"}