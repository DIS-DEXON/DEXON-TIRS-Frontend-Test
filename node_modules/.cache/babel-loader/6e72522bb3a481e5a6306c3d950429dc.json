{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"chart-project-progress\",\n  props: {\n    info: Object\n  },\n\n  data() {\n    return {\n      chartData: {\n        plan: [{\n          month: 1,\n          y: 1666666\n        }, {\n          month: 2,\n          y: 1666666\n        }, {\n          month: 3,\n          y: 1666666\n        }, {\n          month: 4,\n          y: 1666666\n        }, {\n          month: 5,\n          y: 1666666\n        }, {\n          month: 6,\n          y: 1666666\n        }, {\n          month: 7,\n          y: 1666666\n        }, {\n          month: 8,\n          y: 1666666\n        }, {\n          month: 9,\n          y: 1666666\n        }, {\n          month: 10,\n          y: 1666666\n        }, {\n          month: 11,\n          y: 1666666\n        }, {\n          month: 12,\n          y: 1666666\n        }]\n      },\n      chartOptions: {\n        chart: {\n          type: \"spline\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"PROJECT PROGRESS of \" + this.info.project_no\n        },\n        yAxis: {\n          title: {\n            text: \"PROGRESS (%)\"\n          },\n          labels: {\n            formatter: function () {\n              return this.value + \"%\";\n            },\n            style: {\n              fontSize: \"14\"\n            }\n          },\n          max: 100\n        },\n        xAxis: {\n          title: {// text: \"Months\",\n          },\n          labels: {\n            style: {\n              fontSize: \"14\"\n            }\n          },\n          categories: [],\n          //range: 1,\n          //tickInterval: 1,\n          plotLines: [{\n            value: \"Oct\",\n            dashStyle: \"dash\",\n            width: 2,\n            color: \"#d33\"\n          }]\n        },\n        legend: {\n          layout: \"horizontal\",\n          align: \"center\",\n          verticalAlign: \"bottom\"\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false\n            }\n          },\n          spline: {\n            dataLabels: {\n              enabled: true,\n              formatter: function () {\n                return this.point.y.toFixed(2) + \" %\";\n              }\n            }\n          }\n        },\n        series: [{\n          name: \"Planned\",\n          data: [],\n          color: \"#f00f78\",\n          lineWidth: 4,\n          marker: {\n            symbol: \"circle\"\n          },\n          dataLabels: {\n            enabled: false\n          }\n        }, {\n          name: \"Actual\",\n          data: [],\n          color: \"#1e1450\",\n          lineWidth: 4,\n          marker: {\n            symbol: \"circle\"\n          }\n        }],\n        tooltip: {\n          formatter: function () {\n            return \"The <b>\" + this.series.name + \" </b>progress for month <b>\" + this.x + \"</b> is <b>\" + this.y.toFixed(2) + \"%\";\n          }\n        },\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 500\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\"\n              }\n            }\n          }]\n        }\n      }\n    };\n  },\n\n  created() {},\n\n  methods: {},\n  computed: {},\n\n  mounted() {\n    if (this.info) {\n      var dataLength = this.info.progress_by_month;\n\n      if (dataLength) {\n        // console.log(\"more than one\");\n        for (var i = 0; i <= dataLength.length; i++) {\n          this.chartOptions.series[0].data.push(this.info.progress_by_month[i].plan_cumulative);\n          this.chartOptions.series[1].data.push(this.info.progress_by_month[i].actual_cumulative);\n          this.chartOptions.xAxis.categories.push(this.info.progress_by_month[i].month_abbr);\n        }\n      }\n    }\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;AAWA;AACAA,gCADA;AAEAC;AACAC;AADA,GAFA;;AAKAC;AACA;AACAC;AACAC,eACA;AACAC,kBADA;AAEAC;AAFA,SADA,EAKA;AACAD,kBADA;AAEAC;AAFA,SALA,EASA;AACAD,kBADA;AAEAC;AAFA,SATA,EAaA;AACAD,kBADA;AAEAC;AAFA,SAbA,EAiBA;AACAD,kBADA;AAEAC;AAFA,SAjBA,EAqBA;AACAD,kBADA;AAEAC;AAFA,SArBA,EAyBA;AACAD,kBADA;AAEAC;AAFA,SAzBA,EA6BA;AACAD,kBADA;AAEAC;AAFA,SA7BA,EAiCA;AACAD,kBADA;AAEAC;AAFA,SAjCA,EAqCA;AACAD,mBADA;AAEAC;AAFA,SArCA,EAyCA;AACAD,mBADA;AAEAC;AAFA,SAzCA,EA6CA;AACAD,mBADA;AAEAC;AAFA,SA7CA;AADA,OADA;AAqDAC;AACAC;AACAC;AADA,SADA;AAIAC;AACAC;AADA,SAJA;AAOAC;AACAC;AADA,SAPA;AAUAC;AACAF;AACAC;AADA,WADA;AAIAE;AACAC;AACA;AACA,aAHA;AAIAC;AACAC;AADA;AAJA,WAJA;AAYAC;AAZA,SAVA;AAwBAC;AACAR,kBACA;AADA,WADA;AAIAG;AACAE;AACAC;AADA;AADA,WAJA;AASAG,wBATA;AAUA;AACA;AACAC,sBACA;AACAC,wBADA;AAEAC,6BAFA;AAGAC,oBAHA;AAIAC;AAJA,WADA;AAZA,SAxBA;AA6CAC;AACAC,8BADA;AAEAC,yBAFA;AAGAC;AAHA,SA7CA;AAkDAC;AACAC;AACAC;AACAC;AADA;AADA,WADA;AAMAC;AACAC;AACAzB,2BADA;AAEAK;AACA;AACA;AAJA;AADA;AANA,SAlDA;AAiEAgB,iBACA;AACAjC,yBADA;AAEAG,kBAFA;AAGAwB,0BAHA;AAIAW,sBAJA;AAKAC;AACAC;AADA,WALA;AAQAH;AACAzB;AADA;AARA,SADA,EAaA;AACAZ,wBADA;AAEAG,kBAFA;AAGAwB,0BAHA;AAIAW,sBAJA;AAKAC;AACAC;AADA;AALA,SAbA,CAjEA;AAwFAC;AACAxB;AACA,mBACA,YACA,gBADA,GAEA,6BAFA,GAGA,MAHA,GAIA,aAJA,GAKA,iBALA,GAMA,GAPA;AASA;AAXA,SAxFA;AAqGAyB;AACAC,kBACA;AACAC;AACAC;AADA,aADA;AAIArC;AACAoB;AACAC,oCADA;AAEAC,+BAFA;AAGAC;AAHA;AADA;AAJA,WADA;AADA;AArGA;AArDA;AA4KA,GAlLA;;AAmLAe,cAnLA;;AAoLAC,aApLA;AAqLAC,cArLA;;AAsLAC;AACA;AACA;;AACA;AACA;AACA;AACA,gDACA,8CADA;AAGA,gDACA,gDADA;AAGA,kDACA,yCADA;AAGA;AACA;AACA;AACA;;AAxMA","names":["name","props","info","data","chartData","plan","month","y","chartOptions","chart","type","credits","enabled","title","text","yAxis","labels","formatter","style","fontSize","max","xAxis","categories","plotLines","value","dashStyle","width","color","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","spline","dataLabels","lineWidth","marker","symbol","tooltip","responsive","rules","condition","maxWidth","created","methods","computed","mounted"],"sourceRoot":"src/views/Applications/ExecutiveManagement/Charts","sources":["project-progress-line-nodetail.vue"],"sourcesContent":["<template>\n  <div class=\"project-progress-wrapper chart-item\">\n    <highcharts\n      class=\"chart-panel\"\n      :options=\"chartOptions\"\n      :key=\"this.info.id_project\"\n    ></highcharts>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"chart-project-progress\",\n  props: {\n    info: Object,\n  },\n  data() {\n    return {\n      chartData: {\n        plan: [\n          {\n            month: 1,\n            y: 1666666,\n          },\n          {\n            month: 2,\n            y: 1666666,\n          },\n          {\n            month: 3,\n            y: 1666666,\n          },\n          {\n            month: 4,\n            y: 1666666,\n          },\n          {\n            month: 5,\n            y: 1666666,\n          },\n          {\n            month: 6,\n            y: 1666666,\n          },\n          {\n            month: 7,\n            y: 1666666,\n          },\n          {\n            month: 8,\n            y: 1666666,\n          },\n          {\n            month: 9,\n            y: 1666666,\n          },\n          {\n            month: 10,\n            y: 1666666,\n          },\n          {\n            month: 11,\n            y: 1666666,\n          },\n          {\n            month: 12,\n            y: 1666666,\n          },\n        ],\n      },\n      chartOptions: {\n        chart: {\n          type: \"spline\",\n        },\n        credits: {\n          enabled: false,\n        },\n        title: {\n          text: \"PROJECT PROGRESS of \" + this.info.project_no,\n        },\n        yAxis: {\n          title: {\n            text: \"PROGRESS (%)\",\n          },\n          labels: {\n            formatter: function () {\n              return this.value + \"%\";\n            },\n            style: {\n              fontSize: \"14\",\n            },\n          },\n          max: 100,\n        },\n        xAxis: {\n          title: {\n            // text: \"Months\",\n          },\n          labels: {\n            style: {\n              fontSize: \"14\",\n            },\n          },\n          categories: [],\n          //range: 1,\n          //tickInterval: 1,\n          plotLines: [\n            {\n              value: \"Oct\",\n              dashStyle: \"dash\",\n              width: 2,\n              color: \"#d33\",\n            },\n          ],\n        },\n        legend: {\n          layout: \"horizontal\",\n          align: \"center\",\n          verticalAlign: \"bottom\",\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false,\n            },\n          },\n          spline: {\n            dataLabels: {\n              enabled: true,\n              formatter: function () {\n                return this.point.y.toFixed(2) + \" %\";\n              },\n            },\n          },\n        },\n        series: [\n          {\n            name: \"Planned\",\n            data: [],\n            color: \"#f00f78\",\n            lineWidth: 4,\n            marker: {\n              symbol: \"circle\",\n            },\n            dataLabels: {\n              enabled: false,\n            },\n          },\n          {\n            name: \"Actual\",\n            data: [],\n            color: \"#1e1450\",\n            lineWidth: 4,\n            marker: {\n              symbol: \"circle\",\n            },\n          },\n        ],\n        tooltip: {\n          formatter: function () {\n            return (\n              \"The <b>\" +\n              this.series.name +\n              \" </b>progress for month <b>\" +\n              this.x +\n              \"</b> is <b>\" +\n              this.y.toFixed(2) +\n              \"%\"\n            );\n          },\n        },\n        responsive: {\n          rules: [\n            {\n              condition: {\n                maxWidth: 500,\n              },\n              chartOptions: {\n                legend: {\n                  layout: \"horizontal\",\n                  align: \"center\",\n                  verticalAlign: \"bottom\",\n                },\n              },\n            },\n          ],\n        },\n      },\n    };\n  },\n  created() {},\n  methods: {},\n  computed: {},\n  mounted() {\n    if (this.info) {\n      var dataLength = this.info.progress_by_month;\n      if (dataLength) {\n        // console.log(\"more than one\");\n        for (var i = 0; i <= dataLength.length; i++) {\n          this.chartOptions.series[0].data.push(\n            this.info.progress_by_month[i].plan_cumulative\n          );\n          this.chartOptions.series[1].data.push(\n            this.info.progress_by_month[i].actual_cumulative\n          );\n          this.chartOptions.xAxis.categories.push(\n            this.info.progress_by_month[i].month_abbr\n          );\n        }\n      }\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.chart-item {\n  min-height: 200px;\n}\n.project-progress-wrapper {\n  display: block;\n  padding: 20px;\n  .chart-panel {\n    border: 1px solid #e6e6e6;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}