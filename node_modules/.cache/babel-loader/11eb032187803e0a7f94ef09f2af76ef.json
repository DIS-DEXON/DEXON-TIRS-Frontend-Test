{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//DataGrid\nimport \"devextreme/dist/css/dx.light.css\";\nimport { Workbook } from \"exceljs\";\nimport saveAs from \"file-saver\";\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\nimport { DxDataGrid, DxSearchPanel, DxPaging, DxPager, DxScrolling, DxColumn, DxExport } from \"devextreme-vue/data-grid\"; //Structures\n\nimport contentLoading from \"@/components/app-structures/app-content-loading.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupAdd from \"@/views/Applications/ExecutiveManagement/ProjectUpcoming/project-add.vue\"; //API\n\nimport axios from \"/axios.js\";\nexport default {\n  name: \"ViewProjectList\",\n  components: {\n    toolbar: toolbar,\n    DxDataGrid: DxDataGrid,\n    DxSearchPanel: DxSearchPanel,\n    DxPaging: DxPaging,\n    DxPager: DxPager,\n    DxScrolling: DxScrolling,\n    DxColumn: DxColumn,\n    DxExport: DxExport,\n    contentLoading: contentLoading,\n    popupAdd: popupAdd\n  },\n  created: function created() {\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"Upcoming Project\",\n      icon: \"/img/icon_menu/executive_management/upcoming.png\"\n    });\n    if (this.$store.state.status.server == true) this.FETCH_LIST();\n  },\n  data: function data() {\n    return {\n      projectList: \"\",\n      isAdd: false,\n      isEdit: false,\n      isLoading: false,\n      errorMessage: \"\",\n      editInfo: \"\"\n    };\n  },\n  computed: {},\n  methods: {\n    VIEW_INFO: function VIEW_INFO(e) {\n      var rowID = e.data.id_project;\n\n      if (rowID != null) {\n        this.$router.push(\"/projectmanager/projects/\" + rowID);\n      }\n    },\n    EXPORT_DATA: function EXPORT_DATA(e) {\n      var workbook = new Workbook();\n      var worksheet = workbook.addWorksheet(\"Projects\");\n      exportDataGrid({\n        worksheet: worksheet,\n        component: e.component\n      }).then(function () {\n        workbook.xlsx.writeBuffer().then(function (buffer) {\n          saveAs(new Blob([buffer], {\n            type: \"application/octet-stream\"\n          }), \"Projects.xlsx\");\n        });\n      });\n      e.cancel = true;\n    },\n    TOGGLE_POPUP: function TOGGLE_POPUP() {\n      this.isAdd = !this.isAdd;\n    },\n    FETCH_LIST: function FETCH_LIST() {\n      var _this = this;\n\n      this.isLoading = true;\n      axios({\n        method: \"get\",\n        url: \"/forecast-sales/forecast-sales-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        }\n      }).then(function (res) {\n        console.log(res);\n\n        if (res.status == 200 && res.data) {\n          _this.projectList = res.data;\n        }\n      }).catch(function (error) {\n        _this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(function () {\n        _this.isLoading = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA,SACAA,UADA,EAEAC,aAFA,EAGAC,QAHA,EAIAC,OAJA,EAKAC,WALA,EAMAC,QANA,EAOAC,QAPA,QAQA,0BARA,C,CAUA;;AACA;AACA;AACA,gG,CAEA;;AACA;AAEA;AACAC,yBADA;AAEAC;AACAC,oBADA;AAEAT,0BAFA;AAGAC,gCAHA;AAIAC,sBAJA;AAKAC,oBALA;AAMAC,4BANA;AAOAC,sBAPA;AAQAC,sBARA;AASAI,kCATA;AAUAC;AAVA,GAFA;AAcAC,SAdA,qBAcA;AACA;AACAL,8BADA;AAEAM;AAFA;AAIA;AACA,GApBA;AAqBAC,MArBA,kBAqBA;AACA;AACAC,qBADA;AAEAC,kBAFA;AAGAC,mBAHA;AAIAC,sBAJA;AAKAC,sBALA;AAMAC;AANA;AAQA,GA9BA;AA+BAC,cA/BA;AAgCAC;AACAC,aADA,qBACAC,CADA,EACA;AACA;;AACA;AACA;AACA;AACA,KANA;AAOAC,eAPA,uBAOAD,CAPA,EAOA;AACA;AACA;AACAE;AACAC,4BADA;AAEAC;AAFA,SAGAC,IAHA,CAGA;AACAC;AACAC,iBACA;AAAAC;AAAA,YADA,EAEA,eAFA;AAIA,SALA;AAMA,OAVA;AAWAR;AACA,KAtBA;AAuBAS,gBAvBA,0BAuBA;AACA;AACA,KAzBA;AA0BAC,cA1BA,wBA0BA;AAAA;;AACA;AACAC;AACAC,qBADA;AAEAC,kDAFA;AAGAC;AACAC;AADA;AAHA,SAOAV,IAPA,CAOA;AACAW;;AACA;AACA;AACA;AACA,OAZA,EAaAC,KAbA,CAaA;AACA,sCACAC,8DADA;AAGA,OAjBA,EAkBAC,OAlBA,CAkBA;AACA;AACA,OApBA;AAqBA;AAjDA;AAhCA","names":["DxDataGrid","DxSearchPanel","DxPaging","DxPager","DxScrolling","DxColumn","DxExport","name","components","toolbar","contentLoading","popupAdd","created","icon","data","projectList","isAdd","isEdit","isLoading","errorMessage","editInfo","computed","methods","VIEW_INFO","e","EXPORT_DATA","exportDataGrid","worksheet","component","then","workbook","saveAs","type","TOGGLE_POPUP","FETCH_LIST","axios","method","url","headers","Authorization","console","catch","error","finally"],"sourceRoot":"src/views/Applications/ExecutiveManagement/ProjectUpcoming","sources":["ProjectUpcomingList.vue"],"sourcesContent":["<template>\n  <div class=\"pm-page\">\n    <div class=\"pm-toolbar\">\n      <toolbar\n        pageName=\"Upcoming Project\"\n        @refreshInfo=\"FETCH_LIST()\"\n        :isNewBtn=\"true\"\n        newBtnLabel=\"New Project Info\"\n        @newBtnFn=\"TOGGLE_POPUP()\"\n      />\n    </div>\n    <div class=\"pm-page-container\">\n      <div class=\"page-container\">\n        <DxDataGrid\n          id=\"project-manager-project-list\"\n          :data-source=\"projectList\"\n          :selection=\"{ mode: 'single' }\"\n          :hover-state-enabled=\"true\"\n          :allow-column-reordering=\"true\"\n          :show-borders=\"true\"\n          :show-row-lines=\"false\"\n          :row-alternation-enabled=\"true\"\n          @exporting=\"EXPORT_DATA\"\n        >\n          <DxColumn data-field=\"project_name\" caption=\"Project Name\" />\n          <DxColumn data-field=\"client_name\" caption=\"Client Name\" />\n          <DxColumn data-field=\"service_type_desc\" caption=\"Service Type\" />\n          <DxColumn\n            data-field=\"confident_level\"\n            caption=\"Confident Level (%)\"\n          />\n          <DxColumn data-field=\"project_value\" caption=\"Forecast Value (MB)\" />\n\n          <DxColumn :width=\"50\" caption=\"\" cell-template=\"cell-button-set\" />\n          <template #cell-button-set=\"{ data }\">\n            <div class=\"table-btn-group\">\n              <div class=\"table-btn\" v-on:click=\"VIEW_INFO(data)\">\n                <i class=\"las la-search blue\"></i>\n              </div>\n            </div>\n          </template>\n          <!-- Configuration goes here -->\n          <!-- <DxFilterRow :visible=\"true\" /> -->\n          <DxScrolling mode=\"standard\" />\n          <DxSearchPanel :visible=\"true\" />\n          <DxPaging :page-size=\"10\" :page-index=\"0\" />\n          <DxPager\n            :show-page-size-selector=\"true\"\n            :allowed-page-sizes=\"[5, 10, 20]\"\n            :show-navigation-buttons=\"true\"\n            :show-info=\"true\"\n            info-text=\"Page {0} of {1} ({2} items)\"\n          />\n          <DxExport :enabled=\"true\" />\n        </DxDataGrid>\n      </div>\n    </div>\n    <popupAdd v-if=\"isAdd == true\" @closePopup=\"TOGGLE_POPUP()\" />\n    <contentLoading\n      text=\"Loading, please wait...\"\n      v-if=\"isLoading == true\"\n      color=\"#fc9b21\"\n    />\n  </div>\n</template> \n\n<script>\n//DataGrid\nimport \"devextreme/dist/css/dx.light.css\";\nimport { Workbook } from \"exceljs\";\nimport saveAs from \"file-saver\";\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\nimport {\n  DxDataGrid,\n  DxSearchPanel,\n  DxPaging,\n  DxPager,\n  DxScrolling,\n  DxColumn,\n  DxExport,\n} from \"devextreme-vue/data-grid\";\n\n//Structures\nimport contentLoading from \"@/components/app-structures/app-content-loading.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupAdd from \"@/views/Applications/ExecutiveManagement/ProjectUpcoming/project-add.vue\";\n\n//API\nimport axios from \"/axios.js\";\n\nexport default {\n  name: \"ViewProjectList\",\n  components: {\n    toolbar,\n    DxDataGrid,\n    DxSearchPanel,\n    DxPaging,\n    DxPager,\n    DxScrolling,\n    DxColumn,\n    DxExport,\n    contentLoading,\n    popupAdd,\n  },\n  created() {\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"Upcoming Project\",\n      icon: \"/img/icon_menu/executive_management/upcoming.png\",\n    });\n    if (this.$store.state.status.server == true) this.FETCH_LIST();\n  },\n  data() {\n    return {\n      projectList: \"\",\n      isAdd: false,\n      isEdit: false,\n      isLoading: false,\n      errorMessage: \"\",\n      editInfo: \"\",\n    };\n  },\n  computed: {},\n  methods: {\n    VIEW_INFO(e) {\n      const rowID = e.data.id_project;\n      if (rowID != null) {\n        this.$router.push(\"/projectmanager/projects/\" + rowID);\n      }\n    },\n    EXPORT_DATA(e) {\n      const workbook = new Workbook();\n      const worksheet = workbook.addWorksheet(\"Projects\");\n      exportDataGrid({\n        worksheet: worksheet,\n        component: e.component,\n      }).then(function () {\n        workbook.xlsx.writeBuffer().then(function (buffer) {\n          saveAs(\n            new Blob([buffer], { type: \"application/octet-stream\" }),\n            \"Projects.xlsx\"\n          );\n        });\n      });\n      e.cancel = true;\n    },\n    TOGGLE_POPUP() {\n      this.isAdd = !this.isAdd;\n    },\n    FETCH_LIST() {\n      this.isLoading = true;\n      axios({\n        method: \"get\",\n        url: \"/forecast-sales/forecast-sales-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n      })\n        .then((res) => {\n          console.log(res);\n          if (res.status == 200 && res.data) {\n            this.projectList = res.data;\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pm-page {\n  border: 1px solid #e6e6e6;\n  border-width: 0 0 0 1px;\n  background-color: #ffffff;\n  height: 100%;\n\n  .pm-page-container {\n    background-color: #ffffff;\n    padding: 20px 20px 0px 20px;\n    height: calc(100vh - 180px);\n\n    .page-container {\n      width: 100%;\n      height: 100%;\n      margin: 0 auto;\n    }\n  }\n}\n#data-grid {\n  height: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}