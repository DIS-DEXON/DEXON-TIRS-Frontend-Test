{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"/axios.js\";\nimport DxSelectBox from \"devextreme-vue/select-box\";\nimport clone from \"just-clone\";\nimport moment from \"moment\"; // import DxDateBox from \"devextreme-vue/date-box\";\n// import { DxCheckBox } from \"devextreme-vue/check-box\";\n\nexport default {\n  name: \"popup-add-visiting-record\",\n  components: {\n    DxSelectBox // DxCheckBox,\n    // DxDateBox,\n\n  },\n\n  data() {\n    return {\n      formData: {\n        doc_seq: \"\",\n        sign_dacon_id: JSON.parse(localStorage.getItem(\"user\")).id_user\n      },\n      formSelect: {\n        jobType: [\"H-N-RBI\", \"H-N-IDB\"],\n        visitObj: [\"Visiting\", \"Meeting\", \"Sales and Marketing\", \"Submit Document\", \"Receive Document\", \"Other\"],\n        now: new Date(),\n        clientList: [{}]\n      }\n    };\n  },\n\n  created() {\n    let id = JSON.parse(localStorage.getItem(\"user\"));\n    this.formData.id_user = id.id_user;\n    this.GET_LAST_SEQ_NO();\n    this.FETCH_DROPDOWN();\n  },\n\n  methods: {\n    GET_LAST_SEQ_NO() {\n      let tbname = \"VisitRecord\";\n      axios({\n        method: \"post\",\n        url: \"/global/last-doc-seq\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: {\n          table_name: tbname\n        }\n      }).then(res => {\n        if (res.status == 200 && res.data) {\n          var curSeq = res.data[0].last_doc_seq;\n\n          if (curSeq == null) {\n            this.formData.doc_seq = 1;\n          } else {\n            this.formData.doc_seq = curSeq + 1;\n          }\n\n          if (this.formData.doc_seq < 10) {\n            this.formData.doc_seq = \"0\" + this.formData.doc_seq.toString();\n          }\n\n          this.CAL_DOC_NO();\n        }\n      }).catch(error => {\n        this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(() => {});\n    },\n\n    CAL_DOC_NO() {\n      var month = moment().month() + 1;\n      var year = moment().year();\n      var monthyear;\n      var s_month = month.toString();\n      var s_year = year.toString();\n\n      if (s_month.length == 1) {\n        s_month = \"0\" + s_month;\n      }\n\n      s_year = s_year.slice(2, 4);\n      monthyear = s_month.toString() + \"-\" + s_year.toString();\n      this.formData.doc_no = \"AI-CVR-\" + monthyear + \"-\" + this.formData.doc_seq.toString();\n    },\n\n    SAVE() {\n      if (this.formData.id_client || this.formData.id_client >= -1) {\n        if (this.formData.client_location) {\n          if (this.formData.client_name) {\n            this.$ons.notification.confirm(\"Confirm save?\").then(res => {\n              if (res == 1) {\n                const data = clone(this.formData); // console.log(\"Adding formData\");\n                // console.log(data);\n\n                axios({\n                  method: \"post\",\n                  url: \"/visit-record/visit-record-add\",\n                  headers: {\n                    Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n                  },\n                  data: data\n                }).then(res => {\n                  // console.log(res.data);\n                  if (res.status == 200) {\n                    this.$ons.notification.alert(\"New Record Add successful\");\n                    this.$emit(\"close-popup\");\n                    const id = res.data[0].id_visit;\n\n                    if (id) {\n                      this.$router.push(\"/record/visiting/\" + id);\n                    }\n                  }\n                }).catch(error => {\n                  console.log(error);\n                }).finally(() => {});\n              }\n            });\n          } else {\n            this.$ons.notification.alert('\"Contact Name\"</br>field cannot be empty');\n          }\n        } else {\n          this.$ons.notification.alert('\"Location/Address\"</br>field cannot be empty');\n        }\n      } else {\n        this.$ons.notification.alert('\"Client Company\"</br>field cannot be empty');\n      }\n    },\n\n    CANCEL() {\n      if (this.formData != this.formData) {\n        this.$ons.notification.confirm(\"Your unsaved changes will be lost\").then(res => {\n          if (res == 1) {\n            this.$emit(\"closePopup\");\n          }\n        });\n      } else {\n        this.$emit(\"closePopup\");\n      }\n    },\n\n    FETCH_DROPDOWN() {\n      axios({\n        method: \"get\",\n        url: \"/project-manager/client-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        }\n      }).then(res => {\n        if (res.data) {\n          this.formSelect.clientList = res.data;\n        }\n      }).catch(error => {\n        console.log(error);\n        this.formSelect.clientList = [{\n          id_client: 9999,\n          client_name: \"No Data\"\n        }];\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA;AACA;AACA;AACA,4B,CACA;AACA;;AACA;AACAA,mCADA;AAEAC;AACAC,eADA,CAEA;AACA;;AAHA,GAFA;;AAOAC;AACA;AACAC;AACAC,mBADA;AAEAC;AAFA,OADA;AAKAC;AACAC,uCADA;AAEAC,mBACA,UADA,EAEA,SAFA,EAGA,qBAHA,EAIA,iBAJA,EAKA,kBALA,EAMA,OANA,CAFA;AAUAC,uBAVA;AAWAC;AAXA;AALA;AAmBA,GA3BA;;AA4BAC;AACA;AACA;AACA;AACA;AACA,GAjCA;;AAkCAC;AACAC;AACA;AACAC;AACAC,sBADA;AAEAC,mCAFA;AAGAC;AACAC;AADA,SAHA;AAMAhB;AACAiB;AADA;AANA,SAUAC,IAVA,CAUAC;AACA;AACA;;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA,OAvBA,EAwBAC,KAxBA,CAwBAC;AACA,qCACAA,8DADA;AAGA,OA5BA,EA6BAC,OA7BA,CA6BA,QA7BA;AA8BA,KAjCA;;AAkCAC;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACAC;AACA;;AACAC;AAEAC;AACA,6BACA,8DADA;AAEA,KAlDA;;AAmDAC;AACA;AACA;AACA;AACA;AACA;AACA,kDADA,CAEA;AACA;;AAEAf;AACAC,gCADA;AAEAC,uDAFA;AAGAC;AACAC,mCACA;AAFA,mBAHA;AAOAhB;AAPA,mBASAkB,IATA,CASAC;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,iBAnBA,EAoBAC,KApBA,CAoBAC;AACAO;AACA,iBAtBA,EAuBAN,OAvBA,CAuBA,QAvBA;AAwBA;AACA,aA/BA;AAgCA,WAjCA,MAiCA;AACA,yCACA,0CADA;AAGA;AACA,SAvCA,MAuCA;AACA,uCACA,8CADA;AAGA;AACA,OA7CA,MA6CA;AACA,qCACA,4CADA;AAGA;AACA,KAtGA;;AAuGAO;AACA;AACA,+BACAC,OADA,CACA,mCADA,EAEAZ,IAFA,CAEAC;AACA;AACA;AACA;AACA,SANA;AAOA,OARA,MAQA;AACA;AACA;AACA,KAnHA;;AAoHAY;AACAnB;AACAC,qBADA;AAEAC,2CAFA;AAGAC;AACAC;AADA;AAHA,SAOAE,IAPA,CAOAC;AACA;AACA;AACA;AACA,OAXA,EAYAC,KAZA,CAYAC;AACAO;AACA,sCACA;AAAAI;AAAAC;AAAA,SADA;AAGA,OAjBA;AAkBA;;AAvIA;AAlCA","names":["name","components","DxSelectBox","data","formData","doc_seq","sign_dacon_id","formSelect","jobType","visitObj","now","clientList","created","methods","GET_LAST_SEQ_NO","axios","method","url","headers","Authorization","table_name","then","res","catch","error","finally","CAL_DOC_NO","s_month","s_year","monthyear","SAVE","console","CANCEL","confirm","FETCH_DROPDOWN","id_client","client_name"],"sourceRoot":"src/views/Applications/Record/Visiting","sources":["visiting-add.vue"],"sourcesContent":["<template>\n  <div class=\"popup-wrapper\">\n    <div class=\"popup-card\">\n      <div class=\"popup-header\">\n        <label>Add New Record</label>\n        <span style=\"font-size: 14px; padding-right: 20px\"\n          >{{ formData.doc_no }}\n        </span>\n      </div>\n      <div class=\"popup-content form\">\n        <div class=\"form-item-container\">\n          <label class=\"section-text\">Client Informations</label>\n\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Company:</p>\n              <label class=\"star-label\"><i class=\"las la-asterisk\"></i></label>\n            </div>\n            <DxSelectBox\n              style=\"border: 0; font-size: 14px\"\n              :items=\"formSelect.clientList\"\n              placeholder=\"Select Client\"\n              v-model=\"formData.id_client\"\n              display-expr=\"client_name\"\n              value-expr=\"id_client\"\n              item-template=\"item\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Location/Address:</p>\n              <label class=\"star-label\"><i class=\"las la-asterisk\"></i></label>\n            </div>\n            <input\n              type=\"text\"\n              v-model=\"formData.client_location\"\n              placeholder=\"Location/Address\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Contact Name:</p>\n              <label class=\"star-label\"><i class=\"las la-asterisk\"></i></label>\n            </div>\n            <input\n              type=\"text\"\n              v-model=\"formData.client_name\"\n              placeholder=\"Contact Name\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Position:</p>\n            <input\n              type=\"text\"\n              v-model=\"formData.client_position\"\n              placeholder=\"Position\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Email:</p>\n            <input\n              type=\"text\"\n              v-model=\"formData.client_email\"\n              placeholder=\"Email\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Phone Number:</p>\n            <input\n              type=\"text\"\n              v-model=\"formData.client_phone_no\"\n              placeholder=\"Phone Number\"\n            />\n          </div>\n\n          <label class=\"section-text\">Visiting Objective</label>\n\n          <div class=\"checkbox-set\">\n            <v-ons-checkbox\n              input-id=\"incountry\"\n              v-model=\"formData.obj_visiting\"\n            >\n            </v-ons-checkbox>\n            <label for=\"incountry\">Visiting</label>\n          </div>\n          <div class=\"input-set\">\n            <input\n              type=\"text\"\n              v-model=\"formData.obj_visiting_comment\"\n              placeholder=\"Objective detail\"\n              v-if=\"formData.obj_visiting == true\"\n            />\n          </div>\n          <div class=\"checkbox-set\">\n            <v-ons-checkbox\n              input-id=\"obj_meeting\"\n              v-model=\"formData.obj_meeting\"\n            >\n            </v-ons-checkbox>\n            <label for=\"obj_meeting\">Meeting</label>\n          </div>\n          <div class=\"input-set\">\n            <input\n              type=\"text\"\n              v-model=\"formData.obj_meeting_comment\"\n              placeholder=\"Objective detail\"\n              v-if=\"formData.obj_meeting == true\"\n            />\n          </div>\n          <div class=\"checkbox-set\">\n            <v-ons-checkbox\n              input-id=\"obj_saleandmarketing\"\n              v-model=\"formData.obj_saleandmarketing\"\n            >\n            </v-ons-checkbox>\n            <label for=\"obj_saleandmarketing\">Sales and Marketing</label>\n          </div>\n          <div class=\"input-set\">\n            <input\n              type=\"text\"\n              v-model=\"formData.obj_saleandmarketing_comment\"\n              placeholder=\"Objective detail\"\n              v-if=\"formData.obj_saleandmarketing == true\"\n            />\n          </div>\n          <div class=\"checkbox-set\">\n            <v-ons-checkbox\n              input-id=\"submitdoc\"\n              v-model=\"formData.obj_submitdoc\"\n            >\n            </v-ons-checkbox>\n            <label for=\"submitdoc\">Submit Document</label>\n          </div>\n          <div class=\"input-set\">\n            <input\n              type=\"text\"\n              v-model=\"formData.obj_submitdoc_comment\"\n              placeholder=\"Objective detail\"\n              v-if=\"formData.obj_submitdoc == true\"\n            />\n          </div>\n          <div class=\"checkbox-set\">\n            <v-ons-checkbox\n              input-id=\"receivedoc\"\n              v-model=\"formData.obj_receivedoc\"\n            >\n            </v-ons-checkbox>\n            <label for=\"receivedoc\">Receive Document</label>\n          </div>\n          <div class=\"input-set\">\n            <input\n              type=\"text\"\n              v-model=\"formData.obj_receivedoc_comment\"\n              placeholder=\"Objective detail\"\n              v-if=\"formData.obj_receivedoc == true\"\n            />\n          </div>\n          <div class=\"checkbox-set\">\n            <v-ons-checkbox input-id=\"obj_other\" v-model=\"formData.obj_other\">\n            </v-ons-checkbox>\n            <label for=\"obj_other\">Other</label>\n          </div>\n          <div class=\"input-set\">\n            <input\n              type=\"text\"\n              v-model=\"formData.obj_other_comment\"\n              placeholder=\"Objective detail\"\n              v-if=\"formData.obj_other == true\"\n            />\n          </div>\n          <label class=\"section-text\">Visiting Note</label>\n          <div class=\"input-set\" style=\"margin-top: 10px\">\n            <textarea\n              v-model=\"formData.note\"\n              placeholder=\"Visiting Note\"\n              style=\"height: 80px; max-height: 200px\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <div class=\"button-set\">\n          <button class=\"blue\" v-on:click=\"SAVE()\">\n            <label>Save</label>\n          </button>\n          <button class=\"grey\" v-on:click=\"CANCEL()\">\n            <label>Cancel</label>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"/axios.js\";\nimport DxSelectBox from \"devextreme-vue/select-box\";\nimport clone from \"just-clone\";\nimport moment from \"moment\";\n// import DxDateBox from \"devextreme-vue/date-box\";\n// import { DxCheckBox } from \"devextreme-vue/check-box\";\nexport default {\n  name: \"popup-add-visiting-record\",\n  components: {\n    DxSelectBox,\n    // DxCheckBox,\n    // DxDateBox,\n  },\n  data() {\n    return {\n      formData: {\n        doc_seq: \"\",\n        sign_dacon_id: JSON.parse(localStorage.getItem(\"user\")).id_user,\n      },\n      formSelect: {\n        jobType: [\"H-N-RBI\", \"H-N-IDB\"],\n        visitObj: [\n          \"Visiting\",\n          \"Meeting\",\n          \"Sales and Marketing\",\n          \"Submit Document\",\n          \"Receive Document\",\n          \"Other\",\n        ],\n        now: new Date(),\n        clientList: [{}],\n      },\n    };\n  },\n  created() {\n    let id = JSON.parse(localStorage.getItem(\"user\"));\n    this.formData.id_user = id.id_user;\n    this.GET_LAST_SEQ_NO();\n    this.FETCH_DROPDOWN();\n  },\n  methods: {\n    GET_LAST_SEQ_NO() {\n      let tbname = \"VisitRecord\";\n      axios({\n        method: \"post\",\n        url: \"/global/last-doc-seq\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: {\n          table_name: tbname,\n        },\n      })\n        .then((res) => {\n          if (res.status == 200 && res.data) {\n            var curSeq = res.data[0].last_doc_seq;\n            if (curSeq == null) {\n              this.formData.doc_seq = 1;\n            } else {\n              this.formData.doc_seq = curSeq + 1;\n            }\n            if (this.formData.doc_seq < 10) {\n              this.formData.doc_seq = \"0\" + this.formData.doc_seq.toString();\n            }\n            this.CAL_DOC_NO();\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {});\n    },\n    CAL_DOC_NO() {\n      var month = moment().month() + 1;\n      var year = moment().year();\n      var monthyear;\n\n      var s_month = month.toString();\n      var s_year = year.toString();\n\n      if (s_month.length == 1) {\n        s_month = \"0\" + s_month;\n      }\n      s_year = s_year.slice(2, 4);\n\n      monthyear = s_month.toString() + \"-\" + s_year.toString();\n      this.formData.doc_no =\n        \"AI-CVR-\" + monthyear + \"-\" + this.formData.doc_seq.toString();\n    },\n    SAVE() {\n      if (this.formData.id_client || this.formData.id_client >= -1) {\n        if (this.formData.client_location) {\n          if (this.formData.client_name) {\n            this.$ons.notification.confirm(\"Confirm save?\").then((res) => {\n              if (res == 1) {\n                const data = clone(this.formData);\n                // console.log(\"Adding formData\");\n                // console.log(data);\n\n                axios({\n                  method: \"post\",\n                  url: \"/visit-record/visit-record-add\",\n                  headers: {\n                    Authorization:\n                      \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n                  },\n                  data: data,\n                })\n                  .then((res) => {\n                    // console.log(res.data);\n                    if (res.status == 200) {\n                      this.$ons.notification.alert(\"New Record Add successful\");\n                      this.$emit(\"close-popup\");\n                      const id = res.data[0].id_visit;\n                      if (id) {\n                        this.$router.push(\"/record/visiting/\" + id);\n                      }\n                    }\n                  })\n                  .catch((error) => {\n                    console.log(error);\n                  })\n                  .finally(() => {});\n              }\n            });\n          } else {\n            this.$ons.notification.alert(\n              '\"Contact Name\"</br>field cannot be empty'\n            );\n          }\n        } else {\n          this.$ons.notification.alert(\n            '\"Location/Address\"</br>field cannot be empty'\n          );\n        }\n      } else {\n        this.$ons.notification.alert(\n          '\"Client Company\"</br>field cannot be empty'\n        );\n      }\n    },\n    CANCEL() {\n      if (this.formData != this.formData) {\n        this.$ons.notification\n          .confirm(\"Your unsaved changes will be lost\")\n          .then((res) => {\n            if (res == 1) {\n              this.$emit(\"closePopup\");\n            }\n          });\n      } else {\n        this.$emit(\"closePopup\");\n      }\n    },\n    FETCH_DROPDOWN() {\n      axios({\n        method: \"get\",\n        url: \"/project-manager/client-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n      })\n        .then((res) => {\n          if (res.data) {\n            this.formSelect.clientList = res.data;\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          this.formSelect.clientList = [\n            { id_client: 9999, client_name: \"No Data\" },\n          ];\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n// .popup-content {\n// }\n.form-item-container {\n  width: auto;\n  display: grid;\n  grid-template-columns: repeat(2, 300px);\n  grid-gap: 10px;\n}\n\n.dx-icon {\n  font-size: 24px;\n  color: blue;\n}\n\n.form .form-item-container .checkbox-set {\n  margin: 0;\n  margin-left: 10px;\n  height: 34px;\n}\n\n.section-text {\n  grid-column: span 2;\n}\n\ntextarea {\n  min-width: 610px;\n  max-width: 610px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}