{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"/axios.js\"; // import clone from \"just-clone\";\n\nimport DxSelectBox from \"devextreme-vue/select-box\"; // import DxDateBox from \"devextreme-vue/date-box\";\n\nimport moment from \"moment\";\nexport default {\n  name: \"popup-add-travel-detail\",\n  components: {\n    DxSelectBox\n  },\n  props: {\n    travelDate: String\n  },\n\n  data() {\n    return {\n      formData: {\n        id_user: \"\",\n        record_no: \"\",\n        bill_date: \"\",\n        price: \"\",\n        doc_seq: \"\",\n        file: \"\"\n      },\n      formSelect: {\n        visit_record_list: [{\n          id_visit: 0,\n          visit_record_no: \"AI-CVR-22-09-01\",\n          client_name: \"PTTEP LNG\",\n          distance: 24\n        }]\n      }\n    };\n  },\n\n  created() {\n    let id = JSON.parse(localStorage.getItem(\"user\"));\n    this.formData.id_user = id.id_user;\n  },\n\n  computed: {\n    travel_date() {\n      if (this.travelDate) return moment(this.travelDate).format(\"LL\");\n      return null;\n    }\n\n  },\n  methods: {\n    SAVE() {\n      if (this.formData.bill_date) {\n        if (this.formData.price) {\n          this.$ons.notification.confirm(\"Confirm save?\").then(res => {\n            if (res == 1) {\n              const data = this.formData;\n              axios({\n                method: \"post\",\n                url: \"/fuel-bill/fuel-bill-add\",\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\",\n                  Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n                },\n                data: data\n              }).then(res => {\n                if (res.status == 200) {\n                  this.$ons.notification.alert(\"Bill Record Add successful\");\n                  this.$emit(\"btn-cancel-add\");\n                  this.$emit(\"refreshList\");\n                }\n              }).catch(error => {\n                this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n              }).finally(() => {});\n            }\n          });\n        } else {\n          this.$ons.notification.alert('\"Price\" field cannot be empty');\n        }\n      } else {\n        this.$ons.notification.alert('\"Bill Date\" field cannot be empty');\n      }\n    },\n\n    CANCEL() {\n      // console.log(this.formData);\n      let form = this.formData; // console.log(form);\n\n      if (this.formData != form) {\n        this.$ons.notification.confirm(\"Your unsaved changes will be lost\").then(res => {\n          if (res == 1) {\n            this.$emit(\"btn-cancel-add\");\n          }\n        });\n      } else {\n        this.$emit(\"btn-cancel-add\");\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,8B,CACA;;AACA,oD,CACA;;AACA;AACA;AACAA,iCADA;AAEAC;AAAAC;AAAA,GAFA;AAGAC;AACAC;AADA,GAHA;;AAMAC;AACA;AACAC;AACAC,mBADA;AAEAC,qBAFA;AAGAC,qBAHA;AAIAC,iBAJA;AAKAC,mBALA;AAMAC;AANA,OADA;AASAC;AACAC,4BACA;AACAC,qBADA;AAEAC,4CAFA;AAGAC,kCAHA;AAIAC;AAJA,SADA;AADA;AATA;AAoBA,GA3BA;;AA4BAC;AACA;AACA;AACA,GA/BA;;AAgCAC;AACAC;AACA;AACA;AACA;;AAJA,GAhCA;AAsCAC;AACAC;AACA;AACA;AACA;AACA;AACA;AACAC;AACAC,8BADA;AAEAC,+CAFA;AAGAC;AACA,uDADA;AAEAC,iCACA;AAHA,iBAHA;AAQAvB;AARA,iBAUAwB,IAVA,CAUAC;AACA;AACA;AACA;AACA;AACA;AACA,eAhBA,EAiBAC,KAjBA,CAiBAC;AACA,6CACAA,aACA,GADA,GAEAA,qBAFA,GAGA,GAHA,GAIAA,aALA;AAOA,eAzBA,EA0BAC,OA1BA,CA0BA,QA1BA;AA2BA;AACA,WA/BA;AAgCA,SAjCA,MAiCA;AACA;AACA;AACA,OArCA,MAqCA;AACA;AACA;AACA,KA1CA;;AA2CAC;AACA;AACA,+BAFA,CAGA;;AACA;AACA,+BACAC,OADA,CACA,mCADA,EAEAN,IAFA,CAEAC;AACA;AACA;AACA;AACA,SANA;AAOA,OARA,MAQA;AACA;AACA;AACA;;AA1DA;AAtCA","names":["name","components","DxSelectBox","props","travelDate","data","formData","id_user","record_no","bill_date","price","doc_seq","file","formSelect","visit_record_list","id_visit","visit_record_no","client_name","distance","created","computed","travel_date","methods","SAVE","axios","method","url","headers","Authorization","then","res","catch","error","finally","CANCEL","confirm"],"sourceRoot":"src/views/Applications/Record/Travel","sources":["travel-detail-add.vue"],"sourcesContent":["<template>\n  <div class=\"popup-wrapper\">\n    <div class=\"popup-card\">\n      <div class=\"popup-header\">\n        <label>Select Visit Record</label>\n        <span style=\"font-size: 14px; padding-right: 20px\"\n          >{{ formData.record_no }}\n        </span>\n      </div>\n      <div class=\"popup-content form\">\n        <div class=\"form-item-container\">\n          <div class=\"input-set\">\n            <p class=\"label\">Travel Date:</p>\n            <p class=\"info\">\n              {{ travel_date }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Visit Record:</p>\n            <DxSelectBox\n              style=\"border: 0; font-size: 14px\"\n              :items=\"formSelect.jobType\"\n              placeholder=\"Select Visit Record\"\n              v-model=\"formData.job_type\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <div class=\"button-set\">\n          <button class=\"blue\" v-on:click=\"SAVE()\">\n            <label>Save</label>\n          </button>\n          <button class=\"grey\" v-on:click=\"CANCEL()\">\n            <label>Cancel</label>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"/axios.js\";\n// import clone from \"just-clone\";\nimport DxSelectBox from \"devextreme-vue/select-box\";\n// import DxDateBox from \"devextreme-vue/date-box\";\nimport moment from \"moment\";\nexport default {\n  name: \"popup-add-travel-detail\",\n  components: { DxSelectBox },\n  props: {\n    travelDate: String,\n  },\n  data() {\n    return {\n      formData: {\n        id_user: \"\",\n        record_no: \"\",\n        bill_date: \"\",\n        price: \"\",\n        doc_seq: \"\",\n        file: \"\",\n      },\n      formSelect: {\n        visit_record_list: [\n          {\n            id_visit: 0,\n            visit_record_no: \"AI-CVR-22-09-01\",\n            client_name: \"PTTEP LNG\",\n            distance: 24,\n          },\n        ],\n      },\n    };\n  },\n  created() {\n    let id = JSON.parse(localStorage.getItem(\"user\"));\n    this.formData.id_user = id.id_user;\n  },\n  computed: {\n    travel_date() {\n      if (this.travelDate) return moment(this.travelDate).format(\"LL\");\n      return null;\n    },\n  },\n  methods: {\n    SAVE() {\n      if (this.formData.bill_date) {\n        if (this.formData.price) {\n          this.$ons.notification.confirm(\"Confirm save?\").then((res) => {\n            if (res == 1) {\n              const data = this.formData;\n              axios({\n                method: \"post\",\n                url: \"/fuel-bill/fuel-bill-add\",\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\",\n                  Authorization:\n                    \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n                },\n                data: data,\n              })\n                .then((res) => {\n                  if (res.status == 200) {\n                    this.$ons.notification.alert(\"Bill Record Add successful\");\n                    this.$emit(\"btn-cancel-add\");\n                    this.$emit(\"refreshList\");\n                  }\n                })\n                .catch((error) => {\n                  this.$ons.notification.alert(\n                    error.code +\n                      \" \" +\n                      error.response.status +\n                      \" \" +\n                      error.message\n                  );\n                })\n                .finally(() => {});\n            }\n          });\n        } else {\n          this.$ons.notification.alert('\"Price\" field cannot be empty');\n        }\n      } else {\n        this.$ons.notification.alert('\"Bill Date\" field cannot be empty');\n      }\n    },\n    CANCEL() {\n      // console.log(this.formData);\n      let form = this.formData;\n      // console.log(form);\n      if (this.formData != form) {\n        this.$ons.notification\n          .confirm(\"Your unsaved changes will be lost\")\n          .then((res) => {\n            if (res == 1) {\n              this.$emit(\"btn-cancel-add\");\n            }\n          });\n      } else {\n        this.$emit(\"btn-cancel-add\");\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n.popup-content {\n  // display: grid;\n  // grid-template-columns: 300px;\n  // grid-gap: 20px;\n  display: block;\n  padding-bottom: 40px !important;\n}\n.form-item-container {\n  width: auto;\n  display: block;\n  // grid-gap: 10px;\n}\n\np.info {\n  margin-bottom: 0 !important;\n}\n</style>"]},"metadata":{},"sourceType":"module"}