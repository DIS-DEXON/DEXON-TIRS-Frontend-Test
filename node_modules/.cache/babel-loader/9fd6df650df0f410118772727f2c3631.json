{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//DataGrid\nimport \"devextreme/dist/css/dx.light.css\";\nimport { Workbook } from \"exceljs\";\nimport saveAs from \"file-saver\";\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\nimport { DxDataGrid, DxSearchPanel, DxPaging, DxPager, DxScrolling, DxColumn, DxExport } from \"devextreme-vue/data-grid\"; //Structures\n\nimport contentLoading from \"@/components/app-structures/app-content-loading.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupAdd from \"@/views/Applications/Record/Visiting/visiting-add.vue\"; //API\n\nimport axios from \"/axios.js\";\nexport default {\n  name: \"ViewVisitingList\",\n  components: {\n    toolbar,\n    contentLoading,\n    popupAdd,\n    DxDataGrid,\n    DxSearchPanel,\n    DxPaging,\n    DxPager,\n    DxScrolling,\n    DxColumn,\n    DxExport\n  },\n\n  created() {\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"Visiting Record\",\n      icon: \"/img/icon_menu/record/visit.png\"\n    });\n    if (this.$store.state.status.server == true) this.FETCH_LIST();\n  },\n\n  data() {\n    return {\n      visitRecordList: [{}],\n      isAdd: false,\n      isEdit: false,\n      isLoading: false,\n      errorMessage: \"\",\n      editInfo: \"\"\n    };\n  },\n\n  methods: {\n    VIEW_INFO(item) {\n      const rowID = item.data.id_visit;\n\n      if (rowID != null) {\n        this.$router.push(\"/record/visiting/\" + rowID);\n      }\n    },\n\n    TOGGLE_POPUP() {\n      this.isAdd = !this.isAdd;\n    },\n\n    FETCH_LIST() {\n      this.isLoading = true;\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      const id_user = user.id_user;\n      axios({\n        method: \"post\",\n        url: \"/visit-record/visit-record-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: {\n          id_user\n        }\n      }).then(res => {\n        if (res.status == 200 && res.data) {\n          // console.log(res);\n          this.visitRecordList = res.data;\n        }\n      }).catch(error => {\n        this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n\n    EXPORT_DATA(e) {\n      const workbook = new Workbook();\n      const worksheet = workbook.addWorksheet(\"Projects\");\n      exportDataGrid({\n        worksheet: worksheet,\n        component: e.component\n      }).then(function () {\n        workbook.xlsx.writeBuffer().then(function (buffer) {\n          saveAs(new Blob([buffer], {\n            type: \"application/octet-stream\"\n          }), \"Projects.xlsx\");\n        });\n      });\n      e.cancel = true;\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;AACA;AACA,SACAA,UADA,EAEAC,aAFA,EAGAC,QAHA,EAIAC,OAJA,EAKAC,WALA,EAMAC,QANA,EAOAC,QAPA,QAQA,0BARA,C,CAUA;;AACA;AACA;AACA,6E,CAEA;;AACA;AAEA;AACAC,0BADA;AAEAC;AACAC,WADA;AAEAC,kBAFA;AAGAC,YAHA;AAIAX,cAJA;AAKAC,iBALA;AAMAC,YANA;AAOAC,WAPA;AAQAC,eARA;AASAC,YATA;AAUAC;AAVA,GAFA;;AAcAM;AACA;AACAL,6BADA;AAEAM;AAFA;AAIA;AACA,GApBA;;AAqBAC;AACA;AACAC,2BADA;AAEAC,kBAFA;AAGAC,mBAHA;AAIAC,sBAJA;AAKAC,sBALA;AAMAC;AANA;AAQA,GA9BA;;AA+BAC;AACAC;AACA;;AACA;AACA;AACA;AACA,KANA;;AAOAC;AACA;AACA,KATA;;AAUAC;AACA;AACA;AACA;AAEAC;AACAC,sBADA;AAEAC,8CAFA;AAGAC;AACAC;AADA,SAHA;AAMAf;AAAAgB;AAAA;AANA,SAQAC,IARA,CAQAC;AACA;AACA;AACA;AACA;AACA,OAbA,EAcAC,KAdA,CAcAC;AACA,qCACAA,8DADA;AAGA,OAlBA,EAmBAC,OAnBA,CAmBA;AACA;AACA,OArBA;AAsBA,KArCA;;AAsCAC;AACA;AACA;AACAC;AACAC,4BADA;AAEAC;AAFA,SAGAR,IAHA,CAGA;AACAS;AACAC,iBACA;AAAAC;AAAA,YADA,EAEA,eAFA;AAIA,SALA;AAMA,OAVA;AAWAC;AACA;;AArDA;AA/BA","names":["DxDataGrid","DxSearchPanel","DxPaging","DxPager","DxScrolling","DxColumn","DxExport","name","components","toolbar","contentLoading","popupAdd","created","icon","data","visitRecordList","isAdd","isEdit","isLoading","errorMessage","editInfo","methods","VIEW_INFO","TOGGLE_POPUP","FETCH_LIST","axios","method","url","headers","Authorization","id_user","then","res","catch","error","finally","EXPORT_DATA","exportDataGrid","worksheet","component","workbook","saveAs","type","e"],"sourceRoot":"src/views/Applications/Record/Visiting","sources":["VisitRecordList.vue"],"sourcesContent":["<template>\n  <div id=\"page-visit-record\">\n    <div class=\"pm-page\">\n      <div class=\"pm-toolbar\">\n        <toolbar\n          pageName=\"Visiting Record\"\n          @refreshInfo=\"FETCH_LIST()\"\n          :isNewBtn=\"true\"\n          newBtnLabel=\"New Visit Record\"\n          @newBtnFn=\"TOGGLE_POPUP()\"\n        />\n      </div>\n      <div class=\"pm-page-container\">\n        <div class=\"page-container\">\n          <DxDataGrid\n            id=\"record-visiting-list\"\n            :data-source=\"visitRecordList\"\n            :selection=\"{ mode: 'single' }\"\n            :hover-state-enabled=\"true\"\n            :allow-column-reordering=\"true\"\n            :show-borders=\"true\"\n            :show-row-lines=\"false\"\n            :row-alternation-enabled=\"true\"\n            :word-wrap-enabled=\"true\"\n            @exporting=\"EXPORT_DATA\"\n          >\n            <DxColumn data-field=\"doc_no\" caption=\"Record No.\" :width=\"150\" />\n            <DxColumn data-field=\"client_company_name\" caption=\"Client Name\" />\n            <DxColumn data-field=\"client_name\" caption=\"Client Contact Name\" />\n            <DxColumn data-field=\"objective\" caption=\"Objective\" />\n            <DxColumn\n              data-field=\"sign_client_signed\"\n              data-type=\"boolean\"\n              caption=\"Sign Status\"\n              trueText=\"Signed\"\n              falseText=\"Unsigned\"\n              :show-editor-always=\"false\"\n              :width=\"120\"\n            />\n            <DxColumn\n              data-field=\"create_at\"\n              data-type=\"date\"\n              format=\"dd MMM, yyyy\"\n              caption=\"Create Date\"\n              sort-order=\"desc\"\n              :width=\"120\"\n            />\n\n            <DxColumn :width=\"60\" caption=\"\" cell-template=\"cell-button-set\" />\n            <template #cell-button-set=\"{ data }\">\n              <div class=\"table-btn-group\">\n                <div class=\"table-btn\" v-on:click=\"VIEW_INFO(data)\">\n                  <i class=\"las la-search blue\"></i>\n                </div>\n              </div>\n            </template>\n            <!-- Configuration goes here -->\n            <!-- <DxFilterRow :visible=\"true\" /> -->\n            <DxScrolling mode=\"standard\" />\n            <DxSearchPanel :visible=\"true\" />\n            <DxPaging :page-size=\"10\" :page-index=\"0\" />\n            <DxPager\n              :show-page-size-selector=\"true\"\n              :allowed-page-sizes=\"[5, 10, 20]\"\n              :show-navigation-buttons=\"true\"\n              :show-info=\"true\"\n              info-text=\"Page {0} of {1} ({2} items)\"\n            />\n            <DxExport :enabled=\"true\" />\n          </DxDataGrid>\n        </div>\n      </div>\n      <popupAdd v-if=\"isAdd == true\" @closePopup=\"TOGGLE_POPUP()\" />\n\n      <contentLoading\n        text=\"Loading, please wait...\"\n        v-if=\"isLoading == true\"\n        color=\"#fbcb04\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n//DataGrid\nimport \"devextreme/dist/css/dx.light.css\";\nimport { Workbook } from \"exceljs\";\nimport saveAs from \"file-saver\";\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\nimport {\n  DxDataGrid,\n  DxSearchPanel,\n  DxPaging,\n  DxPager,\n  DxScrolling,\n  DxColumn,\n  DxExport,\n} from \"devextreme-vue/data-grid\";\n\n//Structures\nimport contentLoading from \"@/components/app-structures/app-content-loading.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupAdd from \"@/views/Applications/Record/Visiting/visiting-add.vue\";\n\n//API\nimport axios from \"/axios.js\";\n\nexport default {\n  name: \"ViewVisitingList\",\n  components: {\n    toolbar,\n    contentLoading,\n    popupAdd,\n    DxDataGrid,\n    DxSearchPanel,\n    DxPaging,\n    DxPager,\n    DxScrolling,\n    DxColumn,\n    DxExport,\n  },\n  created() {\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"Visiting Record\",\n      icon: \"/img/icon_menu/record/visit.png\",\n    });\n    if (this.$store.state.status.server == true) this.FETCH_LIST();\n  },\n  data() {\n    return {\n      visitRecordList: [{}],\n      isAdd: false,\n      isEdit: false,\n      isLoading: false,\n      errorMessage: \"\",\n      editInfo: \"\",\n    };\n  },\n  methods: {\n    VIEW_INFO(item) {\n      const rowID = item.data.id_visit;\n      if (rowID != null) {\n        this.$router.push(\"/record/visiting/\" + rowID);\n      }\n    },\n    TOGGLE_POPUP() {\n      this.isAdd = !this.isAdd;\n    },\n    FETCH_LIST() {\n      this.isLoading = true;\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      const id_user = user.id_user;\n\n      axios({\n        method: \"post\",\n        url: \"/visit-record/visit-record-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: { id_user },\n      })\n        .then((res) => {\n          if (res.status == 200 && res.data) {\n            // console.log(res);\n            this.visitRecordList = res.data;\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n    EXPORT_DATA(e) {\n      const workbook = new Workbook();\n      const worksheet = workbook.addWorksheet(\"Projects\");\n      exportDataGrid({\n        worksheet: worksheet,\n        component: e.component,\n      }).then(function () {\n        workbook.xlsx.writeBuffer().then(function (buffer) {\n          saveAs(\n            new Blob([buffer], { type: \"application/octet-stream\" }),\n            \"Projects.xlsx\"\n          );\n        });\n      });\n      e.cancel = true;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pm-page {\n  border: 1px solid #e6e6e6;\n  border-width: 0 0 0 1px;\n  background-color: #ffffff;\n  height: 100%;\n\n  .pm-page-container {\n    background-color: #ffffff;\n    padding: 20px 20px 0px 20px;\n    height: calc(100vh - 180px);\n\n    .page-container {\n      width: 100%;\n      height: 100%;\n      margin: 0 auto;\n    }\n  }\n}\n#data-grid {\n  height: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}