{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//DataGrid\nimport \"devextreme/dist/css/dx.light.css\";\nimport { Workbook } from \"exceljs\";\nimport saveAs from \"file-saver\";\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\nimport { DxDataGrid, DxSearchPanel, DxPaging, DxPager, DxScrolling, DxColumn, DxExport } from \"devextreme-vue/data-grid\"; //Structures\n\nimport contentLoading from \"@/components/app-structures/app-content-loading.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupAdd from \"@/views/Applications/ExecutiveManagement/WeeklyReport/weekly-add.vue\"; //API\n\nimport axios from \"/axios.js\";\nimport moment from \"moment\";\nimport clone from \"just-clone\";\nexport default {\n  name: \"ViewWeeklyReport\",\n  components: {\n    toolbar: toolbar,\n    DxDataGrid: DxDataGrid,\n    DxSearchPanel: DxSearchPanel,\n    DxPaging: DxPaging,\n    DxPager: DxPager,\n    DxScrolling: DxScrolling,\n    DxColumn: DxColumn,\n    DxExport: DxExport,\n    contentLoading: contentLoading,\n    popupAdd: popupAdd\n  },\n  created: function created() {\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"Weekly Report\",\n      icon: \"/img/icon_menu/executive_management/weekly.png\"\n    });\n    if (this.$store.state.status.server == true) this.FETCH_LIST();\n  },\n  computed: {\n    report_date: function report_date() {\n      return moment(this.currentViewRow.report_date).format(\"dddd, LL\");\n    }\n  },\n  data: function data() {\n    return {\n      isAdd: false,\n      isEdit: false,\n      isLoading: false,\n      currentViewRow: 1,\n      dataList: [{}]\n    };\n  },\n  methods: {\n    VIEW_INFO: function VIEW_INFO(e) {\n      var rowID = e.data.id_weekly;\n\n      if (rowID != null) {\n        this.$router.push(\"/executive-management/weekly-report/\" + rowID);\n      }\n    },\n    EXPORT_DATA: function EXPORT_DATA(e) {\n      var workbook = new Workbook();\n      var worksheet = workbook.addWorksheet(\"Projects\");\n      exportDataGrid({\n        worksheet: worksheet,\n        component: e.component\n      }).then(function () {\n        workbook.xlsx.writeBuffer().then(function (buffer) {\n          saveAs(new Blob([buffer], {\n            type: \"application/octet-stream\"\n          }), \"Projects.xlsx\");\n        });\n      });\n      e.cancel = true;\n    },\n    TOGGLE_POPUP: function TOGGLE_POPUP(m) {\n      if (m == \"add\") {\n        if (this.isAdd == true) this.isAdd = false;else this.isAdd = true;\n      } else if (m == \"edit\") {\n        if (this.isEdit == true) this.isEdit = false;else {\n          this.editInfo = clone(this.currentViewRow);\n          this.isEdit = true;\n        }\n      }\n    },\n    DELETE_ITEM: function DELETE_ITEM() {},\n    FETCH_LIST: function FETCH_LIST() {\n      var _this = this;\n\n      this.isLoading = true;\n      axios({\n        method: \"get\",\n        url: \"/weekly-report/weekly-report-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        }\n      }).then(function (res) {\n        // console.log(res);\n        if (res.status == 200 && res.data) {\n          _this.dataList = res.data;\n        }\n      }).catch(function (error) {\n        _this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(function () {\n        _this.isLoading = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;AACA,SACAA,UADA,EAEAC,aAFA,EAGAC,QAHA,EAIAC,OAJA,EAKAC,WALA,EAMAC,QANA,EAOAC,QAPA,QAQA,0BARA,C,CAUA;;AACA;AACA;AACA,4F,CAEA;;AACA;AACA;AACA;AAEA;AACAC,0BADA;AAEAC;AACAC,oBADA;AAEAT,0BAFA;AAGAC,gCAHA;AAIAC,sBAJA;AAKAC,oBALA;AAMAC,4BANA;AAOAC,sBAPA;AAQAC,sBARA;AASAI,kCATA;AAUAC;AAVA,GAFA;AAcAC,SAdA,qBAcA;AACA;AACAL,2BADA;AAEAM;AAFA;AAIA;AACA,GApBA;AAqBAC;AACAC,eADA,yBACA;AACA;AACA;AAHA,GArBA;AA0BAC,MA1BA,kBA0BA;AACA;AACAC,kBADA;AAEAC,mBAFA;AAGAC,sBAHA;AAIAC,uBAJA;AAKAC;AALA;AAOA,GAlCA;AAmCAC;AACAC,aADA,qBACAC,CADA,EACA;AACA;;AACA;AACA;AACA;AACA,KANA;AAOAC,eAPA,uBAOAD,CAPA,EAOA;AACA;AACA;AACAE;AACAC,4BADA;AAEAC;AAFA,SAGAC,IAHA,CAGA;AACAC;AACAC,iBACA;AAAAC;AAAA,YADA,EAEA,eAFA;AAIA,SALA;AAMA,OAVA;AAWAR;AACA,KAtBA;AAuBAS,gBAvBA,wBAuBAC,CAvBA,EAuBA;AACA;AACA,wDACA;AACA,OAHA,MAGA;AACA,0DACA;AACA;AACA;AACA;AACA;AACA,KAlCA;AAmCAC,eAnCA,yBAmCA,EAnCA;AAoCAC,cApCA,wBAoCA;AAAA;;AACA;AACAC;AACAC,qBADA;AAEAC,gDAFA;AAGAC;AACAC;AADA;AAHA,SAOAZ,IAPA,CAOA;AACA;AACA;AACA;AACA;AACA,OAZA,EAaAa,KAbA,CAaA;AACA,sCACAC,8DADA;AAGA,OAjBA,EAkBAC,OAlBA,CAkBA;AACA;AACA,OApBA;AAqBA;AA3DA;AAnCA","names":["DxDataGrid","DxSearchPanel","DxPaging","DxPager","DxScrolling","DxColumn","DxExport","name","components","toolbar","contentLoading","popupAdd","created","icon","computed","report_date","data","isAdd","isEdit","isLoading","currentViewRow","dataList","methods","VIEW_INFO","e","EXPORT_DATA","exportDataGrid","worksheet","component","then","workbook","saveAs","type","TOGGLE_POPUP","m","DELETE_ITEM","FETCH_LIST","axios","method","url","headers","Authorization","catch","error","finally"],"sourceRoot":"src/views/Applications/ExecutiveManagement/WeeklyReport","sources":["WeeklyReportList.vue"],"sourcesContent":["<template>\n  <div class=\"pm-page\">\n    <div class=\"pm-toolbar\">\n      <toolbar\n        pageName=\"Weekly Report\"\n        @refreshInfo=\"FETCH_LIST()\"\n        :isNewBtn=\"true\"\n        newBtnLabel=\"New Report\"\n        @newBtnFn=\"TOGGLE_POPUP('add')\"\n      />\n    </div>\n    <div class=\"pm-page-container\">\n      <div class=\"page-content page-list\">\n        <DxDataGrid\n          id=\"project-manager-project-list\"\n          :data-source=\"dataList\"\n          :selection=\"{ mode: 'single' }\"\n          :hover-state-enabled=\"true\"\n          :allow-column-reordering=\"true\"\n          :show-borders=\"true\"\n          :show-row-lines=\"false\"\n          :row-alternation-enabled=\"true\"\n          @exporting=\"EXPORT_DATA\"\n        >\n          <DxColumn\n            data-field=\"record_no\"\n            :width=\"150\"\n            caption=\"Record No.\"\n            sort-order=\"desc\"\n          />\n          <!-- <DxColumn data-field=\"report_message\" caption=\"Report Message\" /> -->\n          <!-- <DxColumn data-field=\"comment\" caption=\"Recommendation\" /> -->\n          <DxColumn\n            data-field=\"start_date\"\n            data-type=\"date\"\n            format=\"dd MMM, yyyy\"\n            caption=\"Start Date\"\n          />\n          <DxColumn\n            data-field=\"end_date\"\n            data-type=\"date\"\n            format=\"dd MMM, yyyy\"\n            caption=\"End Date\"\n          />\n          <DxColumn\n            data-field=\"week_no\"\n            caption=\"Week No.\"\n            :width=\"100\"\n            alignment=\"left\"\n          />\n\n          <DxColumn\n            data-field=\"created_by_name\"\n            :width=\"150\"\n            caption=\"Created By\"\n          />\n          <DxColumn\n            data-field=\"created_time\"\n            data-type=\"date\"\n            format=\"dd MMM, yyyy\"\n            caption=\"Created Date\"\n            :width=\"150\"\n          />\n          <DxColumn :width=\"50\" caption=\"\" cell-template=\"cell-button-set\" />\n          <template #cell-button-set=\"{ data }\">\n            <div class=\"table-btn-group\">\n              <div class=\"table-btn\" v-on:click=\"VIEW_INFO(data)\">\n                <i class=\"las la-search blue\"></i>\n              </div>\n            </div>\n          </template>\n          <!-- Configuration goes here -->\n          <!-- <DxFilterRow :visible=\"true\" /> -->\n          <DxScrolling mode=\"standard\" />\n          <DxSearchPanel :visible=\"true\" />\n          <DxPaging :page-size=\"10\" :page-index=\"0\" />\n          <DxPager\n            :show-page-size-selector=\"true\"\n            :allowed-page-sizes=\"[5, 10, 20]\"\n            :show-navigation-buttons=\"true\"\n            :show-info=\"true\"\n            info-text=\"Page {0} of {1} ({2} items)\"\n          />\n          <DxExport :enabled=\"true\" />\n        </DxDataGrid>\n      </div>\n    </div>\n    <popupAdd\n      v-if=\"isAdd == true\"\n      @btn-cancel-add=\"TOGGLE_POPUP('add')\"\n      @refreshInfo=\"FETCH_LIST()\"\n    />\n    <contentLoading\n      text=\"Loading, please wait...\"\n      v-if=\"isLoading == true\"\n      color=\"#fc9b21\"\n    />\n  </div>\n</template> \n\n<script>\n//DataGrid\nimport \"devextreme/dist/css/dx.light.css\";\nimport { Workbook } from \"exceljs\";\nimport saveAs from \"file-saver\";\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\nimport {\n  DxDataGrid,\n  DxSearchPanel,\n  DxPaging,\n  DxPager,\n  DxScrolling,\n  DxColumn,\n  DxExport,\n} from \"devextreme-vue/data-grid\";\n\n//Structures\nimport contentLoading from \"@/components/app-structures/app-content-loading.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupAdd from \"@/views/Applications/ExecutiveManagement/WeeklyReport/weekly-add.vue\";\n\n//API\nimport axios from \"/axios.js\";\nimport moment from \"moment\";\nimport clone from \"just-clone\";\n\nexport default {\n  name: \"ViewWeeklyReport\",\n  components: {\n    toolbar,\n    DxDataGrid,\n    DxSearchPanel,\n    DxPaging,\n    DxPager,\n    DxScrolling,\n    DxColumn,\n    DxExport,\n    contentLoading,\n    popupAdd,\n  },\n  created() {\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"Weekly Report\",\n      icon: \"/img/icon_menu/executive_management/weekly.png\",\n    });\n    if (this.$store.state.status.server == true) this.FETCH_LIST();\n  },\n  computed: {\n    report_date() {\n      return moment(this.currentViewRow.report_date).format(\"dddd, LL\");\n    },\n  },\n  data() {\n    return {\n      isAdd: false,\n      isEdit: false,\n      isLoading: false,\n      currentViewRow: 1,\n      dataList: [{}],\n    };\n  },\n  methods: {\n    VIEW_INFO(e) {\n      const rowID = e.data.id_weekly;\n      if (rowID != null) {\n        this.$router.push(\"/executive-management/weekly-report/\" + rowID);\n      }\n    },\n    EXPORT_DATA(e) {\n      const workbook = new Workbook();\n      const worksheet = workbook.addWorksheet(\"Projects\");\n      exportDataGrid({\n        worksheet: worksheet,\n        component: e.component,\n      }).then(function () {\n        workbook.xlsx.writeBuffer().then(function (buffer) {\n          saveAs(\n            new Blob([buffer], { type: \"application/octet-stream\" }),\n            \"Projects.xlsx\"\n          );\n        });\n      });\n      e.cancel = true;\n    },\n    TOGGLE_POPUP(m) {\n      if (m == \"add\") {\n        if (this.isAdd == true) this.isAdd = false;\n        else this.isAdd = true;\n      } else if (m == \"edit\") {\n        if (this.isEdit == true) this.isEdit = false;\n        else {\n          this.editInfo = clone(this.currentViewRow);\n          this.isEdit = true;\n        }\n      }\n    },\n    DELETE_ITEM() {},\n    FETCH_LIST() {\n      this.isLoading = true;\n      axios({\n        method: \"get\",\n        url: \"/weekly-report/weekly-report-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n      })\n        .then((res) => {\n          // console.log(res);\n          if (res.status == 200 && res.data) {\n            this.dataList = res.data;\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n.pm-page {\n  border: 1px solid #e6e6e6;\n  border-width: 0 0 0 1px;\n  background-color: #ffffff;\n  height: 100%;\n  // display: grid;\n  // grid-template-rows: 61px auto;\n  // grid-template-columns: auto 360px;\n\n  .pm-page-container {\n    background-color: #ffffff;\n    // padding: 20px 20px 0px 20px;\n    height: calc(100vh - 180px);\n    display: flex;\n\n    .page-content {\n      width: 100%;\n      height: 100%;\n      margin: 0 auto;\n    }\n    .page-nodata {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    .page-list {\n      width: auto;\n      padding: 20px 20px 0 20px;\n    }\n    .page-info {\n      width: auto;\n    }\n  }\n}\n.border-left {\n  border: 1px solid #e6e6e6;\n  border-width: 0 0 0 1px;\n  padding: 0 !important;\n  height: calc(100vh - 139px) !important;\n}\n.pm-info-sidebar {\n  width: 360px;\n  height: 100%;\n  background: #fff;\n  padding: 0 20px;\n  overflow-y: scroll;\n  position: relative;\n\n  .pm-section-label {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 1.75em;\n    line-height: 16px;\n    letter-spacing: -0.08px;\n    color: $web-font-color-black;\n    padding: 20px 0 10px 0;\n    margin: 0;\n    user-select: text;\n  }\n  .form-item-container {\n    display: block;\n  }\n}\n\n.pm-info-sidebar::-webkit-scrollbar {\n  display: none;\n}\n\n.form-item-container:last-child {\n  margin-bottom: 40px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}