{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport axios from \"/axios.js\";\nexport default {\n  name: \"chart-forecast-sales-pie\",\n\n  created() {\n    this.FETCH_DATA();\n  },\n\n  data() {\n    return {\n      chartData: {},\n      chartOptions: {\n        chart: {\n          type: \"pie\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"THE TOTAL FORECAST OF REVENUE BY SERVICE TYPE IN 2023\"\n        },\n        yAxis: {\n          title: {\n            text: \"Value (Baht)\"\n          }\n        },\n        xAxis: {\n          // categories: [\"Jan\", \"Feb\"],\n          title: {// text: \"Month\",\n          }\n        },\n        legend: {\n          layout: \"vertical\",\n          align: \"right\",\n          verticalAlign: \"middle\"\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false\n            },\n            pointStart: 1\n          },\n          pie: {\n            allowPointSelect: true,\n            cursor: \"pointer\",\n            dataLabels: {\n              enabled: true,\n              style: {\n                fontSize: \"14px\"\n              },\n              formatter: function () {\n                return this.point.name + \": \" + (this.point.y / 1000000).toFixed(2) + \"MB\";\n              }\n            }\n          }\n        },\n        series: [{\n          name: \"Service\",\n          colorByPoint: true,\n          data: [{\n            name: \"IDB\",\n            y: 0,\n            color: \"#3a0ca3\"\n          }, {\n            name: \"RBI\",\n            y: 0,\n            color: \"#7209b7\"\n          }, {\n            name: \"FFS\",\n            y: 0,\n            color: \"#4cc9f0\"\n          }, {\n            name: \"ITP\",\n            y: 0,\n            color: \"#4361ee\"\n          }]\n        }],\n        tooltip: {\n          //pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\",\n          formatter: function () {\n            return \"<b>\" + this.point.name + \"<br>\" + \"</b><br>Value: \" + (this.y / 1000000).toFixed(2) + \"MB (\" + this.point.percentage.toFixed(2) + \"%)\";\n          }\n        },\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 500\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\"\n              }\n            }\n          }]\n        }\n      }\n    };\n  },\n\n  methods: {\n    FETCH_DATA() {\n      axios({\n        method: \"post\",\n        url: \"forecast-sales/forecast-sales-group-sumbytype\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: {\n          year_no: moment().year() + 1\n        }\n      }).then(res => {\n        // console.log(res);\n        if (res.data) {\n          this.chartData = res.data;\n\n          if (this.chartData) {\n            this.chartOptions.series[0].data[0].y = this.chartData[0].y;\n            this.chartOptions.series[0].data[1].y = this.chartData[1].y;\n            this.chartOptions.series[0].data[2].y = this.chartData[2].y;\n            this.chartOptions.series[0].data[3].y = this.chartData[3].y;\n          }\n        }\n      }).catch(error => {\n        this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(() => {});\n    }\n\n  },\n  computed: {}\n};","map":{"version":3,"mappings":";;;;;;;AAQA;AACA;AAEA;AACAA,kCADA;;AAEAC;AACA;AACA,GAJA;;AAKAC;AACA;AACAC,mBADA;AAEAC;AACAC;AACAC;AADA,SADA;AAIAC;AACAC;AADA,SAJA;AAOAC;AACAC;AADA,SAPA;AAUAC;AACAF;AACAC;AADA;AADA,SAVA;AAeAE;AACA;AAEAH,kBACA;AADA;AAHA,SAfA;AAsBAI;AACAC,4BADA;AAEAC,wBAFA;AAGAC;AAHA,SAtBA;AA2BAC;AACAC;AACAC;AACAC;AADA,aADA;AAIAC;AAJA,WADA;AAOAC;AACAC,kCADA;AAEAC,6BAFA;AAGAC;AACAjB,2BADA;AAEAkB;AACAC;AADA,eAFA;AAKAC;AACA,uBACA,kBACA,IADA,GAEA,mCAFA,GAGA,IAJA;AAMA;AAZA;AAHA;AAPA,SA3BA;AAqDAV,iBACA;AACAlB,yBADA;AAEA6B,4BAFA;AAGA3B,iBACA;AACAF,uBADA;AAEA8B,gBAFA;AAGAC;AAHA,WADA,EAMA;AACA/B,uBADA;AAEA8B,gBAFA;AAGAC;AAHA,WANA,EAWA;AACA/B,uBADA;AAEA8B,gBAFA;AAGAC;AAHA,WAXA,EAgBA;AACA/B,uBADA;AAEA8B,gBAFA;AAGAC;AAHA,WAhBA;AAHA,SADA,CArDA;AAiFAC;AACA;AACAJ;AACA,mBACA,QACA,eADA,GAEA,MAFA,GAGA,iBAHA,GAIA,6BAJA,GAKA,MALA,GAMA,gCANA,GAOA,IARA;AAUA;AAbA,SAjFA;AAgGAK;AACAC,kBACA;AACAC;AACAC;AADA,aADA;AAIAhC;AACAS;AACAC,oCADA;AAEAC,+BAFA;AAGAC;AAHA;AADA;AAJA,WADA;AADA;AAhGA;AAFA;AAoHA,GA1HA;;AA2HAqB;AACAC;AACAC;AACAC,sBADA;AAEAC,4DAFA;AAGAC;AACAC;AADA,SAHA;AAMAzC;AACA0C;AADA;AANA,SAUAC,IAVA,CAUAC;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OArBA,EAsBAC,KAtBA,CAsBAC;AACA,qCACAA,8DADA;AAGA,OA1BA,EA2BAC,OA3BA,CA2BA,QA3BA;AA4BA;;AA9BA,GA3HA;AA2JAC;AA3JA","names":["name","created","data","chartData","chartOptions","chart","type","credits","enabled","title","text","yAxis","xAxis","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","pie","allowPointSelect","cursor","dataLabels","style","fontSize","formatter","colorByPoint","y","color","tooltip","responsive","rules","condition","maxWidth","methods","FETCH_DATA","axios","method","url","headers","Authorization","year_no","then","res","catch","error","finally","computed"],"sourceRoot":"src/views/Applications/ExecutiveManagement/Charts","sources":["forecast-sales-pie.vue"],"sourcesContent":["<template>\n  <div class=\"chart-item\">\n    <highcharts :options=\"chartOptions\" v-if=\"this.chartData\"></highcharts>\n    <div class=\"\" v-if=\"!this.chartData\">no data</div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport axios from \"/axios.js\";\n\nexport default {\n  name: \"chart-forecast-sales-pie\",\n  created() {\n    this.FETCH_DATA();\n  },\n  data() {\n    return {\n      chartData: {},\n      chartOptions: {\n        chart: {\n          type: \"pie\",\n        },\n        credits: {\n          enabled: false,\n        },\n        title: {\n          text: \"THE TOTAL FORECAST OF REVENUE BY SERVICE TYPE IN 2023\",\n        },\n        yAxis: {\n          title: {\n            text: \"Value (Baht)\",\n          },\n        },\n        xAxis: {\n          // categories: [\"Jan\", \"Feb\"],\n\n          title: {\n            // text: \"Month\",\n          },\n        },\n        legend: {\n          layout: \"vertical\",\n          align: \"right\",\n          verticalAlign: \"middle\",\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false,\n            },\n            pointStart: 1,\n          },\n          pie: {\n            allowPointSelect: true,\n            cursor: \"pointer\",\n            dataLabels: {\n              enabled: true,\n              style: {\n                fontSize: \"14px\",\n              },\n              formatter: function () {\n                return (\n                  this.point.name +\n                  \": \" +\n                  (this.point.y / 1000000).toFixed(2) +\n                  \"MB\"\n                );\n              },\n            },\n          },\n        },\n        series: [\n          {\n            name: \"Service\",\n            colorByPoint: true,\n            data: [\n              {\n                name: \"IDB\",\n                y: 0,\n                color: \"#3a0ca3\",\n              },\n              {\n                name: \"RBI\",\n                y: 0,\n                color: \"#7209b7\",\n              },\n              {\n                name: \"FFS\",\n                y: 0,\n                color: \"#4cc9f0\",\n              },\n              {\n                name: \"ITP\",\n                y: 0,\n                color: \"#4361ee\",\n              },\n            ],\n          },\n        ],\n        tooltip: {\n          //pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\",\n          formatter: function () {\n            return (\n              \"<b>\" +\n              this.point.name +\n              \"<br>\" +\n              \"</b><br>Value: \" +\n              (this.y / 1000000).toFixed(2) +\n              \"MB (\" +\n              this.point.percentage.toFixed(2) +\n              \"%)\"\n            );\n          },\n        },\n        responsive: {\n          rules: [\n            {\n              condition: {\n                maxWidth: 500,\n              },\n              chartOptions: {\n                legend: {\n                  layout: \"horizontal\",\n                  align: \"center\",\n                  verticalAlign: \"bottom\",\n                },\n              },\n            },\n          ],\n        },\n      },\n    };\n  },\n  methods: {\n    FETCH_DATA() {\n      axios({\n        method: \"post\",\n        url: \"forecast-sales/forecast-sales-group-sumbytype\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: {\n          year_no: moment().year() + 1,\n        },\n      })\n        .then((res) => {\n          // console.log(res);\n          if (res.data) {\n            this.chartData = res.data;\n            if (this.chartData) {\n              this.chartOptions.series[0].data[0].y = this.chartData[0].y;\n              this.chartOptions.series[0].data[1].y = this.chartData[1].y;\n              this.chartOptions.series[0].data[2].y = this.chartData[2].y;\n              this.chartOptions.series[0].data[3].y = this.chartData[3].y;\n            }\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {});\n    },\n  },\n  computed: {},\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.chart-item {\n  min-height: 200px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}