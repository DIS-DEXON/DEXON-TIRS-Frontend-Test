{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport axios from \"/axios.js\";\nexport default {\n  name: \"yearset-current-sales\",\n  created: function created() {\n    this.FETCH_PLAN(); // this.FETCH_ACTUAL();\n  },\n  data: function data() {\n    return {\n      months: [{\n        month: \"YEAR 2022\"\n      }, {\n        month: \"Jan\"\n      }, {\n        month: \"Feb\"\n      }, {\n        month: \"Mar\"\n      }, {\n        month: \"Apr\"\n      }, {\n        month: \"May\"\n      }, {\n        month: \"Jun\"\n      }, {\n        month: \"Jul\"\n      }, {\n        month: \"Aug\"\n      }, {\n        month: \"Sep\"\n      }, {\n        month: \"Oct\"\n      }, {\n        month: \"Nov\"\n      }, {\n        month: \"Dec\"\n      }, {\n        month: \"TOTAL\"\n      }],\n      CurrentSalesYearSetData: {\n        plan: [{\n          month_no: 1,\n          y: 1666666\n        }, {\n          month_no: 2,\n          y: 1666666\n        }, {\n          month_no: 3,\n          y: 1666666\n        }, {\n          month_no: 4,\n          y: 1666666\n        }, {\n          month_no: 5,\n          y: 1666666\n        }, {\n          month_no: 6,\n          y: 1666666\n        }, {\n          month_no: 7,\n          y: 1666666\n        }, {\n          month_no: 8,\n          y: 1666666\n        }, {\n          month_no: 9,\n          y: 1666666\n        }, {\n          month_no: 10,\n          y: 1666666\n        }, {\n          month_no: 11,\n          y: 1666666\n        }, {\n          month_no: 12,\n          y: 1666666\n        }],\n        actual: []\n      }\n    };\n  },\n  methods: {\n    FETCH_PLAN: function FETCH_PLAN() {\n      var _this = this;\n\n      axios({\n        method: \"post\",\n        url: \"current-sales/current-sales-sumbyyear\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: {\n          year_no: moment().year()\n        }\n      }).then(function (res) {\n        // console.log(res);\n        if (res.data) {\n          _this.CurrentSalesYearSetData.actual = res.data;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      }).finally(function () {});\n    }\n  },\n  computed: {\n    total_plan: function total_plan() {\n      if (this.CurrentSalesYearSetData.plan.length > 0) {\n        var sum = 0;\n\n        for (var i = 0; i < this.CurrentSalesYearSetData.plan.length; i++) {\n          sum = sum + this.CurrentSalesYearSetData.plan[i].y;\n        }\n\n        return sum;\n      } else return 0;\n    },\n    total_actual: function total_actual() {\n      if (this.CurrentSalesYearSetData.actual.length > 0) {\n        var sum = 0;\n\n        for (var i = 0; i < this.CurrentSalesYearSetData.actual.length; i++) {\n          sum = sum + this.CurrentSalesYearSetData.actual[i].y;\n        }\n\n        return sum;\n      } else return 0;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AAEA;AACAA,+BADA;AAEAC,SAFA,qBAEA;AACA,sBADA,CAEA;AACA,GALA;AAMAC,MANA,kBAMA;AACA;AACAC,eACA;AACAC;AADA,OADA,EAIA;AACAA;AADA,OAJA,EAOA;AACAA;AADA,OAPA,EAUA;AACAA;AADA,OAVA,EAaA;AACAA;AADA,OAbA,EAgBA;AACAA;AADA,OAhBA,EAmBA;AACAA;AADA,OAnBA,EAsBA;AACAA;AADA,OAtBA,EAyBA;AACAA;AADA,OAzBA,EA4BA;AACAA;AADA,OA5BA,EA+BA;AACAA;AADA,OA/BA,EAkCA;AACAA;AADA,OAlCA,EAqCA;AACAA;AADA,OArCA,EAwCA;AACAA;AADA,OAxCA,CADA;AA6CAC;AACAC,eACA;AACAC,qBADA;AAEAC;AAFA,SADA,EAKA;AACAD,qBADA;AAEAC;AAFA,SALA,EASA;AACAD,qBADA;AAEAC;AAFA,SATA,EAaA;AACAD,qBADA;AAEAC;AAFA,SAbA,EAiBA;AACAD,qBADA;AAEAC;AAFA,SAjBA,EAqBA;AACAD,qBADA;AAEAC;AAFA,SArBA,EAyBA;AACAD,qBADA;AAEAC;AAFA,SAzBA,EA6BA;AACAD,qBADA;AAEAC;AAFA,SA7BA,EAiCA;AACAD,qBADA;AAEAC;AAFA,SAjCA,EAqCA;AACAD,sBADA;AAEAC;AAFA,SArCA,EAyCA;AACAD,sBADA;AAEAC;AAFA,SAzCA,EA6CA;AACAD,sBADA;AAEAC;AAFA,SA7CA,CADA;AAmDAC;AAnDA;AA7CA;AAmGA,GA1GA;AA2GAC;AACAC,cADA,wBACA;AAAA;;AACAC;AACAC,sBADA;AAEAC,oDAFA;AAGAC;AACAC;AADA,SAHA;AAMAd;AACAe;AADA;AANA,SAUAC,IAVA,CAUA;AACA;AACA;AACA;AACA;AACA,OAfA,EAgBAC,KAhBA,CAgBA;AACAC;AACA,OAlBA,EAmBAC,OAnBA,CAmBA,cAnBA;AAoBA;AAtBA,GA3GA;AAmIAC;AACAC,cADA,wBACA;AACA;AACA;;AACA;AACAC;AACA;;AACA;AACA,OANA,MAMA;AACA,KATA;AAUAC,gBAVA,0BAUA;AACA;AACA;;AACA;AACAD;AACA;;AACA;AACA,OANA,MAMA;AACA;AAlBA;AAnIA","names":["name","created","data","months","month","CurrentSalesYearSetData","plan","month_no","y","actual","methods","FETCH_PLAN","axios","method","url","headers","Authorization","year_no","then","catch","console","finally","computed","total_plan","sum","total_actual"],"sourceRoot":"src/views/Applications/ExecutiveManagement/YearSet","sources":["current-sales.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card-set-year\">\n      <div\n        class=\"card-item-month monthlabel\"\n        v-for=\"item in months\"\n        :key=\"item.month\"\n      >\n        <p>{{ item.month }}</p>\n      </div>\n    </div>\n    <div class=\"card-set-year\">\n      <div class=\"card-item-month table-td\">\n        <p>TARGET</p>\n      </div>\n      <div\n        class=\"card-item-month plan\"\n        v-for=\"item in CurrentSalesYearSetData.plan\"\n        :key=\"item.month\"\n      >\n        <p class=\"label-value\">{{ (item.y / 1000000).toFixed(2) }}</p>\n        <p class=\"label-currency\">MB</p>\n      </div>\n      <div class=\"card-item-month table-td\">\n        <p class=\"label-value\">\n          {{ (total_plan / 1000000).toFixed(2) }}\n        </p>\n        <p class=\"label-currency\">MB</p>\n      </div>\n    </div>\n    <div class=\"card-set-year\">\n      <div class=\"card-item-month table-td\">\n        <p>ACTUAL</p>\n      </div>\n      <div\n        class=\"card-item-month actual\"\n        v-for=\"item in CurrentSalesYearSetData.actual\"\n        :key=\"item.month\"\n      >\n        <p class=\"label-value\">{{ (item.y / 1000000).toFixed(2) }}</p>\n        <p class=\"label-currency\">MB</p>\n      </div>\n      <div class=\"card-item-month table-td\">\n        <p class=\"label-value\">\n          {{ (total_actual / 1000000).toFixed(2) }}\n        </p>\n        <p class=\"label-currency\">MB</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport axios from \"/axios.js\";\n\nexport default {\n  name: \"yearset-current-sales\",\n  created() {\n    this.FETCH_PLAN();\n    // this.FETCH_ACTUAL();\n  },\n  data() {\n    return {\n      months: [\n        {\n          month: \"YEAR 2022\",\n        },\n        {\n          month: \"Jan\",\n        },\n        {\n          month: \"Feb\",\n        },\n        {\n          month: \"Mar\",\n        },\n        {\n          month: \"Apr\",\n        },\n        {\n          month: \"May\",\n        },\n        {\n          month: \"Jun\",\n        },\n        {\n          month: \"Jul\",\n        },\n        {\n          month: \"Aug\",\n        },\n        {\n          month: \"Sep\",\n        },\n        {\n          month: \"Oct\",\n        },\n        {\n          month: \"Nov\",\n        },\n        {\n          month: \"Dec\",\n        },\n        {\n          month: \"TOTAL\",\n        },\n      ],\n      CurrentSalesYearSetData: {\n        plan: [\n          {\n            month_no: 1,\n            y: 1666666,\n          },\n          {\n            month_no: 2,\n            y: 1666666,\n          },\n          {\n            month_no: 3,\n            y: 1666666,\n          },\n          {\n            month_no: 4,\n            y: 1666666,\n          },\n          {\n            month_no: 5,\n            y: 1666666,\n          },\n          {\n            month_no: 6,\n            y: 1666666,\n          },\n          {\n            month_no: 7,\n            y: 1666666,\n          },\n          {\n            month_no: 8,\n            y: 1666666,\n          },\n          {\n            month_no: 9,\n            y: 1666666,\n          },\n          {\n            month_no: 10,\n            y: 1666666,\n          },\n          {\n            month_no: 11,\n            y: 1666666,\n          },\n          {\n            month_no: 12,\n            y: 1666666,\n          },\n        ],\n        actual: [],\n      },\n    };\n  },\n  methods: {\n    FETCH_PLAN() {\n      axios({\n        method: \"post\",\n        url: \"current-sales/current-sales-sumbyyear\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: {\n          year_no: moment().year(),\n        },\n      })\n        .then((res) => {\n          // console.log(res);\n          if (res.data) {\n            this.CurrentSalesYearSetData.actual = res.data;\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(() => {});\n    },\n  },\n  computed: {\n    total_plan() {\n      if (this.CurrentSalesYearSetData.plan.length > 0) {\n        var sum = 0;\n        for (var i = 0; i < this.CurrentSalesYearSetData.plan.length; i++) {\n          sum = sum + this.CurrentSalesYearSetData.plan[i].y;\n        }\n        return sum;\n      } else return 0;\n    },\n    total_actual() {\n      if (this.CurrentSalesYearSetData.actual.length > 0) {\n        var sum = 0;\n        for (var i = 0; i < this.CurrentSalesYearSetData.actual.length; i++) {\n          sum = sum + this.CurrentSalesYearSetData.actual[i].y;\n        }\n        return sum;\n      } else return 0;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.chart-item {\n  min-height: 200px;\n}\n* {\n  font-family: \"Play\", \"Noto Sans Thai\" !important;\n}\n</style>"]},"metadata":{},"sourceType":"module"}