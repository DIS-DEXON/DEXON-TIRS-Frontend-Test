{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n// import moment from \"moment\";\n// import axios from \"/axios.js\";\nexport default {\n  name: \"chart-project-progress\",\n  props: {\n    info: Object\n  },\n  data: function data() {\n    return {\n      chartData: {\n        plan: [{\n          month: 1,\n          y: 1666666\n        }, {\n          month: 2,\n          y: 1666666\n        }, {\n          month: 3,\n          y: 1666666\n        }, {\n          month: 4,\n          y: 1666666\n        }, {\n          month: 5,\n          y: 1666666\n        }, {\n          month: 6,\n          y: 1666666\n        }, {\n          month: 7,\n          y: 1666666\n        }, {\n          month: 8,\n          y: 1666666\n        }, {\n          month: 9,\n          y: 1666666\n        }, {\n          month: 10,\n          y: 1666666\n        }, {\n          month: 11,\n          y: 1666666\n        }, {\n          month: 12,\n          y: 1666666\n        }]\n      },\n      chartOptions: {\n        chart: {\n          type: \"spline\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"PROJECT PROGRESS of \" + this.info.project_no\n        },\n        yAxis: {\n          title: {\n            text: \"PROGRESS (%)\"\n          },\n          labels: {\n            formatter: function formatter() {\n              return this.value + \"%\";\n            }\n          },\n          max: 100\n        },\n        xAxis: {\n          title: {\n            text: \"Months\"\n          },\n          categories: [] //range: 1,\n          //tickInterval: 1,\n\n        },\n        legend: {\n          layout: \"horizontal\",\n          align: \"center\",\n          verticalAlign: \"bottom\"\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false\n            }\n          },\n          spline: {\n            dataLabels: {\n              enabled: true,\n              formatter: function formatter() {\n                return this.point.y + \" %\";\n              }\n            }\n          }\n        },\n        series: [{\n          name: \"Planned\",\n          data: [],\n          color: \"#EE1C32\",\n          lineWidth: 4,\n          marker: {\n            fillColor: \"#EE1C32\",\n            radius: 4\n          } // dataLabels: {\n          //   enabled: false,\n          // },\n\n        }, {\n          name: \"Actual\",\n          data: [],\n          color: \"#140a4b\",\n          lineWidth: 4,\n          marker: {\n            fillColor: \"#140a4b\",\n            radius: 6\n          }\n        }],\n        tooltip: {\n          formatter: function formatter() {\n            return \"The <b>\" + this.series.name + \" </b>progress for month <b>\" + this.x + \"</b> is <b>\" + this.y + \"%\";\n          }\n        },\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 500\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\"\n              }\n            }\n          }]\n        }\n      }\n    };\n  },\n  methods: {},\n  computed: {},\n  mounted: function mounted() {\n    var dataLength = this.info.progress_by_month.length;\n    console.log(dataLength);\n\n    if (dataLength > 0) {\n      for (var i = 0; i < dataLength; i++) {\n        this.chartOptions.series[0].data.push(this.info.progress_by_month[i].plan_cumulative);\n        this.chartOptions.series[1].data.push(this.info.progress_by_month[i].actual_cumulative);\n        this.chartOptions.xAxis.categories.push(this.info.progress_by_month[i].month_abbr);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;AAOA;AACA;AAEA;AACAA,gCADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC;AACAC,eACA;AACAC,kBADA;AAEAC;AAFA,SADA,EAKA;AACAD,kBADA;AAEAC;AAFA,SALA,EASA;AACAD,kBADA;AAEAC;AAFA,SATA,EAaA;AACAD,kBADA;AAEAC;AAFA,SAbA,EAiBA;AACAD,kBADA;AAEAC;AAFA,SAjBA,EAqBA;AACAD,kBADA;AAEAC;AAFA,SArBA,EAyBA;AACAD,kBADA;AAEAC;AAFA,SAzBA,EA6BA;AACAD,kBADA;AAEAC;AAFA,SA7BA,EAiCA;AACAD,kBADA;AAEAC;AAFA,SAjCA,EAqCA;AACAD,mBADA;AAEAC;AAFA,SArCA,EAyCA;AACAD,mBADA;AAEAC;AAFA,SAzCA,EA6CA;AACAD,mBADA;AAEAC;AAFA,SA7CA;AADA,OADA;AAqDAC;AACAC;AACAC;AADA,SADA;AAIAC;AACAC;AADA,SAJA;AAOAC;AACAC;AADA,SAPA;AAUAC;AACAF;AACAC;AADA,WADA;AAIAE;AACAC;AACA;AACA;AAHA,WAJA;AASAC;AATA,SAVA;AAqBAC;AACAN;AACAC;AADA,WADA;AAIAM,wBAJA,CAKA;AACA;;AANA,SArBA;AA6BAC;AACAC,8BADA;AAEAC,yBAFA;AAGAC;AAHA,SA7BA;AAkCAC;AACAC;AACAC;AACAC;AADA;AADA,WADA;AAMAC;AACAC;AACAlB,2BADA;AAEAK;AACA;AACA;AAJA;AADA;AANA,SAlCA;AAiDAS,iBACA;AACA1B,yBADA;AAEAG,kBAFA;AAGA4B,0BAHA;AAIAC,sBAJA;AAKAC;AAAAC;AAAAC;AAAA,WALA,CAMA;AACA;AACA;;AARA,SADA,EAWA;AACAnC,wBADA;AAEAG,kBAFA;AAGA4B,0BAHA;AAIAC,sBAJA;AAKAC;AAAAC;AAAAC;AAAA;AALA,SAXA,CAjDA;AAoEAC;AACAnB;AACA,mBACA,YACA,gBADA,GAEA,6BAFA,GAGA,MAHA,GAIA,aAJA,GAKA,MALA,GAMA,GAPA;AASA;AAXA,SApEA;AAiFAoB;AACAC,kBACA;AACAC;AACAC;AADA,aADA;AAIAhC;AACAa;AACAC,oCADA;AAEAC,+BAFA;AAGAC;AAHA;AADA;AAJA,WADA;AADA;AAjFA;AArDA;AAwJA,GA9JA;AA+JAiB,aA/JA;AAgKAC,cAhKA;AAiKAC,SAjKA,qBAiKA;AACA;AACAC;;AACA;AACA;AACA,8CACA,8CADA;AAGA,8CACA,gDADA;AAGA,gDACA,yCADA;AAGA;AACA;AACA;AAjLA","names":["name","props","info","data","chartData","plan","month","y","chartOptions","chart","type","credits","enabled","title","text","yAxis","labels","formatter","max","xAxis","categories","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","spline","dataLabels","color","lineWidth","marker","fillColor","radius","tooltip","responsive","rules","condition","maxWidth","methods","computed","mounted","console"],"sourceRoot":"src/views/Applications/ExecutiveManagement/Charts","sources":["project-progress-line-nodetail.vue"],"sourcesContent":["<template>\n  <div class=\"project-progress-wrapper chart-item\">\n    <highcharts class=\"chart-panel\" :options=\"chartOptions\"></highcharts>\n  </div>\n</template>\n\n<script>\n// import moment from \"moment\";\n// import axios from \"/axios.js\";\n\nexport default {\n  name: \"chart-project-progress\",\n  props: {\n    info: Object,\n  },\n  data() {\n    return {\n      chartData: {\n        plan: [\n          {\n            month: 1,\n            y: 1666666,\n          },\n          {\n            month: 2,\n            y: 1666666,\n          },\n          {\n            month: 3,\n            y: 1666666,\n          },\n          {\n            month: 4,\n            y: 1666666,\n          },\n          {\n            month: 5,\n            y: 1666666,\n          },\n          {\n            month: 6,\n            y: 1666666,\n          },\n          {\n            month: 7,\n            y: 1666666,\n          },\n          {\n            month: 8,\n            y: 1666666,\n          },\n          {\n            month: 9,\n            y: 1666666,\n          },\n          {\n            month: 10,\n            y: 1666666,\n          },\n          {\n            month: 11,\n            y: 1666666,\n          },\n          {\n            month: 12,\n            y: 1666666,\n          },\n        ],\n      },\n      chartOptions: {\n        chart: {\n          type: \"spline\",\n        },\n        credits: {\n          enabled: false,\n        },\n        title: {\n          text: \"PROJECT PROGRESS of \" + this.info.project_no,\n        },\n        yAxis: {\n          title: {\n            text: \"PROGRESS (%)\",\n          },\n          labels: {\n            formatter: function () {\n              return this.value + \"%\";\n            },\n          },\n          max: 100,\n        },\n        xAxis: {\n          title: {\n            text: \"Months\",\n          },\n          categories: [],\n          //range: 1,\n          //tickInterval: 1,\n        },\n        legend: {\n          layout: \"horizontal\",\n          align: \"center\",\n          verticalAlign: \"bottom\",\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false,\n            },\n          },\n          spline: {\n            dataLabels: {\n              enabled: true,\n              formatter: function () {\n                return this.point.y + \" %\";\n              },\n            },\n          },\n        },\n        series: [\n          {\n            name: \"Planned\",\n            data: [],\n            color: \"#EE1C32\",\n            lineWidth: 4,\n            marker: { fillColor: \"#EE1C32\", radius: 4 },\n            // dataLabels: {\n            //   enabled: false,\n            // },\n          },\n          {\n            name: \"Actual\",\n            data: [],\n            color: \"#140a4b\",\n            lineWidth: 4,\n            marker: { fillColor: \"#140a4b\", radius: 6 },\n          },\n        ],\n        tooltip: {\n          formatter: function () {\n            return (\n              \"The <b>\" +\n              this.series.name +\n              \" </b>progress for month <b>\" +\n              this.x +\n              \"</b> is <b>\" +\n              this.y +\n              \"%\"\n            );\n          },\n        },\n        responsive: {\n          rules: [\n            {\n              condition: {\n                maxWidth: 500,\n              },\n              chartOptions: {\n                legend: {\n                  layout: \"horizontal\",\n                  align: \"center\",\n                  verticalAlign: \"bottom\",\n                },\n              },\n            },\n          ],\n        },\n      },\n    };\n  },\n  methods: {},\n  computed: {},\n  mounted() {\n    var dataLength = this.info.progress_by_month.length;\n    console.log(dataLength);\n    if (dataLength > 0) {\n      for (var i = 0; i < dataLength; i++) {\n        this.chartOptions.series[0].data.push(\n          this.info.progress_by_month[i].plan_cumulative\n        );\n        this.chartOptions.series[1].data.push(\n          this.info.progress_by_month[i].actual_cumulative\n        );\n        this.chartOptions.xAxis.categories.push(\n          this.info.progress_by_month[i].month_abbr\n        );\n      }\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.chart-item {\n  min-height: 200px;\n}\n.project-progress-wrapper {\n  display: block;\n  padding: 20px;\n  .chart-panel {\n    border: 1px solid #e6e6e6;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}