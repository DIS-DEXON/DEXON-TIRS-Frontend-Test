{"ast":null,"code":"import _classCallCheck from \"/Users/dexon/Projects/AI-Portal-Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/dexon/Projects/AI-Portal-Frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.function.name.js\";\n\n/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.drop_down_menu.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport ToolbarMenu from \"./ui.toolbar.menu\";\nimport DropDownMenu from \"../drop_down_menu\";\nimport devices from \"../../core/devices\";\nimport { each } from \"../../core/utils/iterator\";\nimport { compileGetter } from \"../../core/utils/data\";\nvar MENU_INVISIBLE_CLASS = \"dx-state-invisible\";\nvar TOOLBAR_dropDownMenu_CONTAINER_CLASS = \"dx-toolbar-menu-container\";\nvar POPOVER_BOUNDARY_OFFSET = 10;\n\nvar ToolbarDropDownMenu = /*#__PURE__*/function () {\n  function ToolbarDropDownMenu(toolbar) {\n    _classCallCheck(this, ToolbarDropDownMenu);\n\n    this._toolbar = toolbar;\n  }\n\n  _createClass(ToolbarDropDownMenu, [{\n    key: \"render\",\n    value: function render() {\n      if (!this._hasVisibleMenuItems()) {\n        return;\n      }\n\n      this._renderMenuButtonContainer();\n\n      var $menu = $(\"<div>\").appendTo(this._dropDownMenuContainer());\n      this._dropDownMenu = this._toolbar._createComponent($menu, DropDownMenu, this._dropDownMenuOptions());\n      this.renderMenuItems();\n    }\n  }, {\n    key: \"renderMenuItems\",\n    value: function renderMenuItems() {\n      if (!this._dropDownMenu) {\n        this.render();\n      }\n\n      this._dropDownMenu && this._dropDownMenu.option(\"items\", this._getMenuItems());\n\n      if (this._dropDownMenu && !this._dropDownMenu.option(\"items\").length) {\n        this._dropDownMenu.close();\n      }\n    }\n  }, {\n    key: \"_renderMenuButtonContainer\",\n    value: function _renderMenuButtonContainer() {\n      var $afterSection = this._toolbar._$afterSection;\n      this._$menuButtonContainer = $(\"<div>\").appendTo($afterSection).addClass(this._toolbar._buttonClass()).addClass(TOOLBAR_dropDownMenu_CONTAINER_CLASS);\n    }\n  }, {\n    key: \"_getMenuItemTemplate\",\n    value: function _getMenuItemTemplate() {\n      return this._toolbar._getTemplateByOption(\"menuItemTemplate\");\n    }\n  }, {\n    key: \"_dropDownMenuOptions\",\n    value: function _dropDownMenuOptions() {\n      var _this = this;\n\n      var itemClickAction = this._toolbar._createActionByOption(\"onItemClick\");\n\n      var topAndBottomOffset = 2 * POPOVER_BOUNDARY_OFFSET;\n      return {\n        disabled: this._toolbar.option(\"disabled\"),\n        itemTemplate: this._getMenuItemTemplate.bind(this),\n        onItemClick: function (e) {\n          itemClickAction(e);\n        }.bind(this),\n        deferRendering: true,\n        container: this._toolbar.option(\"menuContainer\"),\n        popupMaxHeight: \"android\" === devices.current().platform ? domAdapter.getDocumentElement().clientHeight - topAndBottomOffset : void 0,\n        menuWidget: ToolbarMenu,\n        onOptionChanged: function onOptionChanged(_ref) {\n          var name = _ref.name,\n              value = _ref.value;\n\n          if (\"opened\" === name) {\n            _this._toolbar.option(\"overflowMenuVisible\", value);\n          }\n\n          if (\"items\" === name) {\n            _this._updateMenuVisibility(value);\n          }\n        },\n        popupPosition: {\n          at: \"bottom right\",\n          my: \"top right\"\n        }\n      };\n    }\n  }, {\n    key: \"_updateMenuVisibility\",\n    value: function _updateMenuVisibility(menuItems) {\n      var items = menuItems || this._getMenuItems();\n\n      var isMenuVisible = items.length && this._hasVisibleMenuItems(items);\n\n      this._toggleMenuVisibility(isMenuVisible);\n    }\n  }, {\n    key: \"_getMenuItems\",\n    value: function _getMenuItems() {\n      return this._toolbar._getMenuItems();\n    }\n  }, {\n    key: \"_hasVisibleMenuItems\",\n    value: function _hasVisibleMenuItems(items) {\n      var menuItems = items || this._toolbar.option(\"items\");\n\n      var result = false;\n      var optionGetter = compileGetter(\"visible\");\n      var overflowGetter = compileGetter(\"locateInMenu\");\n      each(menuItems, function (index, item) {\n        var itemVisible = optionGetter(item, {\n          functionsAsIs: true\n        });\n        var itemOverflow = overflowGetter(item, {\n          functionsAsIs: true\n        });\n\n        if (false !== itemVisible && (\"auto\" === itemOverflow || \"always\" === itemOverflow) || \"menu\" === item.location) {\n          result = true;\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"_toggleMenuVisibility\",\n    value: function _toggleMenuVisibility(value) {\n      if (!this._dropDownMenuContainer()) {\n        return;\n      }\n\n      this._dropDownMenuContainer().toggleClass(MENU_INVISIBLE_CLASS, !value);\n    }\n  }, {\n    key: \"_dropDownMenuContainer\",\n    value: function _dropDownMenuContainer() {\n      return this._$menuButtonContainer;\n    }\n  }, {\n    key: \"widgetOption\",\n    value: function widgetOption(name, value) {\n      this._dropDownMenu && this._dropDownMenu.option(name, value);\n    }\n  }, {\n    key: \"itemOption\",\n    value: function itemOption(item, property, value) {\n      if (\"disabled\" === property || \"options.disabled\" === property) {\n        var _this$_dropDownMenu;\n\n        null === (_this$_dropDownMenu = this._dropDownMenu) || void 0 === _this$_dropDownMenu ? void 0 : _this$_dropDownMenu._itemOptionChanged(item, property, value);\n      } else {\n        this.renderMenuItems();\n      }\n    }\n  }]);\n\n  return ToolbarDropDownMenu;\n}();\n\nexport default ToolbarDropDownMenu;","map":{"version":3,"sources":["/Users/dexon/Projects/AI-Portal-Frontend/node_modules/devextreme/esm/ui/toolbar/ui.toolbar.drop_down_menu.js"],"names":["$","domAdapter","ToolbarMenu","DropDownMenu","devices","each","compileGetter","MENU_INVISIBLE_CLASS","TOOLBAR_dropDownMenu_CONTAINER_CLASS","POPOVER_BOUNDARY_OFFSET","ToolbarDropDownMenu","toolbar","_toolbar","_hasVisibleMenuItems","_renderMenuButtonContainer","$menu","appendTo","_dropDownMenuContainer","_dropDownMenu","_createComponent","_dropDownMenuOptions","renderMenuItems","render","option","_getMenuItems","length","close","$afterSection","_$afterSection","_$menuButtonContainer","addClass","_buttonClass","_getTemplateByOption","itemClickAction","_createActionByOption","topAndBottomOffset","disabled","itemTemplate","_getMenuItemTemplate","bind","onItemClick","e","deferRendering","container","popupMaxHeight","current","platform","getDocumentElement","clientHeight","menuWidget","onOptionChanged","_ref","name","value","_updateMenuVisibility","popupPosition","at","my","menuItems","items","isMenuVisible","_toggleMenuVisibility","result","optionGetter","overflowGetter","index","item","itemVisible","functionsAsIs","itemOverflow","location","toggleClass","property","_this$_dropDownMenu","_itemOptionChanged"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.drop_down_menu.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport ToolbarMenu from \"./ui.toolbar.menu\";\r\nimport DropDownMenu from \"../drop_down_menu\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nvar MENU_INVISIBLE_CLASS = \"dx-state-invisible\";\r\nvar TOOLBAR_dropDownMenu_CONTAINER_CLASS = \"dx-toolbar-menu-container\";\r\nvar POPOVER_BOUNDARY_OFFSET = 10;\r\nclass ToolbarDropDownMenu {\r\n    constructor(toolbar) {\r\n        this._toolbar = toolbar\r\n    }\r\n    render() {\r\n        if (!this._hasVisibleMenuItems()) {\r\n            return\r\n        }\r\n        this._renderMenuButtonContainer();\r\n        var $menu = $(\"<div>\").appendTo(this._dropDownMenuContainer());\r\n        this._dropDownMenu = this._toolbar._createComponent($menu, DropDownMenu, this._dropDownMenuOptions());\r\n        this.renderMenuItems()\r\n    }\r\n    renderMenuItems() {\r\n        if (!this._dropDownMenu) {\r\n            this.render()\r\n        }\r\n        this._dropDownMenu && this._dropDownMenu.option(\"items\", this._getMenuItems());\r\n        if (this._dropDownMenu && !this._dropDownMenu.option(\"items\").length) {\r\n            this._dropDownMenu.close()\r\n        }\r\n    }\r\n    _renderMenuButtonContainer() {\r\n        var $afterSection = this._toolbar._$afterSection;\r\n        this._$menuButtonContainer = $(\"<div>\").appendTo($afterSection).addClass(this._toolbar._buttonClass()).addClass(TOOLBAR_dropDownMenu_CONTAINER_CLASS)\r\n    }\r\n    _getMenuItemTemplate() {\r\n        return this._toolbar._getTemplateByOption(\"menuItemTemplate\")\r\n    }\r\n    _dropDownMenuOptions() {\r\n        var itemClickAction = this._toolbar._createActionByOption(\"onItemClick\");\r\n        var topAndBottomOffset = 2 * POPOVER_BOUNDARY_OFFSET;\r\n        return {\r\n            disabled: this._toolbar.option(\"disabled\"),\r\n            itemTemplate: this._getMenuItemTemplate.bind(this),\r\n            onItemClick: function(e) {\r\n                itemClickAction(e)\r\n            }.bind(this),\r\n            deferRendering: true,\r\n            container: this._toolbar.option(\"menuContainer\"),\r\n            popupMaxHeight: \"android\" === devices.current().platform ? domAdapter.getDocumentElement().clientHeight - topAndBottomOffset : void 0,\r\n            menuWidget: ToolbarMenu,\r\n            onOptionChanged: _ref => {\r\n                var {\r\n                    name: name,\r\n                    value: value\r\n                } = _ref;\r\n                if (\"opened\" === name) {\r\n                    this._toolbar.option(\"overflowMenuVisible\", value)\r\n                }\r\n                if (\"items\" === name) {\r\n                    this._updateMenuVisibility(value)\r\n                }\r\n            },\r\n            popupPosition: {\r\n                at: \"bottom right\",\r\n                my: \"top right\"\r\n            }\r\n        }\r\n    }\r\n    _updateMenuVisibility(menuItems) {\r\n        var items = menuItems || this._getMenuItems();\r\n        var isMenuVisible = items.length && this._hasVisibleMenuItems(items);\r\n        this._toggleMenuVisibility(isMenuVisible)\r\n    }\r\n    _getMenuItems() {\r\n        return this._toolbar._getMenuItems()\r\n    }\r\n    _hasVisibleMenuItems(items) {\r\n        var menuItems = items || this._toolbar.option(\"items\");\r\n        var result = false;\r\n        var optionGetter = compileGetter(\"visible\");\r\n        var overflowGetter = compileGetter(\"locateInMenu\");\r\n        each(menuItems, (function(index, item) {\r\n            var itemVisible = optionGetter(item, {\r\n                functionsAsIs: true\r\n            });\r\n            var itemOverflow = overflowGetter(item, {\r\n                functionsAsIs: true\r\n            });\r\n            if (false !== itemVisible && (\"auto\" === itemOverflow || \"always\" === itemOverflow) || \"menu\" === item.location) {\r\n                result = true\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    _toggleMenuVisibility(value) {\r\n        if (!this._dropDownMenuContainer()) {\r\n            return\r\n        }\r\n        this._dropDownMenuContainer().toggleClass(MENU_INVISIBLE_CLASS, !value)\r\n    }\r\n    _dropDownMenuContainer() {\r\n        return this._$menuButtonContainer\r\n    }\r\n    widgetOption(name, value) {\r\n        this._dropDownMenu && this._dropDownMenu.option(name, value)\r\n    }\r\n    itemOption(item, property, value) {\r\n        if (\"disabled\" === property || \"options.disabled\" === property) {\r\n            var _this$_dropDownMenu;\r\n            null === (_this$_dropDownMenu = this._dropDownMenu) || void 0 === _this$_dropDownMenu ? void 0 : _this$_dropDownMenu._itemOptionChanged(item, property, value)\r\n        } else {\r\n            this.renderMenuItems()\r\n        }\r\n    }\r\n}\r\nexport default ToolbarDropDownMenu;\r\n"]},"metadata":{},"sourceType":"module"}