{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"/axios.js\";\nimport DxSelectBox from \"devextreme-vue/select-box\";\nimport DxDateBox from \"devextreme-vue/date-box\";\nexport default {\n  name: \"popup-add-project\",\n  components: {\n    DxSelectBox: DxSelectBox,\n    DxDateBox: DxDateBox\n  },\n  data: function data() {\n    return {\n      formData: {},\n      formSelect: {\n        jobType: [\"IDB\", \"ITP\", \"FFS\", \"RBI\"],\n        now: new Date(),\n        clientList: [{}]\n      }\n    };\n  },\n  created: function created() {\n    this.FETCH_DROPDOWN();\n  },\n  methods: {\n    SAVE: function SAVE() {\n      var _this = this;\n\n      if (this.formData.project_name) {\n        if (this.formData.id_client) {\n          this.$ons.notification.confirm(\"Confirm save?\").then(function (res) {\n            if (res == 1) {\n              var data = _this.formData;\n              axios({\n                method: \"post\",\n                url: \"/forecast-sales/forecast-sales-add\",\n                headers: {\n                  Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n                },\n                data: data\n              }).then(function (res) {\n                console.log(res.data[0]);\n\n                if (res.status == 200) {\n                  _this.$ons.notification.alert(\"Project Add successful\");\n\n                  _this.$emit(\"close-popup\");\n\n                  var id = res.data[0].id_upcoming_project;\n\n                  if (id) {\n                    _this.$router.push(\"/executive-management/project-upcoming//\" + id);\n                  }\n                }\n              }).catch(function (error) {\n                _this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n              }).finally(function () {});\n            }\n          });\n        } else {\n          this.$ons.notification.alert('\"Client\" field cannot be empty');\n        }\n      } else {\n        this.$ons.notification.alert('\"Project Name\" field cannot be empty');\n      }\n    },\n    CANCEL: function CANCEL() {\n      var _this2 = this;\n\n      if (this.formData != this.formData) {\n        this.$ons.notification.confirm(\"Your unsaved changes will be lost\").then(function (res) {\n          if (res == 1) {\n            _this2.$emit(\"closePopup\");\n          }\n        });\n      } else {\n        this.$emit(\"closePopup\");\n      }\n    },\n    FETCH_DROPDOWN: function FETCH_DROPDOWN() {\n      var _this3 = this;\n\n      axios({\n        method: \"get\",\n        url: \"/project-manager/client-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        }\n      }).then(function (res) {\n        if (res.data) {\n          _this3.formSelect.clientList = res.data;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;AACAA,2BADA;AAEAC;AACAC,4BADA;AAEAC;AAFA,GAFA;AAMAC,MANA,kBAMA;AACA;AACAC,kBADA;AAEAC;AACAC,6CADA;AAEAC,uBAFA;AAGAC;AAHA;AAFA;AAQA,GAfA;AAgBAC,SAhBA,qBAgBA;AACA;AACA,GAlBA;AAmBAC;AACAC,QADA,kBACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AAEAC;AACAC,8BADA;AAEAC,yDAFA;AAGAC;AACAC,iCACA;AAFA,iBAHA;AAOAb;AAPA,iBASAc,IATA,CASA;AACAC;;AACA;AACA;;AACA;;AACA;;AACA;AACA,uCACA,+CADA;AAGA;AACA;AACA,eArBA,EAsBAC,KAtBA,CAsBA;AACA,8CACAC,aACA,GADA,GAEAA,qBAFA,GAGA,GAHA,GAIAA,aALA;AAOA,eA9BA,EA+BAC,OA/BA,CA+BA,cA/BA;AAgCA;AACA,WArCA;AAsCA,SAvCA,MAuCA;AACA;AACA;AACA,OA3CA,MA2CA;AACA;AACA;AACA,KAhDA;AAiDAC,UAjDA,oBAiDA;AAAA;;AACA;AACA,+BACAC,OADA,CACA,mCADA,EAEAN,IAFA,CAEA;AACA;AACA;AACA;AACA,SANA;AAOA,OARA,MAQA;AACA;AACA;AACA,KA7DA;AA8DAO,kBA9DA,4BA8DA;AAAA;;AACAZ;AACAC,qBADA;AAEAC,2CAFA;AAGAC;AACAC;AADA;AAHA,SAMAC,IANA,CAMA;AACA;AACA;AACA;AACA,OAVA;AAWA;AA1EA;AAnBA","names":["name","components","DxSelectBox","DxDateBox","data","formData","formSelect","jobType","now","clientList","created","methods","SAVE","axios","method","url","headers","Authorization","then","console","catch","error","finally","CANCEL","confirm","FETCH_DROPDOWN"],"sourceRoot":"src/views/Applications/ExecutiveManagement/ProjectUpcoming","sources":["project-add.vue"],"sourcesContent":["<template>\n  <div class=\"popup-wrapper\">\n    <div class=\"popup-card\">\n      <div class=\"popup-header\">\n        <label>Add New Project Info</label>\n      </div>\n      <div class=\"popup-content form\">\n        <div class=\"form-item-container\">\n          <label class=\"section-text\" style=\"grid-column: span 2\"\n            >Project Informations</label\n          >\n\n          <div class=\"input-set\" style=\"grid-column: span 2\">\n            <div class=\"label-box\">\n              <p class=\"label\">Project Name:</p>\n              <label class=\"star-label\"><i class=\"las la-asterisk\"></i></label>\n            </div>\n            <input\n              type=\"text\"\n              v-model=\"formData.project_name\"\n              placeholder=\"Project Name\"\n            />\n          </div>\n          <div class=\"input-set\" style=\"grid-column: span 2\">\n            <p class=\"label\">Description:</p>\n            <textarea\n              v-model=\"formData.note\"\n              placeholder=\"Visiting Note\"\n              style=\"height: 80px; max-height: 200px\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Service Type:</p>\n            <DxSelectBox\n              style=\"border: 0; font-size: 14px\"\n              :items=\"formSelect.jobType\"\n              placeholder=\"Select Job Type\"\n              v-model=\"formData.job_type\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Confident Level (%):</p>\n            <input\n              type=\"text\"\n              v-model=\"formData.confident_level\"\n              placeholder=\"Confident Level\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Forecast Value (Baht):</p>\n            <input\n              type=\"text\"\n              v-model=\"formData.project_value\"\n              placeholder=\"Project Value\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Submission Date:</p>\n            <DxDateBox\n              :value=\"formSelect.now\"\n              type=\"date\"\n              v-model=\"formData.submission_date\"\n              placeholder=\"Submission Date\"\n            />\n          </div>\n\n          <hr style=\"grid-column: span 2\" />\n          <label class=\"section-text\" style=\"grid-column: span 2\"\n            >Client Informations</label\n          >\n\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Client:</p>\n              <label class=\"star-label\"><i class=\"las la-asterisk\"></i></label>\n            </div>\n            <DxSelectBox\n              style=\"border: 0; font-size: 14px\"\n              :items=\"formSelect.clientList\"\n              placeholder=\"Select Client\"\n              v-model=\"formData.id_client\"\n              display-expr=\"client_name\"\n              value-expr=\"id_client\"\n              item-template=\"item\"\n            />\n          </div>\n          <!-- <div class=\"input-set\">\n            <p class=\"label\">Contact Name:</p>\n            <input\n              type=\"text\"\n              v-model=\"formData.client_contact_name\"\n              placeholder=\"Contact Name\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Phone No:</p>\n            <input\n              type=\"text\"\n              v-model=\"formData.client_contact_phone_no\"\n              placeholder=\"Contact Phone No\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Email:</p>\n            <input\n              type=\"text\"\n              v-model=\"formData.client_contact_email\"\n              placeholder=\"Contact Email\"\n            />\n          </div> -->\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <div class=\"button-set\">\n          <button class=\"blue\" v-on:click=\"SAVE()\">\n            <label>Save</label>\n          </button>\n          <button class=\"grey\" v-on:click=\"CANCEL()\">\n            <label>Cancel</label>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"/axios.js\";\nimport DxSelectBox from \"devextreme-vue/select-box\";\nimport DxDateBox from \"devextreme-vue/date-box\";\nexport default {\n  name: \"popup-add-project\",\n  components: {\n    DxSelectBox,\n    DxDateBox,\n  },\n  data() {\n    return {\n      formData: {},\n      formSelect: {\n        jobType: [\"IDB\", \"ITP\", \"FFS\", \"RBI\"],\n        now: new Date(),\n        clientList: [{}],\n      },\n    };\n  },\n  created() {\n    this.FETCH_DROPDOWN();\n  },\n  methods: {\n    SAVE() {\n      if (this.formData.project_name) {\n        if (this.formData.id_client) {\n          this.$ons.notification.confirm(\"Confirm save?\").then((res) => {\n            if (res == 1) {\n              const data = this.formData;\n\n              axios({\n                method: \"post\",\n                url: \"/forecast-sales/forecast-sales-add\",\n                headers: {\n                  Authorization:\n                    \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n                },\n                data: data,\n              })\n                .then((res) => {\n                  console.log(res.data[0]);\n                  if (res.status == 200) {\n                    this.$ons.notification.alert(\"Project Add successful\");\n                    this.$emit(\"close-popup\");\n                    const id = res.data[0].id_upcoming_project;\n                    if (id) {\n                      this.$router.push(\n                        \"/executive-management/project-upcoming//\" + id\n                      );\n                    }\n                  }\n                })\n                .catch((error) => {\n                  this.$ons.notification.alert(\n                    error.code +\n                      \" \" +\n                      error.response.status +\n                      \" \" +\n                      error.message\n                  );\n                })\n                .finally(() => {});\n            }\n          });\n        } else {\n          this.$ons.notification.alert('\"Client\" field cannot be empty');\n        }\n      } else {\n        this.$ons.notification.alert('\"Project Name\" field cannot be empty');\n      }\n    },\n    CANCEL() {\n      if (this.formData != this.formData) {\n        this.$ons.notification\n          .confirm(\"Your unsaved changes will be lost\")\n          .then((res) => {\n            if (res == 1) {\n              this.$emit(\"closePopup\");\n            }\n          });\n      } else {\n        this.$emit(\"closePopup\");\n      }\n    },\n    FETCH_DROPDOWN() {\n      axios({\n        method: \"get\",\n        url: \"/project-manager/client-list\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n      }).then((res) => {\n        if (res.data) {\n          this.formSelect.clientList = res.data;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n// .popup-content {\n//   // width: 100%;\n// }\n.form-item-container {\n  width: auto;\n  display: grid;\n  grid-template-columns: repeat(2, 300px);\n  grid-gap: 10px;\n}\n\n.dx-icon {\n  font-size: 24px;\n  color: blue;\n}\n\nhr {\n  grid-column: span 4 / auto;\n  margin-top: 10px;\n}\n\n.form .label-box {\n  margin: 0 !important;\n}\n\n.form .form-item-container .section-text {\n  margin-top: 0px !important;\n}\n</style>"]},"metadata":{},"sourceType":"module"}