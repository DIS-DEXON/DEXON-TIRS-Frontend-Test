{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import moment from \"moment\";\n// import axios from \"/axios.js\";\nexport default {\n  name: \"chart-project-progress\",\n  props: {\n    info: Object,\n    hideDetail: Boolean\n  },\n  data: function data() {\n    return {\n      chartData: {\n        plan: [{\n          month: 1,\n          y: 1666666\n        }, {\n          month: 2,\n          y: 1666666\n        }, {\n          month: 3,\n          y: 1666666\n        }, {\n          month: 4,\n          y: 1666666\n        }, {\n          month: 5,\n          y: 1666666\n        }, {\n          month: 6,\n          y: 1666666\n        }, {\n          month: 7,\n          y: 1666666\n        }, {\n          month: 8,\n          y: 1666666\n        }, {\n          month: 9,\n          y: 1666666\n        }, {\n          month: 10,\n          y: 1666666\n        }, {\n          month: 11,\n          y: 1666666\n        }, {\n          month: 12,\n          y: 1666666\n        }]\n      },\n      chartOptions: {\n        chart: {\n          type: \"spline\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"PROJECT PROGRESS of \" + this.info.project_no + \" - \" + this.info.client_name\n        },\n        yAxis: {\n          title: {\n            text: \"PROGRESS (%)\",\n            style: {\n              fontSize: \"14\"\n            }\n          },\n          labels: {\n            formatter: function formatter() {\n              return this.value + \"%\";\n            },\n            style: {\n              fontSize: \"14\"\n            }\n          },\n          max: 100\n        },\n        xAxis: {\n          title: {// text: \"Months\",\n          },\n          labels: {\n            style: {\n              fontSize: \"14\"\n            }\n          },\n          categories: [] //range: 1,\n          //tickInterval: 1,\n\n        },\n        legend: {\n          layout: \"horizontal\",\n          align: \"center\",\n          verticalAlign: \"bottom\"\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false\n            }\n          },\n          spline: {\n            dataLabels: {\n              enabled: true,\n              formatter: function formatter() {\n                return this.point.y.toFixed(2) + \" %\";\n              }\n            }\n          }\n        },\n        series: [{\n          name: \"Planned\",\n          data: [],\n          color: \"#f00f78\",\n          lineWidth: 2,\n          marker: {\n            symbol: \"circle\"\n          },\n          dataLabels: {\n            enabled: false\n          }\n        }, {\n          name: \"Actual\",\n          data: [],\n          color: \"#1e1450\",\n          lineWidth: 2,\n          marker: {\n            symbol: \"circle\"\n          }\n        }],\n        tooltip: {\n          formatter: function formatter() {\n            return \"The <b>\" + this.series.name + \" </b>progress for month <b>\" + this.x + \"</b> is <b>\" + this.y + \"%\";\n          }\n        },\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 500\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\"\n              }\n            }\n          }]\n        }\n      }\n    };\n  },\n  methods: {},\n  computed: {},\n  mounted: function mounted() {\n    if (this.info) {\n      for (var i = 0; i < this.info.progress_by_month.length; i++) {\n        this.chartOptions.series[0].data.push(this.info.progress_by_month[i].plan_cumulative);\n        this.chartOptions.series[1].data.push(this.info.progress_by_month[i].actual_cumulative);\n        this.chartOptions.xAxis.categories.push(this.info.progress_by_month[i].month_abbr);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AAEA;AACAA,gCADA;AAEAC;AACAC,gBADA;AAEAC;AAFA,GAFA;AAMAC,MANA,kBAMA;AACA;AACAC;AACAC,eACA;AACAC,kBADA;AAEAC;AAFA,SADA,EAKA;AACAD,kBADA;AAEAC;AAFA,SALA,EASA;AACAD,kBADA;AAEAC;AAFA,SATA,EAaA;AACAD,kBADA;AAEAC;AAFA,SAbA,EAiBA;AACAD,kBADA;AAEAC;AAFA,SAjBA,EAqBA;AACAD,kBADA;AAEAC;AAFA,SArBA,EAyBA;AACAD,kBADA;AAEAC;AAFA,SAzBA,EA6BA;AACAD,kBADA;AAEAC;AAFA,SA7BA,EAiCA;AACAD,kBADA;AAEAC;AAFA,SAjCA,EAqCA;AACAD,mBADA;AAEAC;AAFA,SArCA,EAyCA;AACAD,mBADA;AAEAC;AAFA,SAzCA,EA6CA;AACAD,mBADA;AAEAC;AAFA,SA7CA;AADA,OADA;AAqDAC;AACAC;AACAC;AADA,SADA;AAIAC;AACAC;AADA,SAJA;AAOAC;AACAC,gBACA,yBACA,oBADA,GAEA,KAFA,GAGA;AALA,SAPA;AAcAC;AACAF;AACAC,gCADA;AAEAE;AACAC;AADA;AAFA,WADA;AAOAC;AACAC;AACA;AACA,aAHA;AAIAH;AACAC;AADA;AAJA,WAPA;AAeAG;AAfA,SAdA;AA+BAC;AACAR,kBACA;AADA,WADA;AAIAK;AACAF;AACAC;AADA;AADA,WAJA;AASAK,wBATA,CAUA;AACA;;AAXA,SA/BA;AA4CAC;AACAC,8BADA;AAEAC,yBAFA;AAGAC;AAHA,SA5CA;AAiDAC;AACAC;AACAC;AACAC;AADA;AADA,WADA;AAMAC;AACAC;AACApB,2BADA;AAEAO;AACA;AACA;AAJA;AADA;AANA,SAjDA;AAgEAS,iBACA;AACA7B,yBADA;AAEAI,kBAFA;AAGA8B,0BAHA;AAIAC,sBAJA;AAKAC;AACAC;AADA,WALA;AAQAJ;AACApB;AADA;AARA,SADA,EAaA;AACAb,wBADA;AAEAI,kBAFA;AAGA8B,0BAHA;AAIAC,sBAJA;AAKAC;AACAC;AADA;AALA,SAbA,CAhEA;AAuFAC;AACAlB;AACA,mBACA,YACA,gBADA,GAEA,6BAFA,GAGA,MAHA,GAIA,aAJA,GAKA,MALA,GAMA,GAPA;AASA;AAXA,SAvFA;AAoGAmB;AACAC,kBACA;AACAC;AACAC;AADA,aADA;AAIAjC;AACAe;AACAC,oCADA;AAEAC,+BAFA;AAGAC;AAHA;AADA;AAJA,WADA;AADA;AApGA;AArDA;AA2KA,GAlLA;AAmLAgB,aAnLA;AAoLAC,cApLA;AAqLAC,SArLA,qBAqLA;AACA;AACA;AACA,8CACA,8CADA;AAGA,8CACA,gDADA;AAGA,gDACA,yCADA;AAGA;AACA;AACA;AAnMA","names":["name","props","info","hideDetail","data","chartData","plan","month","y","chartOptions","chart","type","credits","enabled","title","text","yAxis","style","fontSize","labels","formatter","max","xAxis","categories","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","spline","dataLabels","color","lineWidth","marker","symbol","tooltip","responsive","rules","condition","maxWidth","methods","computed","mounted"],"sourceRoot":"src/views/Applications/ExecutiveManagement/Charts","sources":["project-progress-line.vue"],"sourcesContent":["<template>\n  <div class=\"project-progress-wrapper chart-item\">\n    <div class=\"detail-panel\" v-if=\"hideDetail == false\">\n      <div id=\"report-sheet\">\n        <div class=\"report-container\">\n          <div class=\"sheet-body\">\n            <div class=\"section-label\" style=\"grid-column: span 2\">\n              <label>project information</label>\n            </div>\n            <div class=\"form-item-label\"><label>Project No:</label></div>\n            <div class=\"form-item-value\">\n              <label>{{ info.project_no }}</label>\n            </div>\n            <div class=\"form-item-label\"><label>Service Type:</label></div>\n            <div class=\"form-item-value\">\n              <label>{{ info.service_type }}</label>\n            </div>\n            <div class=\"form-item-label\"><label>Client:</label></div>\n            <div class=\"form-item-value\">\n              <label>{{ info.client_name }}</label>\n            </div>\n            <div class=\"form-item-label\">\n              <label>Project Value (MB):</label>\n            </div>\n            <div class=\"form-item-value\">\n              <label>{{ (info.project_value / 1000000).toFixed(2) }}</label>\n            </div>\n            <div class=\"form-item-label\"><label>Progress (%):</label></div>\n            <div class=\"form-item-value\">\n              <label>{{ info.last_progress.toFixed(2) }}</label>\n            </div>\n            <div class=\"form-item-label\"><label>Progress Status:</label></div>\n\n            <div\n              class=\"form-item-value\"\n              style=\"background-color: #ccffcc\"\n              v-if=\"info.status_cumulative == 'On plan'\"\n            >\n              <label>{{ info.status_cumulative }}</label>\n            </div>\n            <div\n              class=\"form-item-value\"\n              style=\"background-color: #66ff99\"\n              v-if=\"info.status_cumulative == 'Over plan'\"\n            >\n              <label>{{ info.status_cumulative }}</label>\n            </div>\n            <div\n              class=\"form-item-value\"\n              style=\"background-color: #ffff00\"\n              v-if=\"info.status_cumulative == 'Lower plan'\"\n            >\n              <label>{{ info.status_cumulative }}</label>\n            </div>\n            <div\n              class=\"form-item-value\"\n              style=\"background-color: #00cc00\"\n              v-if=\"info.status_cumulative == 'Done'\"\n            >\n              <label>{{ info.status_cumulative }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <highcharts class=\"chart-panel\" :options=\"chartOptions\"></highcharts>\n  </div>\n</template>\n\n<script>\n// import moment from \"moment\";\n// import axios from \"/axios.js\";\n\nexport default {\n  name: \"chart-project-progress\",\n  props: {\n    info: Object,\n    hideDetail: Boolean,\n  },\n  data() {\n    return {\n      chartData: {\n        plan: [\n          {\n            month: 1,\n            y: 1666666,\n          },\n          {\n            month: 2,\n            y: 1666666,\n          },\n          {\n            month: 3,\n            y: 1666666,\n          },\n          {\n            month: 4,\n            y: 1666666,\n          },\n          {\n            month: 5,\n            y: 1666666,\n          },\n          {\n            month: 6,\n            y: 1666666,\n          },\n          {\n            month: 7,\n            y: 1666666,\n          },\n          {\n            month: 8,\n            y: 1666666,\n          },\n          {\n            month: 9,\n            y: 1666666,\n          },\n          {\n            month: 10,\n            y: 1666666,\n          },\n          {\n            month: 11,\n            y: 1666666,\n          },\n          {\n            month: 12,\n            y: 1666666,\n          },\n        ],\n      },\n      chartOptions: {\n        chart: {\n          type: \"spline\",\n        },\n        credits: {\n          enabled: false,\n        },\n        title: {\n          text:\n            \"PROJECT PROGRESS of \" +\n            this.info.project_no +\n            \" - \" +\n            this.info.client_name,\n        },\n        yAxis: {\n          title: {\n            text: \"PROGRESS (%)\",\n            style: {\n              fontSize: \"14\",\n            },\n          },\n          labels: {\n            formatter: function () {\n              return this.value + \"%\";\n            },\n            style: {\n              fontSize: \"14\",\n            },\n          },\n          max: 100,\n        },\n        xAxis: {\n          title: {\n            // text: \"Months\",\n          },\n          labels: {\n            style: {\n              fontSize: \"14\",\n            },\n          },\n          categories: [],\n          //range: 1,\n          //tickInterval: 1,\n        },\n        legend: {\n          layout: \"horizontal\",\n          align: \"center\",\n          verticalAlign: \"bottom\",\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false,\n            },\n          },\n          spline: {\n            dataLabels: {\n              enabled: true,\n              formatter: function () {\n                return this.point.y.toFixed(2) + \" %\";\n              },\n            },\n          },\n        },\n        series: [\n          {\n            name: \"Planned\",\n            data: [],\n            color: \"#f00f78\",\n            lineWidth: 2,\n            marker: {\n              symbol: \"circle\",\n            },\n            dataLabels: {\n              enabled: false,\n            },\n          },\n          {\n            name: \"Actual\",\n            data: [],\n            color: \"#1e1450\",\n            lineWidth: 2,\n            marker: {\n              symbol: \"circle\",\n            },\n          },\n        ],\n        tooltip: {\n          formatter: function () {\n            return (\n              \"The <b>\" +\n              this.series.name +\n              \" </b>progress for month <b>\" +\n              this.x +\n              \"</b> is <b>\" +\n              this.y +\n              \"%\"\n            );\n          },\n        },\n        responsive: {\n          rules: [\n            {\n              condition: {\n                maxWidth: 500,\n              },\n              chartOptions: {\n                legend: {\n                  layout: \"horizontal\",\n                  align: \"center\",\n                  verticalAlign: \"bottom\",\n                },\n              },\n            },\n          ],\n        },\n      },\n    };\n  },\n  methods: {},\n  computed: {},\n  mounted() {\n    if (this.info) {\n      for (var i = 0; i < this.info.progress_by_month.length; i++) {\n        this.chartOptions.series[0].data.push(\n          this.info.progress_by_month[i].plan_cumulative\n        );\n        this.chartOptions.series[1].data.push(\n          this.info.progress_by_month[i].actual_cumulative\n        );\n        this.chartOptions.xAxis.categories.push(\n          this.info.progress_by_month[i].month_abbr\n        );\n      }\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.chart-item {\n  min-height: 200px;\n}\n.project-progress-wrapper {\n  margin-top: 20px;\n  display: grid;\n  width: 100%;\n  grid-template-columns: 300px auto;\n  // border: 0.5px solid #000;\n  .detail-panel {\n    width: 300px;\n  }\n  .chart-panel {\n    border: 1px solid #000;\n    border-width: 1px 1px 1px 0;\n  }\n}\n\n#report-sheet {\n  width: 100%;\n  box-shadow: none;\n  padding: 0;\n  // border: 0.5px solid #000;\n  margin: 0;\n  .report-container {\n    .sheet-body {\n      grid-template-columns: repeat(2, 50%);\n      .section-label {\n        text-align: center;\n      }\n      .form-item-value {\n        grid-column: span 1;\n      }\n    }\n  }\n}\n\n#report-sheet .report-container .sheet-body .form-item-value {\n  padding: 10px 8px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}