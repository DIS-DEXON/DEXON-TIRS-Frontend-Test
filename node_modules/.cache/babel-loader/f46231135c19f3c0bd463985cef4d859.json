{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"/axios.js\";\nimport clone from \"just-clone\";\nexport default {\n  name: \"popup-edit-client\",\n  components: {},\n  props: {\n    editInfo: Object\n  },\n\n  created() {\n    this.formData = clone(this.editInfo);\n  },\n\n  data() {\n    return {\n      formData: {\n        client_name: \"\",\n        location: \"\",\n        is_domestic: true,\n        phone_no: \"\",\n        email: \"\",\n        address: \"\"\n      }\n    };\n  },\n\n  methods: {\n    SAVE() {\n      this.$ons.notification.confirm(\"Confirm save?\").then(res => {\n        if (res == 1) {\n          const data = this.formData;\n          axios({\n            method: \"put\",\n            url: \"/project-manager/client-edit\",\n            headers: {\n              Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n            },\n            data: data\n          }).then(res => {\n            if (res.status == 200) {\n              this.$ons.notification.alert(\"Edit successful\");\n              this.$emit(\"btn-cancel-edit\");\n              this.$emit(\"refreshList\");\n            }\n          }).catch(error => {\n            this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n          }).finally(() => {});\n        }\n      });\n    },\n\n    CANCEL() {\n      this.$emit(\"btn-cancel-edit\");\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACAA,2BADA;AAEAC,gBAFA;AAGAC;AACAC;AADA,GAHA;;AAMAC;AACA;AACA,GARA;;AASAC;AACA;AACAC;AACAC,uBADA;AAEAC,oBAFA;AAGAC,yBAHA;AAIAC,oBAJA;AAKAC,iBALA;AAMAC;AANA;AADA;AAUA,GApBA;;AAqBAC;AACAC;AACA;AACA;AACA;AACAC;AACAC,yBADA;AAEAC,+CAFA;AAGAC;AACAC,6BACA;AAFA,aAHA;AAOAd;AAPA,aASAe,IATA,CASAC;AACA;AACA;AACA;AACA;AACA;AACA,WAfA,EAgBAC,KAhBA,CAgBAC;AACA,yCACAA,8DADA;AAGA,WApBA,EAqBAC,OArBA,CAqBA,QArBA;AAsBA;AACA,OA1BA;AA2BA,KA7BA;;AA8BAC;AACA;AACA;;AAhCA;AArBA","names":["name","components","props","editInfo","created","data","formData","client_name","location","is_domestic","phone_no","email","address","methods","SAVE","axios","method","url","headers","Authorization","then","res","catch","error","finally","CANCEL"],"sourceRoot":"src/views/Applications/Contact/Client","sources":["client-edit.vue"],"sourcesContent":["<template>\n  <div class=\"popup-wrapper\">\n    <div class=\"popup-card\">\n      <div class=\"popup-header\">\n        <label>Edit Client Info</label>\n      </div>\n      <div class=\"popup-content form\">\n        <div class=\"form-item-container\">\n          <div class=\"input-set\">\n            <p class=\"label\">Client Name:</p>\n            <input type=\"text\" v-model=\"formData.client_name\" />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Location:</p>\n            <input type=\"text\" v-model=\"formData.location\" />\n          </div>\n\n          <div class=\"input-set\">\n            <p class=\"label\">Phone No:</p>\n            <input type=\"text\" v-model=\"formData.phone_no\" />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Email:</p>\n            <input type=\"email\" v-model=\"formData.email\" />\n          </div>\n          <div class=\"input-set\" style=\"grid-column: span 2\">\n            <p class=\"label\">Address:</p>\n            <textarea\n              type=\"text\"\n              style=\"height: 60px; width: 610px; max-height: 610px\"\n              v-model=\"formData.address\"\n            />\n          </div>\n          <div class=\"checkbox-set\">\n            <v-ons-checkbox input-id=\"incountry\" v-model=\"formData.is_domestic\">\n            </v-ons-checkbox>\n            <label for=\"incountry\">Client is located in Thailand</label>\n          </div>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <div class=\"button-set\">\n          <button class=\"blue\" v-on:click=\"SAVE()\">\n            <label>Save Edit</label>\n          </button>\n          <button class=\"grey\" v-on:click=\"CANCEL()\">\n            <label>Cancel</label>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"/axios.js\";\nimport clone from \"just-clone\";\nexport default {\n  name: \"popup-edit-client\",\n  components: {},\n  props: {\n    editInfo: Object,\n  },\n  created() {\n    this.formData = clone(this.editInfo);\n  },\n  data() {\n    return {\n      formData: {\n        client_name: \"\",\n        location: \"\",\n        is_domestic: true,\n        phone_no: \"\",\n        email: \"\",\n        address: \"\",\n      },\n    };\n  },\n  methods: {\n    SAVE() {\n      this.$ons.notification.confirm(\"Confirm save?\").then((res) => {\n        if (res == 1) {\n          const data = this.formData;\n          axios({\n            method: \"put\",\n            url: \"/project-manager/client-edit\",\n            headers: {\n              Authorization:\n                \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n            },\n            data: data,\n          })\n            .then((res) => {\n              if (res.status == 200) {\n                this.$ons.notification.alert(\"Edit successful\");\n                this.$emit(\"btn-cancel-edit\");\n                this.$emit(\"refreshList\");\n              }\n            })\n            .catch((error) => {\n              this.$ons.notification.alert(\n                error.code + \" \" + error.response.status + \" \" + error.message\n              );\n            })\n            .finally(() => {});\n        }\n      });\n    },\n    CANCEL() {\n      this.$emit(\"btn-cancel-edit\");\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n// .popup-content {\n//   width: 100%;\n// }\n.form-item-container {\n  width: auto;\n  display: grid;\n  grid-template-columns: repeat(2, 300px);\n  grid-gap: 10px;\n}\n\ntextarea {\n  max-width: 610px;\n  min-width: 610px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}