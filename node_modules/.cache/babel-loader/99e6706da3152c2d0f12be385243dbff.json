{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//DxDataGrid\nimport \"devextreme/dist/css/dx.light.css\"; // import { Workbook } from \"exceljs\";\n// import saveAs from \"file-saver\";\n// import { exportDataGrid } from \"devextreme/excel_exporter\";\n\nimport { DxDataGrid, DxSearchPanel, // DxPaging,\n// DxPager,\nDxScrolling, DxColumn, DxEditing // DxExport,\n} from \"devextreme-vue/data-grid\"; //Components\n\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupEdit from \"@/views/Applications/ExecutiveManagement/ProjectUpcoming/project-edit.vue\";\nimport VueTabsChrome from \"vue-tabs-chrome\";\nimport pdfvuer from \"pdfvuer\"; //API\n\nimport axios from \"/axios.js\";\nimport moment from \"moment\";\nexport default {\n  name: \"ViewProjectInfo\",\n  components: {\n    DxDataGrid: DxDataGrid,\n    DxSearchPanel: DxSearchPanel,\n    // DxPaging,\n    // DxPager,\n    DxScrolling: DxScrolling,\n    DxColumn: DxColumn,\n    DxEditing: DxEditing,\n    // DxExport,\n    toolbar: toolbar,\n    popupEdit: popupEdit,\n    pdf: pdfvuer,\n    VueTabsChrome: VueTabsChrome\n  },\n  created: function created() {\n    if (this.$store.state.status.server == true) {\n      this.FETCH_INFO();\n      this.FETCH_INFO_PLAN();\n    }\n  },\n  data: function data() {\n    return {\n      info: {},\n      isEdit: false,\n      page: 1,\n      numPages: 0,\n      pdfdata: undefined,\n      fileUpload: \"\",\n      tabCurrent: \"progress\",\n      tabs: [{\n        label: \"Project Plan\",\n        key: \"progress\",\n        closable: false\n      }, {\n        label: \"Attached Files\",\n        key: \"file\",\n        closable: false\n      }],\n      progressList: {}\n    };\n  },\n  methods: {\n    FETCH_INFO: function FETCH_INFO() {\n      var _this = this;\n\n      var id_project = this.$route.params;\n\n      if (id_project) {\n        axios({\n          method: \"post\",\n          url: \"forecast-sales/forecast-sales-by-id\",\n          headers: {\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n          },\n          data: id_project\n        }).then(function (res) {\n          console.log(res);\n\n          if (res.status == 200 && res.data[0]) {\n            _this.info = res.data[0]; // this.GET_PDF();\n            // this.FETCH_INFO_PROGRESS();\n          }\n        }).catch(function (error) {\n          _this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n        }).finally(function () {});\n      }\n    },\n    FETCH_INFO_PLAN: function FETCH_INFO_PLAN() {\n      var _this2 = this;\n\n      var id = this.$route.params;\n      console.log(id);\n\n      if (id) {\n        axios({\n          method: \"post\",\n          url: \"/forecast-sales/forecast-plan-by-id\",\n          headers: {\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n          },\n          data: id\n        }).then(function (res) {\n          console.log(\"plan\");\n          console.log(res.data);\n\n          if (res.status == 200 && res.data) {\n            _this2.progressList = res.data;\n          }\n        }).catch(function (error) {\n          _this2.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n        }).finally(function () {});\n      }\n    },\n    GET_PDF: function GET_PDF() {\n      // console.log(axios);\n      if (this.info.pdf_path != null) {\n        var self = this;\n        var pdfPath = this.info.pdf_path;\n        self.pdfdata = pdfvuer.createLoadingTask(this.baseURL + pdfPath);\n        self.pdfdata.then(function (pdf) {\n          self.numPages = pdf.numPages; // console.log(\"pdf page count: \" + self.numPages);\n        });\n      }\n    },\n    UPLOAD_FILE: function UPLOAD_FILE() {\n      var _this3 = this;\n\n      this.fileUpload = this.$refs.file.files[0]; // console.log(this.fileUpload);\n\n      if (this.fileUpload && this.fileUpload.type == \"application/pdf\") {\n        if (this.fileUpload.size < 20000000) {\n          axios({\n            method: \"post\",\n            url: \"/project-manager/project-upload-pdf\",\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n            },\n            data: {\n              id_project: this.info.id_project,\n              file: this.fileUpload\n            }\n          }).then(function (res) {\n            if (res.status == 200) {\n              _this3.FETCH_INFO();\n            }\n          }).catch(function (error) {\n            _this3.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n          }).finally(function () {});\n        } else {\n          this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n          var file = document.getElementById(\"pdf-upload-btn\");\n          file.val = \"\";\n        }\n      } else {\n        this.$ons.notification.alert(\"Incorrect filetype. <br/> Only PDF file can be uploaded.\");\n\n        var _file = document.getElementById(\"pdf-upload-btn\");\n\n        _file.val = \"\";\n      }\n    },\n    DELETE_PDF: function DELETE_PDF() {\n      var _this4 = this;\n\n      this.$ons.notification.confirm(\"Confirm delete PDF file?\").then(function (res) {\n        if (res == 1) {\n          if (_this4.info.id_pdf) {\n            axios({\n              method: \"delete\",\n              url: \"/project-manager/project-delete-pdf\",\n              headers: {\n                Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n              },\n              data: {\n                id_project: _this4.info.id_project,\n                id_pdf: _this4.info.id_pdf\n              }\n            }).then(function (res) {\n              if (res.status == 200) {\n                _this4.FETCH_INFO();\n              }\n            }).catch(function (error) {\n              _this4.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n            }).finally(function () {});\n          }\n        }\n      });\n    },\n    DOWNLOAD_PDF: function DOWNLOAD_PDF() {\n      var _this5 = this;\n\n      this.$ons.notification.confirm(\"You are downloading project information sheet of project no: \" + this.info.project_no).then(function (res) {\n        if (res == 1) {\n          var link = document.createElement(\"a\");\n          link.href = _this5.info.pdf_path;\n          link.download = \"project_information_\" + _this5.info.project_no + \".pdf\";\n          link.click();\n        }\n      });\n    },\n    DELETE_PROJECT: function DELETE_PROJECT() {\n      var _this6 = this;\n\n      var id_project = this.$route.params;\n      this.$ons.notification.confirm(\"Confirm delete?\").then(function (res) {\n        if (res == 1) {\n          axios({\n            method: \"delete\",\n            url: \"/forecast-sales/forecast-sales-delete\",\n            headers: {\n              Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n            },\n            data: id_project\n          }).then(function (res) {\n            if (res.status == 200) {\n              _this6.$ons.notification.alert(\"Project delete successful\");\n\n              _this6.$router.go(-1);\n            }\n          }).catch(function (error) {\n            _this6.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n          }).finally(function () {});\n        }\n      });\n    },\n    TOGGLE_POPUP: function TOGGLE_POPUP() {\n      this.isEdit = !this.isEdit;\n    },\n    CREATE_PLAN: function CREATE_PLAN(e) {\n      var _this7 = this;\n\n      e.data.id_upcoming_project = this.$route.params.id_upcoming_project;\n      console.log(e.data);\n      axios({\n        method: \"post\",\n        url: \"/forecast-sales/forecast-plan-add\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: e.data\n      }).then(function (res) {\n        if (res.status == 200) {\n          console.log(\"ok\");\n\n          _this7.FETCH_INFO_PLAN();\n        }\n      }).catch(function (error) {\n        _this7.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(function () {});\n    },\n    UPDATE_PLAN: function UPDATE_PLAN(e) {\n      var _this8 = this;\n\n      e.data.id_upcoming_project = this.$route.params.id_upcoming_project;\n      console.log(e.data);\n      axios({\n        method: \"put\",\n        url: \"/forecast-sales/forecast-plan-edit\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: e.data\n      }).then(function (res) {\n        if (res.status == 200) {\n          console.log(\"ok\");\n\n          _this8.FETCH_INFO_PLAN();\n        }\n      }).catch(function (error) {\n        _this8.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(function () {});\n    },\n    DELETE_PLAN: function DELETE_PLAN(e) {\n      var _this9 = this;\n\n      console.log(e.data);\n      axios({\n        method: \"delete\",\n        url: \"/forecast-sales/forecast-plan-delete\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: e.data\n      }).then(function (res) {\n        if (res.status == 200) {\n          console.log(\"ok\");\n\n          _this9.FETCH_INFO_PLAN();\n        }\n      }).catch(function (error) {\n        _this9.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n      }).finally(function () {});\n    }\n  },\n  computed: {\n    isShowDownloadBtn: function isShowDownloadBtn() {\n      if (this.info.pdf_path) return true;\n      return false;\n    },\n    jobConfirmDate: function jobConfirmDate() {\n      if (this.info.job_confirm_date) return moment(this.info.job_confirm_date).format(\"LL\");else return \"N/A\";\n    },\n    baseURL: function baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;else if (mode == \"prod\") return this.$store.state.modeURL.prod;else return console.log(\"develpment mode set up incorrect.\");\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["DxDataGrid","DxSearchPanel","DxScrolling","DxColumn","DxEditing","name","components","toolbar","popupEdit","pdf","VueTabsChrome","created","data","info","isEdit","page","numPages","pdfdata","fileUpload","tabCurrent","tabs","label","key","closable","progressList","methods","FETCH_INFO","axios","method","url","headers","Authorization","then","console","catch","error","finally","FETCH_INFO_PLAN","GET_PDF","self","UPLOAD_FILE","id_project","file","DELETE_PDF","id_pdf","DOWNLOAD_PDF","confirm","link","DELETE_PROJECT","TOGGLE_POPUP","CREATE_PLAN","e","UPDATE_PLAN","DELETE_PLAN","computed","isShowDownloadBtn","jobConfirmDate","baseURL"],"sourceRoot":"src/views/Applications/ExecutiveManagement/ProjectUpcoming","sources":["ProjectUpcomingInfo.vue"],"sourcesContent":["<template>\n  <div class=\"pm-page\">\n    <div class=\"pm-toolbar\">\n      <toolbar\n        :pageSubName=\"info.project_name\"\n        :isBack=\"true\"\n        :isEdit=\"true\"\n        :isDelete=\"true\"\n        :isPrint=\"false\"\n        :isDownload=\"isShowDownloadBtn\"\n        @isDeleteBtn=\"DELETE_PROJECT()\"\n        @isEditBtn=\"TOGGLE_POPUP()\"\n        @isDownloadBtn=\"DOWNLOAD_PDF()\"\n        @refreshInfo=\"FETCH_INFO()\"\n      />\n    </div>\n    <div class=\"pm-page-container\">\n      <div class=\"pm-project-info-sidebar form\">\n        <p class=\"pm-section-label\">Project Informations</p>\n        <div class=\"form-item-container\">\n          <div class=\"input-set\">\n            <p class=\"label\">Project Name:</p>\n            <p class=\"info\">\n              {{ info.project_name }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Client Name:</p>\n            <p class=\"info\">\n              {{ info.client_name }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Service Type:</p>\n            <p class=\"info\">\n              {{ info.service_type_desc }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Confident Level (%):</p>\n            <p class=\"info\">\n              {{ info.confident_level }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Forecast Value (MB):</p>\n            <p class=\"info\">\n              {{ info.project_value }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Forecast:</p>\n            <p class=\"info\">\n              {{ info.is_forecast }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Description:</p>\n            <p class=\"info\" v-if=\"info.project_desc\">\n              {{ info.project_desc }}\n            </p>\n            <p class=\"info\">-</p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Priority:</p>\n            <p class=\"info\" v-if=\"info.priority_no\">\n              {{ info.priority_no }}\n            </p>\n            <p class=\"info\">-</p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Submission Date:</p>\n            <p class=\"info\" v-if=\"info.submission_date\">\n              {{ info.submission_date }}\n            </p>\n            <p class=\"info\">-</p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Expired Date:</p>\n            <p class=\"info\" v-if=\"info.expired_date\">\n              {{ info.expired_date }}\n            </p>\n            <p class=\"info\">-</p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Remark:</p>\n            <p class=\"info\" v-if=\"info.remark\">\n              {{ info.remark }}\n            </p>\n            <p class=\"info\">-</p>\n          </div>\n          <!-- <div class=\"input-set\">\n            <p class=\"label\">Job Confirm by Client Date:</p>\n            <p class=\"info\">\n              {{ jobConfirmDate }}\n            </p>\n          </div> -->\n\n          <!-- <p class=\"pm-section-label\">Client Contact</p> -->\n\n          <!-- <div class=\"input-set\">\n            <p class=\"label\">Client Name:</p>\n            <p class=\"info\">\n              {{ info.client_name }}\n            </p>\n          </div> -->\n          <!-- <div class=\"input-set\">\n            <p class=\"label\">Contact Name:</p>\n            <p class=\"info\">\n              {{ info.client_contact_name }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Phone:</p>\n            <p class=\"info\">\n              {{ info.client_contact_phone_no }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Email:</p>\n            <p class=\"info\">\n              {{ info.client_contact_email }}\n            </p>\n          </div> -->\n        </div>\n      </div>\n      <div class=\"tab-wrapper\">\n        <vue-tabs-chrome v-model=\"tabCurrent\" :tabs=\"tabs\" />\n      </div>\n      <div class=\"page-content\" v-if=\"this.tabCurrent == 'progress'\">\n        <DxDataGrid\n          id=\"project-manager-project-list\"\n          key-expr=\"id_upcoming_project_plan\"\n          :data-source=\"progressList\"\n          :selection=\"{ mode: 'single' }\"\n          :hover-state-enabled=\"true\"\n          :allow-column-reordering=\"true\"\n          :show-borders=\"true\"\n          :show-row-lines=\"false\"\n          :row-alternation-enabled=\"true\"\n          @row-inserted=\"CREATE_PLAN\"\n          @row-updated=\"UPDATE_PLAN\"\n          @row-removed=\"DELETE_PLAN\"\n        >\n          <DxEditing\n            :allow-updating=\"true\"\n            :allow-deleting=\"true\"\n            :allow-adding=\"true\"\n            mode=\"row\"\n          />\n          <DxColumn data-field=\"quarter_no\" :width=\"100\" caption=\"Quarter\" />\n          <DxColumn data-field=\"quarter_year\" :width=\"120\" caption=\"Year\" />\n          <DxColumn\n            data-field=\"value_by_q\"\n            caption=\"Value (Baht/Quarter)\"\n            :allow-editing=\"false\"\n            format=\"#,##0.00\"\n          />\n          <!-- Configuration goes here -->\n          <!-- <DxFilterRow :visible=\"true\" /> -->\n          <DxScrolling mode=\"standard\" />\n          <DxSearchPanel :visible=\"true\" />\n          <!-- <DxExport :enabled=\"true\" /> -->\n        </DxDataGrid>\n      </div>\n      <div class=\"page-content\" v-if=\"this.tabCurrent == 'file'\"></div>\n    </div>\n    <popupEdit\n      v-if=\"isEdit == true\"\n      @closePopup=\"TOGGLE_POPUP()\"\n      @refreshInfo=\"FETCH_INFO()\"\n      :editInfo=\"info\"\n    />\n  </div>\n</template>\n\n<script>\n//DxDataGrid\nimport \"devextreme/dist/css/dx.light.css\";\n// import { Workbook } from \"exceljs\";\n// import saveAs from \"file-saver\";\n// import { exportDataGrid } from \"devextreme/excel_exporter\";\nimport {\n  DxDataGrid,\n  DxSearchPanel,\n  // DxPaging,\n  // DxPager,\n  DxScrolling,\n  DxColumn,\n  DxEditing,\n  // DxExport,\n} from \"devextreme-vue/data-grid\";\n\n//Components\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupEdit from \"@/views/Applications/ExecutiveManagement/ProjectUpcoming/project-edit.vue\";\nimport VueTabsChrome from \"vue-tabs-chrome\";\nimport pdfvuer from \"pdfvuer\";\n\n//API\nimport axios from \"/axios.js\";\nimport moment from \"moment\";\nexport default {\n  name: \"ViewProjectInfo\",\n  components: {\n    DxDataGrid,\n    DxSearchPanel,\n    // DxPaging,\n    // DxPager,\n    DxScrolling,\n    DxColumn,\n    DxEditing,\n    // DxExport,\n    toolbar,\n    popupEdit,\n    pdf: pdfvuer,\n    VueTabsChrome,\n  },\n  created() {\n    if (this.$store.state.status.server == true) {\n      this.FETCH_INFO();\n      this.FETCH_INFO_PLAN();\n    }\n  },\n  data() {\n    return {\n      info: {},\n      isEdit: false,\n      page: 1,\n      numPages: 0,\n      pdfdata: undefined,\n      fileUpload: \"\",\n      tabCurrent: \"progress\",\n      tabs: [\n        {\n          label: \"Project Plan\",\n          key: \"progress\",\n          closable: false,\n        },\n        {\n          label: \"Attached Files\",\n          key: \"file\",\n          closable: false,\n        },\n      ],\n      progressList: {},\n    };\n  },\n  methods: {\n    FETCH_INFO() {\n      const id_project = this.$route.params;\n      if (id_project) {\n        axios({\n          method: \"post\",\n          url: \"forecast-sales/forecast-sales-by-id\",\n          headers: {\n            Authorization:\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n          },\n          data: id_project,\n        })\n          .then((res) => {\n            console.log(res);\n\n            if (res.status == 200 && res.data[0]) {\n              this.info = res.data[0];\n              // this.GET_PDF();\n              // this.FETCH_INFO_PROGRESS();\n            }\n          })\n          .catch((error) => {\n            this.$ons.notification.alert(\n              error.code + \" \" + error.response.status + \" \" + error.message\n            );\n          })\n          .finally(() => {});\n      }\n    },\n    FETCH_INFO_PLAN() {\n      const id = this.$route.params;\n      console.log(id);\n      if (id) {\n        axios({\n          method: \"post\",\n          url: \"/forecast-sales/forecast-plan-by-id\",\n          headers: {\n            Authorization:\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n          },\n          data: id,\n        })\n          .then((res) => {\n            console.log(\"plan\");\n            console.log(res.data);\n            if (res.status == 200 && res.data) {\n              this.progressList = res.data;\n            }\n          })\n          .catch((error) => {\n            this.$ons.notification.alert(\n              error.code + \" \" + error.response.status + \" \" + error.message\n            );\n          })\n          .finally(() => {});\n      }\n    },\n    GET_PDF() {\n      // console.log(axios);\n      if (this.info.pdf_path != null) {\n        var self = this;\n        var pdfPath = this.info.pdf_path;\n        self.pdfdata = pdfvuer.createLoadingTask(this.baseURL + pdfPath);\n        self.pdfdata.then((pdf) => {\n          self.numPages = pdf.numPages;\n          // console.log(\"pdf page count: \" + self.numPages);\n        });\n      }\n    },\n    UPLOAD_FILE() {\n      this.fileUpload = this.$refs.file.files[0];\n      // console.log(this.fileUpload);\n      if (this.fileUpload && this.fileUpload.type == \"application/pdf\") {\n        if (this.fileUpload.size < 20000000) {\n          axios({\n            method: \"post\",\n            url: \"/project-manager/project-upload-pdf\",\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n              Authorization:\n                \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n            },\n            data: {\n              id_project: this.info.id_project,\n              file: this.fileUpload,\n            },\n          })\n            .then((res) => {\n              if (res.status == 200) {\n                this.FETCH_INFO();\n              }\n            })\n            .catch((error) => {\n              this.$ons.notification.alert(\n                error.code + \" \" + error.response.status + \" \" + error.message\n              );\n            })\n            .finally(() => {});\n        } else {\n          this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n          const file = document.getElementById(\"pdf-upload-btn\");\n          file.val = \"\";\n        }\n      } else {\n        this.$ons.notification.alert(\n          \"Incorrect filetype. <br/> Only PDF file can be uploaded.\"\n        );\n        const file = document.getElementById(\"pdf-upload-btn\");\n        file.val = \"\";\n      }\n    },\n    DELETE_PDF() {\n      this.$ons.notification.confirm(\"Confirm delete PDF file?\").then((res) => {\n        if (res == 1) {\n          if (this.info.id_pdf) {\n            axios({\n              method: \"delete\",\n              url: \"/project-manager/project-delete-pdf\",\n              headers: {\n                Authorization:\n                  \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n              },\n              data: {\n                id_project: this.info.id_project,\n                id_pdf: this.info.id_pdf,\n              },\n            })\n              .then((res) => {\n                if (res.status == 200) {\n                  this.FETCH_INFO();\n                }\n              })\n              .catch((error) => {\n                this.$ons.notification.alert(\n                  error.code + \" \" + error.response.status + \" \" + error.message\n                );\n              })\n              .finally(() => {});\n          }\n        }\n      });\n    },\n    DOWNLOAD_PDF() {\n      this.$ons.notification\n        .confirm(\n          \"You are downloading project information sheet of project no: \" +\n            this.info.project_no\n        )\n        .then((res) => {\n          if (res == 1) {\n            const link = document.createElement(\"a\");\n            link.href = this.info.pdf_path;\n            link.download =\n              \"project_information_\" + this.info.project_no + \".pdf\";\n            link.click();\n          }\n        });\n    },\n    DELETE_PROJECT() {\n      const id_project = this.$route.params;\n      this.$ons.notification.confirm(\"Confirm delete?\").then((res) => {\n        if (res == 1) {\n          axios({\n            method: \"delete\",\n            url: \"/forecast-sales/forecast-sales-delete\",\n            headers: {\n              Authorization:\n                \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n            },\n            data: id_project,\n          })\n            .then((res) => {\n              if (res.status == 200) {\n                this.$ons.notification.alert(\"Project delete successful\");\n                this.$router.go(-1);\n              }\n            })\n            .catch((error) => {\n              this.$ons.notification.alert(\n                error.code + \" \" + error.response.status + \" \" + error.message\n              );\n            })\n            .finally(() => {});\n        }\n      });\n    },\n    TOGGLE_POPUP() {\n      this.isEdit = !this.isEdit;\n    },\n    CREATE_PLAN(e) {\n      e.data.id_upcoming_project = this.$route.params.id_upcoming_project;\n      console.log(e.data);\n      axios({\n        method: \"post\",\n        url: \"/forecast-sales/forecast-plan-add\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: e.data,\n      })\n        .then((res) => {\n          if (res.status == 200) {\n            console.log(\"ok\");\n            this.FETCH_INFO_PLAN();\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {});\n    },\n    UPDATE_PLAN(e) {\n      e.data.id_upcoming_project = this.$route.params.id_upcoming_project;\n      console.log(e.data);\n      axios({\n        method: \"put\",\n        url: \"/forecast-sales/forecast-plan-edit\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: e.data,\n      })\n        .then((res) => {\n          if (res.status == 200) {\n            console.log(\"ok\");\n            this.FETCH_INFO_PLAN();\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {});\n    },\n    DELETE_PLAN(e) {\n      console.log(e.data);\n      axios({\n        method: \"delete\",\n        url: \"/forecast-sales/forecast-plan-delete\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: e.data,\n      })\n        .then((res) => {\n          if (res.status == 200) {\n            console.log(\"ok\");\n            this.FETCH_INFO_PLAN();\n          }\n        })\n        .catch((error) => {\n          this.$ons.notification.alert(\n            error.code + \" \" + error.response.status + \" \" + error.message\n          );\n        })\n        .finally(() => {});\n    },\n  },\n  computed: {\n    isShowDownloadBtn() {\n      if (this.info.pdf_path) return true;\n      return false;\n    },\n    jobConfirmDate() {\n      if (this.info.job_confirm_date)\n        return moment(this.info.job_confirm_date).format(\"LL\");\n      else return \"N/A\";\n    },\n    baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;\n      else if (mode == \"prod\") return this.$store.state.modeURL.prod;\n      else return console.log(\"develpment mode set up incorrect.\");\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n.pm-page {\n  border: 1px solid #e6e6e6;\n  border-width: 0 0 0 1px;\n  background-color: #ffffff;\n  width: 100%;\n  height: calc(100vh - 78px);\n  display: grid;\n  grid-template-rows: 61px calc(100vh - 61px);\n\n  .pm-page-container {\n    background-color: #d9d9d9;\n    display: grid;\n    grid-template-columns: 360px calc(100% - 360px);\n    grid-template-rows: 48px auto;\n    height: calc(100% - 78px);\n\n    @media screen and (max-width: 1024px) {\n      grid-template-columns: 100%;\n    }\n\n    .page-content {\n      // width: calc(100vw - 600px);\n      width: 100%;\n      height: calc(100vh - 139px);\n      // padding: 20px;\n      overflow-x: scroll;\n      overflow-y: scroll;\n      display: block;\n      background-color: #fff;\n      .render-view {\n        width: 100%;\n        height: 100%;\n        min-height: 1130px;\n        // min-width: 800px;\n        -o-object-fit: contain;\n        object-fit: contain;\n        max-width: 800px;\n        margin: 0 auto;\n        margin-bottom: 20px;\n        box-shadow: $web-card-shadow;\n        .pdf-view {\n          padding-top: 20px;\n        }\n\n        @media screen and (max-width: 1024px) {\n          max-width: 90%;\n        }\n      }\n      .render-view:last-child {\n        margin-bottom: 60px;\n      }\n    }\n\n    .page-content::-webkit-scrollbar {\n      display: none;\n    }\n  }\n}\nh1 {\n  font-size: 2em;\n}\n\n.pm-project-info-sidebar {\n  width: auto;\n  height: 100%;\n  background: #fff;\n  padding: 0 20px;\n  overflow-y: scroll;\n  border: 1px solid #e6e6e6;\n  border-width: 0 1px 0 0px;\n  grid-row: span 2;\n  @media screen and (max-width: 1024px) {\n    display: none;\n  }\n\n  .pm-section-label {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 1.75em;\n    line-height: 16px;\n    letter-spacing: -0.08px;\n    color: $web-font-color-black;\n    padding: 20px 0 10px 0;\n    margin: 0;\n    user-select: text;\n  }\n  .form-item-container {\n    display: block;\n  }\n}\n\n.pm-project-info-sidebar::-webkit-scrollbar {\n  display: none;\n}\n\n.input-set:last-child {\n  margin-bottom: 40px;\n}\n\n.upload-btn-wrapper {\n  width: 100%;\n  height: 100%;\n  background-color: #fff;\n}\n\n.dx-tabs {\n  border: none;\n}\n\n.tab-wrapper {\n  height: 48px;\n}\n.vue-tabs-chrome {\n  padding-top: 10px;\n  background-color: #d9d9d9;\n  font-size: 14px;\n}\n\n#project-manager-project-list {\n  padding: 0px 20px 80px 20px;\n  height: 600px;\n}\n\n.white-gradient-bg {\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 1) 0%,\n    rgba(235, 235, 235, 1) 6%,\n    rgba(217, 217, 217, 1) 100%\n  );\n}\n\n#project-manager-project-list {\n  padding-top: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}