{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//Year Set\nimport YearSetCurrent from \"@/views/Applications/ExecutiveManagement/YearSet/forecast-sales.vue\"; //Structures\n\nimport contentLoading from \"@/components/app-structures/app-content-loading.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\"; //API\n// import axios from \"/axios.js\";\n\nimport moment from \"moment\";\nexport default {\n  name: \"ViewForecastSales\",\n  components: {\n    toolbar: toolbar,\n    contentLoading: contentLoading,\n    YearSetCurrent: YearSetCurrent\n  },\n  created: function created() {\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"Forecast Sales\",\n      icon: \"/img/icon_menu/executive_management/forecast-sale.png\"\n    });\n    if (this.$store.state.status.server == true) this.FETCH_DATA();\n  },\n  computed: {\n    report_date: function report_date() {\n      return moment(this.currentViewRow.report_date).format(\"dddd, LL\");\n    }\n  },\n  data: function data() {\n    return {\n      isAdd: false,\n      isEdit: false,\n      isLoading: false\n    };\n  },\n  mounted: function mounted() {},\n  methods: {\n    FETCH_DATA: function FETCH_DATA() {}\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAoBA;AACA,iG,CAEA;;AACA;AACA,kE,CAEA;AACA;;AACA;AAEA;AACAA,2BADA;AAEAC;AACAC,oBADA;AAEAC,kCAFA;AAGAC;AAHA,GAFA;AAOAC,SAPA,qBAOA;AACA;AACAL,4BADA;AAEAM;AAFA;AAIA;AACA,GAbA;AAcAC;AACAC,eADA,yBACA;AACA;AACA;AAHA,GAdA;AAmBAC,MAnBA,kBAmBA;AACA;AACAC,kBADA;AAEAC,mBAFA;AAGAC;AAHA;AAKA,GAzBA;AA0BAC,SA1BA,qBA0BA,EA1BA;AA2BAC;AACAC,cADA,wBACA;AADA;AA3BA","names":["name","components","toolbar","contentLoading","YearSetCurrent","created","icon","computed","report_date","data","isAdd","isEdit","isLoading","mounted","methods","FETCH_DATA"],"sourceRoot":"src/views/Applications/ExecutiveManagement/Sales","sources":["SalesForecastDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"pm-page\">\n    <div class=\"pm-toolbar\">\n      <toolbar pageName=\"Forecast Revenue\" @refreshInfo=\"FETCH_DATA()\" />\n    </div>\n    <div class=\"pm-page-container\">\n      <div class=\"page-content\">\n        <YearSetCurrent />\n      </div>\n    </div>\n    <popupAdd v-if=\"isAdd == true\" @closePopup=\"TOGGLE_POPUP()\" />\n    <contentLoading\n      text=\"Loading, please wait...\"\n      v-if=\"isLoading == true\"\n      color=\"#fc9b21\"\n    />\n  </div>\n</template> \n\n<script>\n//Year Set\nimport YearSetCurrent from \"@/views/Applications/ExecutiveManagement/YearSet/forecast-sales.vue\";\n\n//Structures\nimport contentLoading from \"@/components/app-structures/app-content-loading.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\n\n//API\n// import axios from \"/axios.js\";\nimport moment from \"moment\";\n\nexport default {\n  name: \"ViewForecastSales\",\n  components: {\n    toolbar,\n    contentLoading,\n    YearSetCurrent,\n  },\n  created() {\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"Forecast Sales\",\n      icon: \"/img/icon_menu/executive_management/forecast-sale.png\",\n    });\n    if (this.$store.state.status.server == true) this.FETCH_DATA();\n  },\n  computed: {\n    report_date() {\n      return moment(this.currentViewRow.report_date).format(\"dddd, LL\");\n    },\n  },\n  data() {\n    return {\n      isAdd: false,\n      isEdit: false,\n      isLoading: false,\n    };\n  },\n  mounted() {},\n  methods: {\n    FETCH_DATA() {},\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n.pm-page {\n  border: 1px solid #e6e6e6;\n  border-width: 0 0 0 1px;\n  background-color: #ffffff;\n  height: 100%;\n\n  .pm-page-container {\n    background-color: #ffffff;\n    height: calc(100vh - 139px);\n    display: flex;\n    overflow-y: scroll;\n\n    .page-content {\n      width: 100%;\n      height: fit-content;\n      margin: 0 auto;\n      padding: 20px;\n    }\n\n    .page-info {\n      width: auto;\n    }\n  }\n}\n.chart-wrapper-grid {\n  grid-template-columns: repeat(3, 33.33%);\n  .chart-wrapper {\n    margin-bottom: 0px;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}