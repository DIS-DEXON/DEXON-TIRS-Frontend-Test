{"ast":null,"code":"import _classCallCheck from \"/Users/dexon/Projects/AI-Portal-Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/dexon/Projects/AI-Portal-Frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.label.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Guid from \"../../core/guid\";\nvar TEXTEDITOR_LABEL_CLASS = \"dx-texteditor-label\";\nvar TEXTEDITOR_WITH_LABEL_CLASS = \"dx-texteditor-with-label\";\nvar TEXTEDITOR_WITH_FLOATING_LABEL_CLASS = \"dx-texteditor-with-floating-label\";\nvar TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS = \"dx-texteditor-with-before-buttons\";\nvar LABEL_BEFORE_CLASS = \"dx-label-before\";\nvar LABEL_CLASS = \"dx-label\";\nvar LABEL_AFTER_CLASS = \"dx-label-after\";\n\nvar TextEditorLabel = /*#__PURE__*/function () {\n  function TextEditorLabel(_ref) {\n    _classCallCheck(this, TextEditorLabel);\n\n    var $editor = _ref.$editor,\n        text = _ref.text,\n        mode = _ref.mode,\n        mark = _ref.mark,\n        containsButtonsBefore = _ref.containsButtonsBefore,\n        containerWidth = _ref.containerWidth,\n        beforeWidth = _ref.beforeWidth;\n    this._props = {\n      $editor: $editor,\n      text: text,\n      mode: mode,\n      mark: mark,\n      containsButtonsBefore: containsButtonsBefore,\n      containerWidth: containerWidth,\n      beforeWidth: beforeWidth\n    };\n    this._id = \"\".concat(TEXTEDITOR_LABEL_CLASS, \"-\").concat(new Guid());\n\n    this._render();\n\n    this._toggleMarkupVisibility();\n  }\n\n  _createClass(TextEditorLabel, [{\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      return !!this._props.text && \"hidden\" !== this._props.mode;\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this._$before = $(\"<div>\").addClass(LABEL_BEFORE_CLASS);\n      this._$labelSpan = $(\"<span>\");\n      this._$label = $(\"<div>\").addClass(LABEL_CLASS).append(this._$labelSpan);\n      this._$after = $(\"<div>\").addClass(LABEL_AFTER_CLASS);\n      this._$root = $(\"<div>\").addClass(TEXTEDITOR_LABEL_CLASS).attr(\"id\", this._id).append(this._$before).append(this._$label).append(this._$after);\n\n      this._updateMark();\n\n      this._updateText();\n\n      this._updateBeforeWidth();\n\n      this._updateMaxWidth();\n    }\n  }, {\n    key: \"_toggleMarkupVisibility\",\n    value: function _toggleMarkupVisibility() {\n      var visible = this._isVisible();\n\n      this._updateEditorBeforeButtonsClass(visible);\n\n      this._updateEditorLabelClass(visible);\n\n      visible ? this._$root.appendTo(this._props.$editor) : this._$root.detach();\n    }\n  }, {\n    key: \"_updateEditorLabelClass\",\n    value: function _updateEditorLabelClass(visible) {\n      this._props.$editor.removeClass(TEXTEDITOR_WITH_FLOATING_LABEL_CLASS).removeClass(TEXTEDITOR_WITH_LABEL_CLASS);\n\n      if (visible) {\n        var labelClass = \"floating\" === this._props.mode ? TEXTEDITOR_WITH_FLOATING_LABEL_CLASS : TEXTEDITOR_WITH_LABEL_CLASS;\n\n        this._props.$editor.addClass(labelClass);\n      }\n    }\n  }, {\n    key: \"_updateEditorBeforeButtonsClass\",\n    value: function _updateEditorBeforeButtonsClass() {\n      var visible = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._isVisible();\n\n      this._props.$editor.removeClass(TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS);\n\n      if (visible) {\n        var beforeButtonsClass = this._props.containsButtonsBefore ? TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS : \"\";\n\n        this._props.$editor.addClass(beforeButtonsClass);\n      }\n    }\n  }, {\n    key: \"_updateMark\",\n    value: function _updateMark() {\n      this._$labelSpan.attr(\"data-mark\", this._props.mark);\n    }\n  }, {\n    key: \"_updateText\",\n    value: function _updateText() {\n      this._$labelSpan.text(this._props.text);\n    }\n  }, {\n    key: \"_updateBeforeWidth\",\n    value: function _updateBeforeWidth() {\n      this._$before.css({\n        width: this._props.beforeWidth\n      });\n    }\n  }, {\n    key: \"_updateMaxWidth\",\n    value: function _updateMaxWidth() {\n      this._$label.css({\n        maxWidth: this._props.containerWidth\n      });\n    }\n  }, {\n    key: \"$element\",\n    value: function $element() {\n      return this._$root;\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return this._isVisible();\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      if (this._isVisible()) {\n        return this._id;\n      }\n    }\n  }, {\n    key: \"updateMode\",\n    value: function updateMode(mode) {\n      this._props.mode = mode;\n\n      this._toggleMarkupVisibility();\n    }\n  }, {\n    key: \"updateText\",\n    value: function updateText(text) {\n      this._props.text = text;\n\n      this._updateText();\n\n      this._toggleMarkupVisibility();\n    }\n  }, {\n    key: \"updateMark\",\n    value: function updateMark(mark) {\n      this._props.mark = mark;\n\n      this._updateMark();\n    }\n  }, {\n    key: \"updateContainsButtonsBefore\",\n    value: function updateContainsButtonsBefore(containsButtonsBefore) {\n      this._props.containsButtonsBefore = containsButtonsBefore;\n\n      this._updateEditorBeforeButtonsClass();\n    }\n  }, {\n    key: \"updateBeforeWidth\",\n    value: function updateBeforeWidth(beforeWidth) {\n      this._props.beforeWidth = beforeWidth;\n\n      this._updateBeforeWidth();\n    }\n  }, {\n    key: \"updateMaxWidth\",\n    value: function updateMaxWidth(containerWidth) {\n      this._props.containerWidth = containerWidth;\n\n      this._updateMaxWidth();\n    }\n  }]);\n\n  return TextEditorLabel;\n}();\n\nexport { TextEditorLabel };","map":{"version":3,"sources":["/Users/dexon/Projects/AI-Portal-Frontend/node_modules/devextreme/esm/ui/text_box/ui.text_editor.label.js"],"names":["$","Guid","TEXTEDITOR_LABEL_CLASS","TEXTEDITOR_WITH_LABEL_CLASS","TEXTEDITOR_WITH_FLOATING_LABEL_CLASS","TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS","LABEL_BEFORE_CLASS","LABEL_CLASS","LABEL_AFTER_CLASS","TextEditorLabel","_ref","$editor","text","mode","mark","containsButtonsBefore","containerWidth","beforeWidth","_props","_id","concat","_render","_toggleMarkupVisibility","_$before","addClass","_$labelSpan","_$label","append","_$after","_$root","attr","_updateMark","_updateText","_updateBeforeWidth","_updateMaxWidth","visible","_isVisible","_updateEditorBeforeButtonsClass","_updateEditorLabelClass","appendTo","detach","removeClass","labelClass","arguments","length","beforeButtonsClass","css","width","maxWidth"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.label.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Guid from \"../../core/guid\";\r\nvar TEXTEDITOR_LABEL_CLASS = \"dx-texteditor-label\";\r\nvar TEXTEDITOR_WITH_LABEL_CLASS = \"dx-texteditor-with-label\";\r\nvar TEXTEDITOR_WITH_FLOATING_LABEL_CLASS = \"dx-texteditor-with-floating-label\";\r\nvar TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS = \"dx-texteditor-with-before-buttons\";\r\nvar LABEL_BEFORE_CLASS = \"dx-label-before\";\r\nvar LABEL_CLASS = \"dx-label\";\r\nvar LABEL_AFTER_CLASS = \"dx-label-after\";\r\nclass TextEditorLabel {\r\n    constructor(_ref) {\r\n        var {\r\n            $editor: $editor,\r\n            text: text,\r\n            mode: mode,\r\n            mark: mark,\r\n            containsButtonsBefore: containsButtonsBefore,\r\n            containerWidth: containerWidth,\r\n            beforeWidth: beforeWidth\r\n        } = _ref;\r\n        this._props = {\r\n            $editor: $editor,\r\n            text: text,\r\n            mode: mode,\r\n            mark: mark,\r\n            containsButtonsBefore: containsButtonsBefore,\r\n            containerWidth: containerWidth,\r\n            beforeWidth: beforeWidth\r\n        };\r\n        this._id = \"\".concat(TEXTEDITOR_LABEL_CLASS, \"-\").concat(new Guid);\r\n        this._render();\r\n        this._toggleMarkupVisibility()\r\n    }\r\n    _isVisible() {\r\n        return !!this._props.text && \"hidden\" !== this._props.mode\r\n    }\r\n    _render() {\r\n        this._$before = $(\"<div>\").addClass(LABEL_BEFORE_CLASS);\r\n        this._$labelSpan = $(\"<span>\");\r\n        this._$label = $(\"<div>\").addClass(LABEL_CLASS).append(this._$labelSpan);\r\n        this._$after = $(\"<div>\").addClass(LABEL_AFTER_CLASS);\r\n        this._$root = $(\"<div>\").addClass(TEXTEDITOR_LABEL_CLASS).attr(\"id\", this._id).append(this._$before).append(this._$label).append(this._$after);\r\n        this._updateMark();\r\n        this._updateText();\r\n        this._updateBeforeWidth();\r\n        this._updateMaxWidth()\r\n    }\r\n    _toggleMarkupVisibility() {\r\n        var visible = this._isVisible();\r\n        this._updateEditorBeforeButtonsClass(visible);\r\n        this._updateEditorLabelClass(visible);\r\n        visible ? this._$root.appendTo(this._props.$editor) : this._$root.detach()\r\n    }\r\n    _updateEditorLabelClass(visible) {\r\n        this._props.$editor.removeClass(TEXTEDITOR_WITH_FLOATING_LABEL_CLASS).removeClass(TEXTEDITOR_WITH_LABEL_CLASS);\r\n        if (visible) {\r\n            var labelClass = \"floating\" === this._props.mode ? TEXTEDITOR_WITH_FLOATING_LABEL_CLASS : TEXTEDITOR_WITH_LABEL_CLASS;\r\n            this._props.$editor.addClass(labelClass)\r\n        }\r\n    }\r\n    _updateEditorBeforeButtonsClass() {\r\n        var visible = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._isVisible();\r\n        this._props.$editor.removeClass(TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS);\r\n        if (visible) {\r\n            var beforeButtonsClass = this._props.containsButtonsBefore ? TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS : \"\";\r\n            this._props.$editor.addClass(beforeButtonsClass)\r\n        }\r\n    }\r\n    _updateMark() {\r\n        this._$labelSpan.attr(\"data-mark\", this._props.mark)\r\n    }\r\n    _updateText() {\r\n        this._$labelSpan.text(this._props.text)\r\n    }\r\n    _updateBeforeWidth() {\r\n        this._$before.css({\r\n            width: this._props.beforeWidth\r\n        })\r\n    }\r\n    _updateMaxWidth() {\r\n        this._$label.css({\r\n            maxWidth: this._props.containerWidth\r\n        })\r\n    }\r\n    $element() {\r\n        return this._$root\r\n    }\r\n    isVisible() {\r\n        return this._isVisible()\r\n    }\r\n    getId() {\r\n        if (this._isVisible()) {\r\n            return this._id\r\n        }\r\n    }\r\n    updateMode(mode) {\r\n        this._props.mode = mode;\r\n        this._toggleMarkupVisibility()\r\n    }\r\n    updateText(text) {\r\n        this._props.text = text;\r\n        this._updateText();\r\n        this._toggleMarkupVisibility()\r\n    }\r\n    updateMark(mark) {\r\n        this._props.mark = mark;\r\n        this._updateMark()\r\n    }\r\n    updateContainsButtonsBefore(containsButtonsBefore) {\r\n        this._props.containsButtonsBefore = containsButtonsBefore;\r\n        this._updateEditorBeforeButtonsClass()\r\n    }\r\n    updateBeforeWidth(beforeWidth) {\r\n        this._props.beforeWidth = beforeWidth;\r\n        this._updateBeforeWidth()\r\n    }\r\n    updateMaxWidth(containerWidth) {\r\n        this._props.containerWidth = containerWidth;\r\n        this._updateMaxWidth()\r\n    }\r\n}\r\nexport {\r\n    TextEditorLabel\r\n};\r\n"]},"metadata":{},"sourceType":"module"}