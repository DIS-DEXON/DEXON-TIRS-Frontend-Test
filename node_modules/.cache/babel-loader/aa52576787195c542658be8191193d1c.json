{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//JS\nimport clone from \"just-clone\";\nimport { sha256 } from \"js-sha256\";\nimport moment from \"moment\"; //API\n\nimport axios from \"/axios.js\"; //UI Components\n\nimport appNavi from \"@/components/app-structures/app-navbar.vue\";\nimport ViewLayout from \"@/layouts/non-sidebar-layout.vue\"; // import DxDateBox from \"devextreme-vue/date-box\";\n// import DxSelectBox from \"devextreme-vue/select-box\";\n\nimport PageLoading from \"@/components/app-structures/app-loading.vue\";\nexport default {\n  name: \"AccountView\",\n  components: {\n    appNavi: appNavi,\n    PageLoading: PageLoading\n  },\n  data: function data() {\n    return {\n      user: \"\",\n      formData: \"\",\n      invisiblePassword: \"********\",\n      isEdit: {\n        info: false,\n        account: false,\n        photo: false\n      },\n      jobPositionList: [\"Data Engineer\", \"Programmer\", \"General Engineer\", \"Manager\", \"Staff\"],\n      picUpload: \"\",\n      isLoading: false\n    };\n  },\n  created: function created() {\n    this.$emit(\"update:layout\", ViewLayout);\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"My Account\",\n      icon: \"\"\n    });\n    if (this.$store.state.status.server == true) this.FETCH_USER_INFO();\n  },\n  mounted: function mounted() {},\n  methods: {\n    FETCH_USER_INFO: function FETCH_USER_INFO() {\n      var _this = this;\n\n      this.isLoading = true;\n      setTimeout(function () {\n        var id_user = JSON.parse(localStorage.getItem(\"user\")).id_user;\n        axios({\n          method: \"post\",\n          url: \"/user/get-info\",\n          headers: {\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n          },\n          data: {\n            id_user: id_user\n          }\n        }).then(function (res) {\n          // console.log(res);\n          if (res.status == 200) {\n            var user = res.data.user;\n            _this.user = user;\n\n            if (user.profile_picture == null) {\n              _this.user.profile_picture = null;\n            } else {\n              _this.user.profile_picture = _this.baseURL + _this.user.profile_picture;\n            }\n\n            console.log(\"==> Fetch User Info : Account View <==\");\n          }\n        }).catch(function (error) {\n          console.log(error);\n        }).finally(function () {\n          _this.isLoading = false;\n        });\n      }, 500);\n    },\n    UPLOAD_PIC: function UPLOAD_PIC() {\n      var _this2 = this;\n\n      console.log(\"  ==> UPLOAD PIC\");\n      this.picUpload = this.$refs.file.files[0]; // console.log(this.picUpload);\n\n      if (this.picUpload && this.picUpload.type == \"image/jpeg\" || this.picUpload.type == \"image/png\") {\n        if (this.picUpload.size < 20000000) {\n          axios({\n            method: \"post\",\n            url: \"/user/upload-pic\",\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n            },\n            data: {\n              id_user: this.user.id_user,\n              file: this.picUpload\n            }\n          }).then(function (res) {\n            console.log(\"  ==> UPLOAD DONE\");\n\n            if (res.status == 200) {\n              // this.$router.go();\n              _this2.isEdit.photo = false;\n\n              _this2.$router.go();\n            }\n          }).catch(function (error) {\n            _this2.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n          }).finally(function () {});\n        } else {\n          this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n          var file = document.getElementById(\"pic-upload-btn\");\n          file.val = \"\";\n        }\n      } else {\n        this.$ons.notification.alert(\"Incorrect filetype. <br/> Only JPEG/PNG file can be uploaded.\");\n\n        var _file = document.getElementById(\"pic-upload-btn\");\n\n        _file.val = \"\";\n      }\n    },\n    BTN_EDIT: function BTN_EDIT(opt) {\n      var _this3 = this;\n\n      if (this.isEdit.info == true || this.isEdit.account == true || this.isEdit.photo == true) {\n        this.$ons.notification.confirm(\"Unsaved changes will be lost.\").then(function (res) {\n          if (res == 1) {\n            _this3.isEdit.info = false;\n            _this3.isEdit.account = false;\n            _this3.formData = clone(_this3.user);\n            if (opt == \"info\") _this3.isEdit.info = true;else if (opt == \"account\") _this3.isEdit.account = true;\n          }\n        });\n      } else {\n        this.formData = clone(this.user);\n        if (opt == \"info\") this.isEdit.info = true;else if (opt == \"account\") this.isEdit.account = true;else if (opt == \"photo\") this.isEdit.photo = true;\n      }\n    },\n    BTN_CANCEL: function BTN_CANCEL() {\n      var _this4 = this;\n\n      this.$ons.notification.confirm(\"Unsaved changes will be lost.\").then(function (res) {\n        if (res == 1) {\n          _this4.formData = {};\n          _this4.isEdit.info = false;\n          _this4.isEdit.account = false;\n          _this4.isEdit.photo = false;\n        }\n      });\n    },\n    SAVE_EDIT_INFO: function SAVE_EDIT_INFO() {\n      var _this5 = this;\n\n      this.$ons.notification.confirm(\"Confirm Save\").then(function (res) {\n        if (res == 1) {\n          var data = _this5.formData; // data.username = \"ditt\" + data.employee_no;\n\n          axios({\n            method: \"put\",\n            url: \"/user/update-info\",\n            headers: {\n              Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n            },\n            data: data\n          }).then(function (res) {\n            if (res.status == 200 && res.data) {\n              _this5.$ons.notification.alert(\"Update user information successful\").then(function (respone) {\n                if (respone == 0) {\n                  localStorage.setItem(\"user\", JSON.stringify(res.data[0]));\n                  _this5.isEdit.user = false; // this.$router.go();\n\n                  _this5.isEdit.info = false;\n\n                  _this5.FETCH_USER_INFO();\n                }\n              });\n            }\n          }).catch(function (error) {\n            _this5.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n          }).finally(function () {});\n        }\n      });\n    },\n    SAVE_EDIT_ACCOUNT: function SAVE_EDIT_ACCOUNT() {\n      var _this6 = this;\n\n      if (this.formData.oldPassword) {\n        if (this.formData.newPassword) {\n          if (this.formData.confirmPassword) {\n            if (this.formData.newPassword == this.formData.confirmPassword) {\n              if (sha256(this.formData.oldPassword) == this.user.password) {\n                this.$ons.notification.confirm(\"Confirm Save\").then(function (res) {\n                  if (res == 1) {\n                    var data = {\n                      id_user: _this6.formData.id_user,\n                      password: sha256(_this6.formData.confirmPassword)\n                    };\n                    axios({\n                      method: \"put\",\n                      url: \"/user/change-password\",\n                      headers: {\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n                      },\n                      data: data\n                    }).then(function (res) {\n                      if (res.status == 200 && res.data) {\n                        _this6.$ons.notification.alert(\"Account password changed\").then(function (respone) {\n                          if (respone == 0) {\n                            localStorage.setItem(\"user\", JSON.stringify(res.data[0])); // this.$router.go();\n\n                            _this6.isEdit.account = false;\n\n                            _this6.FETCH_USER_INFO();\n                          }\n                        });\n                      }\n                    }).catch(function (error) {\n                      _this6.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n                    }).finally(function () {});\n                  }\n                });\n              } else {\n                this.$ons.notification.alert(\"Old password is incorrect.\");\n              }\n            } else {\n              this.$ons.notification.alert(\"Confirm password mismatch.\");\n            }\n          } else {\n            this.$ons.notification.alert('\"Confirm Password\" field cannot be empty.');\n          }\n        } else {\n          this.$ons.notification.alert('\"Password\" field cannot be empty.');\n        }\n      } else {\n        this.$ons.notification.alert('\"Old Password\" field cannot be empty.');\n      }\n    }\n  },\n  computed: {\n    userBirthday: function userBirthday() {\n      var date = this.user.birthday;\n      return moment(date).format(\"LL\");\n    },\n    baseURL: function baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;else if (mode == \"prod\") return this.$store.state.modeURL.prod;else return console.log(\"develpment mode set up incorrect.\");\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2PA;AACA;AACA;AACA,4B,CAEA;;AACA,8B,CAEA;;AACA;AACA,0D,CACA;AACA;;AACA;AAEA;AACAA,qBADA;AAEAC;AAAAC;AAAAC;AAAA,GAFA;AAGAC,MAHA,kBAGA;AACA;AACAC,cADA;AAEAC,kBAFA;AAGAC,mCAHA;AAIAC;AACAC,mBADA;AAEAC,sBAFA;AAGAC;AAHA,OAJA;AASAC,wBACA,eADA,EAEA,YAFA,EAGA,kBAHA,EAIA,SAJA,EAKA,OALA,CATA;AAgBAC,mBAhBA;AAiBAC;AAjBA;AAmBA,GAvBA;AAwBAC,SAxBA,qBAwBA;AACA;AACA;AACAf,wBADA;AAEAgB;AAFA;AAIA;AACA,GA/BA;AAgCAC,SAhCA,qBAgCA,EAhCA;AAiCAC;AACAC,mBADA,6BACA;AAAA;;AACA;AACAC;AACA;AACAC;AACAC,wBADA;AAEAC,+BAFA;AAGAC;AACAC,2BACA;AAFA,WAHA;AAOArB;AAAAsB;AAAA;AAPA,WASAC,IATA,CASA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,aAFA,MAEA;AACA,2CACA,0CADA;AAEA;;AACAC;AACA;AACA,SAtBA,EAuBAC,KAvBA,CAuBA;AACAD;AACA,SAzBA,EA0BAE,OA1BA,CA0BA;AACA;AACA,SA5BA;AA6BA,OA/BA,EA+BA,GA/BA;AAgCA,KAnCA;AAoCAC,cApCA,wBAoCA;AAAA;;AACAH;AACA,gDAFA,CAGA;;AACA,UACA,yDACA,kCAFA,EAGA;AACA;AACAP;AACAC,0BADA;AAEAC,mCAFA;AAGAC;AACA,mDADA;AAEAC,6BACA;AAHA,aAHA;AAQArB;AACAsB,wCADA;AAEAM;AAFA;AARA,aAaAL,IAbA,CAaA;AACAC;;AAEA;AACA;AACA;;AACA;AACA;AACA,WArBA,EAsBAC,KAtBA,CAsBA;AACA,2CACAI,8DADA;AAGA,WA1BA,EA2BAH,OA3BA,CA2BA,cA3BA;AA4BA,SA7BA,MA6BA;AACA;AACA;AACAE;AACA;AACA,OAtCA,MAsCA;AACA,qCACA,+DADA;;AAGA;;AACAA;AACA;AACA,KArFA;AAsFAE,YAtFA,oBAsFAC,GAtFA,EAsFA;AAAA;;AACA,UACA,4BACA,2BADA,IAEA,yBAHA,EAIA;AACA,+BACAC,OADA,CACA,+BADA,EAEAT,IAFA,CAEA;AACA;AACA;AACA;AACA;AACA,8DACA;AACA;AACA,SAVA;AAWA,OAhBA,MAgBA;AACA;AACA,wDACA,sDACA;AACA;AACA,KA7GA;AA8GAU,cA9GA,wBA8GA;AAAA;;AACA,6BACAD,OADA,CACA,+BADA,EAEAT,IAFA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OATA;AAUA,KAzHA;AA0HAW,kBA1HA,4BA0HA;AAAA;;AACA;AACA;AACA,qCADA,CAEA;;AACAjB;AACAC,yBADA;AAEAC,oCAFA;AAGAC;AACAC,6BACA;AAFA,aAHA;AAOArB;AAPA,aASAuB,IATA,CASA;AACA;AACA,uCACAY,KADA,CACA,oCADA,EAEAZ,IAFA,CAEA;AACA;AACAa;AACA,6CAFA,CAGA;;AACA;;AACA;AACA;AACA,eAVA;AAWA;AACA,WAvBA,EAwBAX,KAxBA,CAwBA;AACA,2CACAI,8DADA;AAGA,WA5BA,EA6BAH,OA7BA,CA6BA,cA7BA;AA8BA;AACA,OAnCA;AAoCA,KA/JA;AAgKAW,qBAhKA,+BAgKA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,sDADA;AAEAgB;AAFA;AAIArB;AACAC,mCADA;AAEAC,kDAFA;AAGAC;AACAC,uCACA;AAFA,uBAHA;AAOArB;AAPA,uBASAuB,IATA,CASA;AACA;AACA,iDACAY,KADA,CACA,0BADA,EAEAZ,IAFA,CAEA;AACA;AACAa,iDACA,MADA,EAEAG,2BAFA,EADA,CAKA;;AACA;;AACA;AACA;AACA,yBAZA;AAaA;AACA,qBAzBA,EA0BAd,KA1BA,CA0BA;AACA,qDACAI,aACA,GADA,GAEAA,qBAFA,GAGA,GAHA,GAIAA,aALA;AAOA,qBAlCA,EAmCAH,OAnCA,CAmCA,cAnCA;AAoCA;AACA,iBA3CA;AA4CA,eA7CA,MA6CA;AACA;AACA;AACA,aAjDA,MAiDA;AACA;AACA;AACA,WArDA,MAqDA;AACA,yCACA,2CADA;AAGA;AACA,SA3DA,MA2DA;AACA;AACA;AACA,OA/DA,MA+DA;AACA;AACA;AACA;AAnOA,GAjCA;AAsQAc;AACAC,gBADA,0BACA;AACA;AACA;AACA,KAJA;AAKAC,WALA,qBAKA;AACA;AACA,mEACA,+DACA;AACA;AAVA;AAtQA","names":["name","components","appNavi","PageLoading","data","user","formData","invisiblePassword","isEdit","info","account","photo","jobPositionList","picUpload","isLoading","created","icon","mounted","methods","FETCH_USER_INFO","setTimeout","axios","method","url","headers","Authorization","id_user","then","console","catch","finally","UPLOAD_PIC","file","error","BTN_EDIT","opt","confirm","BTN_CANCEL","SAVE_EDIT_INFO","alert","localStorage","SAVE_EDIT_ACCOUNT","password","JSON","computed","userBirthday","baseURL"],"sourceRoot":"src/views","sources":["AccountView.vue"],"sourcesContent":["<template>\n  <div id=\"page-account\" class=\"page-body\">\n    <appNavi :isBack=\"false\" pageName=\"My Account\" />\n    <div class=\"page-container page-display\">\n      <div class=\"form\">\n        <div class=\"page-section-button\">\n          <h2 class=\"page-section-label\">Profile Photo</h2>\n          <v-ons-toolbar-button\n            class=\"popover-button\"\n            v-on:click=\"BTN_EDIT('photo')\"\n            v-if=\"isEdit.photo == false\"\n          >\n            <i class=\"las la-edit\"></i>\n            <span>Edit</span>\n          </v-ons-toolbar-button>\n        </div>\n        <div class=\"form-item-container profile-box\">\n          <div class=\"profile-photo\">\n            <div class=\"btn-pic-change\" v-if=\"isEdit.photo == true\">\n              <label for=\"pic-upload-btn\"><i class=\"las la-edit\"></i></label>\n            </div>\n            <input\n              type=\"file\"\n              id=\"pic-upload-btn\"\n              style=\"display: none\"\n              ref=\"file\"\n              @change=\"UPLOAD_PIC()\"\n            />\n            <img :src=\"user.profile_picture\" v-if=\"user.profile_picture\" />\n            <img\n              src=\"/img/default_profile_picture.png\"\n              v-if=\"!user.profile_picture\"\n            />\n          </div>\n        </div>\n        <div class=\"form-button-container\" v-if=\"isEdit.photo == true\">\n          <div class=\"button-set\">\n            <button class=\"grey\" v-on:click=\"BTN_CANCEL()\">\n              <label>Cancel</label>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"form\" style=\"grid-row: span 2\">\n        <div class=\"page-section-button\">\n          <h2 class=\"page-section-label\">Personal Informations</h2>\n          <v-ons-toolbar-button\n            class=\"popover-button\"\n            v-on:click=\"BTN_EDIT('info')\"\n            v-if=\"isEdit.info == false\"\n          >\n            <i class=\"las la-edit\"></i>\n            <span>Edit</span>\n          </v-ons-toolbar-button>\n        </div>\n        <div class=\"form-item-container\">\n          <div class=\"input-set\">\n            <p class=\"label\">Name:</p>\n            <p class=\"info\" v-if=\"isEdit.info == false\">\n              {{ user.firstname }} {{ user.lastname }}\n            </p>\n            <input\n              placeholder=\"Firstname\"\n              v-model=\"formData.firstname\"\n              v-if=\"isEdit.info == true\"\n              style=\"border-radius: 6px 0 0 6px; grid-column: span 1\"\n            />\n            <input\n              placeholder=\"Lastname\"\n              v-model=\"formData.lastname\"\n              v-if=\"isEdit.info == true\"\n              style=\"\n                border-radius: 0 6px 6px 0;\n                border-width: 1px 1px 1px 0;\n                grid-column: span 1;\n              \"\n            />\n          </div>\n          <!-- <div class=\"input-set\">\n            <p class=\"label\">Nickname:</p>\n            <p class=\"info\" v-if=\"isEdit.info == false\">\n              {{ user.nickname }}\n            </p>\n            <input\n              placeholder=\"Nickname\"\n              v-model=\"formData.nickname\"\n              v-if=\"isEdit.info == true\"\n            />\n          </div> -->\n          <!-- <div class=\"input-set\">\n            <p class=\"label\">Birthday:</p>\n            <p class=\"info\" v-if=\"isEdit.info == false\">\n              {{ userBirthday }}\n            </p>\n            <DxDateBox\n              :value=\"formData.birthday\"\n              type=\"date\"\n              v-model=\"formData.birthday\"\n              placeholder=\"Birthday\"\n              v-if=\"isEdit.info == true\"\n              style=\"grid-column: span 2; margin: 10px 0 5px 0\"\n            />\n          </div> -->\n          <div class=\"input-set\">\n            <p class=\"label\">Position:</p>\n            <p class=\"info\">\n              {{ user.position }}\n            </p>\n            <!-- <input\n              placeholder=\"Position\"\n              v-model=\"formData.position\"\n              v-if=\"isEdit.info == true\"\n            /> -->\n            <!-- <DxSelectBox\n              v-if=\"isEdit.info == true\"\n              style=\"\n                border: 0;\n                font-size: 14px;\n                grid-column: span 2;\n                margin: 10px 0 5px 0;\n              \"\n              :items=\"jobPositionList\"\n              placeholder=\"Select Job Position\"\n              v-model=\"formData.position\"\n              item-template=\"item\"\n            /> -->\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Department:</p>\n            <p class=\"info\">\n              {{ user.department }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Employee No:</p>\n            <p class=\"info\">\n              {{ user.employee_no }}\n            </p>\n            <!-- <input\n              placeholder=\"Employee No\"\n              v-model=\"formData.employee_no\"\n              v-if=\"isEdit.info == true\"\n            /> -->\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Email:</p>\n            <p class=\"info\" v-if=\"isEdit.info == false\">\n              {{ user.email }}\n            </p>\n            <input\n              placeholder=\"Email\"\n              v-model=\"formData.email\"\n              v-if=\"isEdit.info == true\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Phone No:</p>\n            <p class=\"info\" v-if=\"isEdit.info == false\">\n              {{ user.phone_no }}\n            </p>\n            <input\n              placeholder=\"Phone No\"\n              v-model=\"formData.phone_no\"\n              v-if=\"isEdit.info == true\"\n            />\n          </div>\n        </div>\n        <div class=\"form-button-container\" v-if=\"isEdit.info == true\">\n          <div class=\"button-set\">\n            <button class=\"blue\" v-on:click=\"SAVE_EDIT_INFO()\">\n              <label>Save</label>\n            </button>\n            <button class=\"grey\" v-on:click=\"BTN_CANCEL()\">\n              <label>Cancel</label>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"form\">\n        <div class=\"page-section-button\">\n          <h2 class=\"page-section-label\">Account Setting</h2>\n          <v-ons-toolbar-button\n            class=\"popover-button\"\n            v-on:click=\"BTN_EDIT('account')\"\n            v-if=\"isEdit.account == false\"\n          >\n            <i class=\"las la-edit\"></i>\n            <span>Edit</span>\n          </v-ons-toolbar-button>\n        </div>\n        <div class=\"form-item-container\">\n          <div class=\"input-set\">\n            <p class=\"label\">Username:</p>\n            <p class=\"info\">\n              {{ user.username }}\n            </p>\n          </div>\n          <div class=\"input-set\" v-if=\"isEdit.account == true\">\n            <p class=\"label\">Old Password:</p>\n            <input\n              placeholder=\"Old Password\"\n              v-model=\"formData.oldPassword\"\n              v-if=\"isEdit.account == true\"\n              type=\"password\"\n            />\n          </div>\n          <div class=\"input-set\" v-if=\"isEdit.account == false\">\n            <p class=\"label\">Password:</p>\n            <p class=\"info\">\n              {{ invisiblePassword }}\n            </p>\n          </div>\n          <div class=\"input-set\" v-if=\"isEdit.account == true\">\n            <p class=\"label\">New Password:</p>\n            <input\n              placeholder=\"New Password\"\n              v-model=\"formData.newPassword\"\n              type=\"password\"\n            />\n          </div>\n          <div\n            class=\"input-set\"\n            v-if=\"formData.newPassword && this.isEdit.account == true\"\n          >\n            <p class=\"label\">Confirm Password:</p>\n            <input\n              placeholder=\"Confirm Password\"\n              v-model=\"formData.confirmPassword\"\n              v-if=\"isEdit.account == true\"\n              type=\"password\"\n              v-on:keyup.enter=\"SAVE_EDIT_ACCOUNT()\"\n            />\n          </div>\n        </div>\n        <div class=\"form-button-container\" v-if=\"isEdit.account == true\">\n          <div class=\"button-set\">\n            <button class=\"blue\" v-on:click=\"SAVE_EDIT_ACCOUNT()\">\n              <label>Save</label>\n            </button>\n            <button class=\"grey\" v-on:click=\"BTN_CANCEL()\">\n              <label>Cancel</label>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <PageLoading v-if=\"isLoading == true\" text=\"Loading\" />\n  </div>\n</template>\n\n<script>\n//JS\nimport clone from \"just-clone\";\nimport { sha256 } from \"js-sha256\";\nimport moment from \"moment\";\n\n//API\nimport axios from \"/axios.js\";\n\n//UI Components\nimport appNavi from \"@/components/app-structures/app-navbar.vue\";\nimport ViewLayout from \"@/layouts/non-sidebar-layout.vue\";\n// import DxDateBox from \"devextreme-vue/date-box\";\n// import DxSelectBox from \"devextreme-vue/select-box\";\nimport PageLoading from \"@/components/app-structures/app-loading.vue\";\n\nexport default {\n  name: \"AccountView\",\n  components: { appNavi, PageLoading },\n  data() {\n    return {\n      user: \"\",\n      formData: \"\",\n      invisiblePassword: \"********\",\n      isEdit: {\n        info: false,\n        account: false,\n        photo: false,\n      },\n      jobPositionList: [\n        \"Data Engineer\",\n        \"Programmer\",\n        \"General Engineer\",\n        \"Manager\",\n        \"Staff\",\n      ],\n      picUpload: \"\",\n      isLoading: false,\n    };\n  },\n  created() {\n    this.$emit(`update:layout`, ViewLayout);\n    this.$store.commit(\"UPDATE_CURRENT_INAPP\", {\n      name: \"My Account\",\n      icon: \"\",\n    });\n    if (this.$store.state.status.server == true) this.FETCH_USER_INFO();\n  },\n  mounted() {},\n  methods: {\n    FETCH_USER_INFO() {\n      this.isLoading = true;\n      setTimeout(() => {\n        var id_user = JSON.parse(localStorage.getItem(\"user\")).id_user;\n        axios({\n          method: \"post\",\n          url: \"/user/get-info\",\n          headers: {\n            Authorization:\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n          },\n          data: { id_user },\n        })\n          .then((res) => {\n            // console.log(res);\n            if (res.status == 200) {\n              var user = res.data.user;\n              this.user = user;\n              if (user.profile_picture == null) {\n                this.user.profile_picture = null;\n              } else {\n                this.user.profile_picture =\n                  this.baseURL + this.user.profile_picture;\n              }\n              console.log(\"==> Fetch User Info : Account View <==\");\n            }\n          })\n          .catch((error) => {\n            console.log(error);\n          })\n          .finally(() => {\n            this.isLoading = false;\n          });\n      }, 500);\n    },\n    UPLOAD_PIC() {\n      console.log(\"  ==> UPLOAD PIC\");\n      this.picUpload = this.$refs.file.files[0];\n      // console.log(this.picUpload);\n      if (\n        (this.picUpload && this.picUpload.type == \"image/jpeg\") ||\n        this.picUpload.type == \"image/png\"\n      ) {\n        if (this.picUpload.size < 20000000) {\n          axios({\n            method: \"post\",\n            url: \"/user/upload-pic\",\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n              Authorization:\n                \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n            },\n            data: {\n              id_user: this.user.id_user,\n              file: this.picUpload,\n            },\n          })\n            .then((res) => {\n              console.log(\"  ==> UPLOAD DONE\");\n\n              if (res.status == 200) {\n                // this.$router.go();\n                this.isEdit.photo = false;\n                this.$router.go();\n              }\n            })\n            .catch((error) => {\n              this.$ons.notification.alert(\n                error.code + \" \" + error.response.status + \" \" + error.message\n              );\n            })\n            .finally(() => {});\n        } else {\n          this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n          const file = document.getElementById(\"pic-upload-btn\");\n          file.val = \"\";\n        }\n      } else {\n        this.$ons.notification.alert(\n          \"Incorrect filetype. <br/> Only JPEG/PNG file can be uploaded.\"\n        );\n        const file = document.getElementById(\"pic-upload-btn\");\n        file.val = \"\";\n      }\n    },\n    BTN_EDIT(opt) {\n      if (\n        this.isEdit.info == true ||\n        this.isEdit.account == true ||\n        this.isEdit.photo == true\n      ) {\n        this.$ons.notification\n          .confirm(\"Unsaved changes will be lost.\")\n          .then((res) => {\n            if (res == 1) {\n              this.isEdit.info = false;\n              this.isEdit.account = false;\n              this.formData = clone(this.user);\n              if (opt == \"info\") this.isEdit.info = true;\n              else if (opt == \"account\") this.isEdit.account = true;\n            }\n          });\n      } else {\n        this.formData = clone(this.user);\n        if (opt == \"info\") this.isEdit.info = true;\n        else if (opt == \"account\") this.isEdit.account = true;\n        else if (opt == \"photo\") this.isEdit.photo = true;\n      }\n    },\n    BTN_CANCEL() {\n      this.$ons.notification\n        .confirm(\"Unsaved changes will be lost.\")\n        .then((res) => {\n          if (res == 1) {\n            this.formData = {};\n            this.isEdit.info = false;\n            this.isEdit.account = false;\n            this.isEdit.photo = false;\n          }\n        });\n    },\n    SAVE_EDIT_INFO() {\n      this.$ons.notification.confirm(\"Confirm Save\").then((res) => {\n        if (res == 1) {\n          const data = this.formData;\n          // data.username = \"ditt\" + data.employee_no;\n          axios({\n            method: \"put\",\n            url: \"/user/update-info\",\n            headers: {\n              Authorization:\n                \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n            },\n            data: data,\n          })\n            .then((res) => {\n              if (res.status == 200 && res.data) {\n                this.$ons.notification\n                  .alert(\"Update user information successful\")\n                  .then((respone) => {\n                    if (respone == 0) {\n                      localStorage.setItem(\"user\", JSON.stringify(res.data[0]));\n                      this.isEdit.user = false;\n                      // this.$router.go();\n                      this.isEdit.info = false;\n                      this.FETCH_USER_INFO();\n                    }\n                  });\n              }\n            })\n            .catch((error) => {\n              this.$ons.notification.alert(\n                error.code + \" \" + error.response.status + \" \" + error.message\n              );\n            })\n            .finally(() => {});\n        }\n      });\n    },\n    SAVE_EDIT_ACCOUNT() {\n      if (this.formData.oldPassword) {\n        if (this.formData.newPassword) {\n          if (this.formData.confirmPassword) {\n            if (this.formData.newPassword == this.formData.confirmPassword) {\n              if (sha256(this.formData.oldPassword) == this.user.password) {\n                this.$ons.notification.confirm(\"Confirm Save\").then((res) => {\n                  if (res == 1) {\n                    const data = {\n                      id_user: this.formData.id_user,\n                      password: sha256(this.formData.confirmPassword),\n                    };\n                    axios({\n                      method: \"put\",\n                      url: \"/user/change-password\",\n                      headers: {\n                        Authorization:\n                          \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n                      },\n                      data: data,\n                    })\n                      .then((res) => {\n                        if (res.status == 200 && res.data) {\n                          this.$ons.notification\n                            .alert(\"Account password changed\")\n                            .then((respone) => {\n                              if (respone == 0) {\n                                localStorage.setItem(\n                                  \"user\",\n                                  JSON.stringify(res.data[0])\n                                );\n                                // this.$router.go();\n                                this.isEdit.account = false;\n                                this.FETCH_USER_INFO();\n                              }\n                            });\n                        }\n                      })\n                      .catch((error) => {\n                        this.$ons.notification.alert(\n                          error.code +\n                            \" \" +\n                            error.response.status +\n                            \" \" +\n                            error.message\n                        );\n                      })\n                      .finally(() => {});\n                  }\n                });\n              } else {\n                this.$ons.notification.alert(\"Old password is incorrect.\");\n              }\n            } else {\n              this.$ons.notification.alert(\"Confirm password mismatch.\");\n            }\n          } else {\n            this.$ons.notification.alert(\n              '\"Confirm Password\" field cannot be empty.'\n            );\n          }\n        } else {\n          this.$ons.notification.alert('\"Password\" field cannot be empty.');\n        }\n      } else {\n        this.$ons.notification.alert('\"Old Password\" field cannot be empty.');\n      }\n    },\n  },\n  computed: {\n    userBirthday() {\n      var date = this.user.birthday;\n      return moment(date).format(\"LL\");\n    },\n    baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;\n      else if (mode == \"prod\") return this.$store.state.modeURL.prod;\n      else return console.log(\"develpment mode set up incorrect.\");\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n@import \"@/style/form.scss\";\n#page-account {\n  overflow: scroll;\n  height: calc(100% - 54px);\n}\n\n#page-account::-webkit-scrollbar {\n  display: none;\n}\n.form {\n  margin: 0 auto;\n  // padding: 0 20px;\n  width: 100%;\n  .form-item-container {\n    display: block !important;\n    margin: auto;\n    .input-set {\n      display: grid;\n      grid-template-columns: 100px 200px 200px;\n      .label {\n        height: 20px;\n      }\n      .info {\n        height: 20px;\n        padding: 6px 0;\n        text-align: left;\n        grid-column: span 2;\n        text-indent: 10px;\n        margin: 10px 0 5px 0;\n      }\n      input {\n        height: 36px;\n        padding: 6px 0;\n        margin: 10px 0 5px 0;\n        grid-column: span 2;\n        font-weight: 500;\n        line-height: 20px;\n      }\n    }\n  }\n  .profile-box {\n    margin: 0 auto;\n    padding: 20px 0;\n    width: 500px;\n  }\n}\n\n.page-display {\n  display: grid;\n  grid-template-columns: 50% 50%;\n  padding-top: 20px;\n}\n\n.toolbar-button {\n  height: 34px;\n  padding: 0 10px;\n  border: 0;\n  i {\n    margin-right: 6px;\n    margin-left: 0;\n  }\n}\n\n.toolbar-button:hover {\n  background-color: #0076ff;\n  color: #fff;\n}\n\n.page-section-button {\n  padding: 0 70px;\n}\n\n.form .form-button-container {\n  width: 500px;\n  margin: 0 auto;\n  padding: 20px 0;\n}\n\n@media screen and (max-width: 1024px) {\n  .page-display {\n    display: block;\n  }\n}\n\n.btn-pic-change {\n  label {\n    width: 100px;\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 100px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}