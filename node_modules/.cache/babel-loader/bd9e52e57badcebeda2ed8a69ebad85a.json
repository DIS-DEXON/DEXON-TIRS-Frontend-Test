{"ast":null,"code":"import _toConsumableArray from \"/Users/dexon/Projects/AI-Portal-Frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.regexp.flags.js\";\nimport \"core-js/modules/es.array.join.js\";\nvar collectionClone = clone;\n/*\n  Deep clones all properties except functions\n\n  var arr = [1, 2, 3];\n  var subObj = {aa: 1};\n  var obj = {a: 3, b: 5, c: arr, d: subObj};\n  var objClone = clone(obj);\n  arr.push(4);\n  subObj.bb = 2;\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4], d: {aa: 1}}\n  objClone; // {a: 3, b: 5, c: [1, 2, 3], d: {aa: 1, bb: 2}}\n*/\n\nfunction clone(obj) {\n  var result = obj;\n  var type = {}.toString.call(obj).slice(8, -1);\n\n  if (type == 'Set') {\n    return new Set(_toConsumableArray(obj).map(function (value) {\n      return clone(value);\n    }));\n  }\n\n  if (type == 'Map') {\n    return new Map(_toConsumableArray(obj).map(function (kv) {\n      return [clone(kv[0]), clone(kv[1])];\n    }));\n  }\n\n  if (type == 'Date') {\n    return new Date(obj.getTime());\n  }\n\n  if (type == 'RegExp') {\n    return RegExp(obj.source, getRegExpFlags(obj));\n  }\n\n  if (type == 'Array' || type == 'Object') {\n    result = Array.isArray(obj) ? [] : {};\n\n    for (var key in obj) {\n      // include prototype properties\n      result[key] = clone(obj[key]);\n    }\n  } // primitives and non-supported objects (e.g. functions) land here\n\n\n  return result;\n}\n\nfunction getRegExpFlags(regExp) {\n  if (typeof regExp.source.flags == 'string') {\n    return regExp.source.flags;\n  } else {\n    var flags = [];\n    regExp.global && flags.push('g');\n    regExp.ignoreCase && flags.push('i');\n    regExp.multiline && flags.push('m');\n    regExp.sticky && flags.push('y');\n    regExp.unicode && flags.push('u');\n    return flags.join('');\n  }\n}\n\nexport { collectionClone as default };","map":{"version":3,"sources":["/Users/dexon/Projects/AI-Portal-Frontend/node_modules/just-clone/index.mjs"],"names":["collectionClone","clone","obj","result","type","toString","call","slice","Set","map","value","Map","kv","Date","getTime","RegExp","source","getRegExpFlags","Array","isArray","key","regExp","flags","global","push","ignoreCase","multiline","sticky","unicode","join","default"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAIA,eAAe,GAAGC,KAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,KAAT,CAAeC,GAAf,EAAoB;AAClB,MAAIC,MAAM,GAAGD,GAAb;AACA,MAAIE,IAAI,GAAG,GAAGC,QAAH,CAAYC,IAAZ,CAAiBJ,GAAjB,EAAsBK,KAAtB,CAA4B,CAA5B,EAA+B,CAAC,CAAhC,CAAX;;AACA,MAAIH,IAAI,IAAI,KAAZ,EAAmB;AACjB,WAAO,IAAII,GAAJ,CAAQ,mBAAIN,GAAJ,EAASO,GAAT,CAAa,UAAAC,KAAK;AAAA,aAAIT,KAAK,CAACS,KAAD,CAAT;AAAA,KAAlB,CAAR,CAAP;AACD;;AACD,MAAIN,IAAI,IAAI,KAAZ,EAAmB;AACjB,WAAO,IAAIO,GAAJ,CAAQ,mBAAIT,GAAJ,EAASO,GAAT,CAAa,UAAAG,EAAE;AAAA,aAAI,CAACX,KAAK,CAACW,EAAE,CAAC,CAAD,CAAH,CAAN,EAAeX,KAAK,CAACW,EAAE,CAAC,CAAD,CAAH,CAApB,CAAJ;AAAA,KAAf,CAAR,CAAP;AACD;;AACD,MAAIR,IAAI,IAAI,MAAZ,EAAoB;AAClB,WAAO,IAAIS,IAAJ,CAASX,GAAG,CAACY,OAAJ,EAAT,CAAP;AACD;;AACD,MAAIV,IAAI,IAAI,QAAZ,EAAsB;AACpB,WAAOW,MAAM,CAACb,GAAG,CAACc,MAAL,EAAaC,cAAc,CAACf,GAAD,CAA3B,CAAb;AACD;;AACD,MAAIE,IAAI,IAAI,OAAR,IAAmBA,IAAI,IAAI,QAA/B,EAAyC;AACvCD,IAAAA,MAAM,GAAGe,KAAK,CAACC,OAAN,CAAcjB,GAAd,IAAqB,EAArB,GAA0B,EAAnC;;AACA,SAAK,IAAIkB,GAAT,IAAgBlB,GAAhB,EAAqB;AACnB;AACAC,MAAAA,MAAM,CAACiB,GAAD,CAAN,GAAcnB,KAAK,CAACC,GAAG,CAACkB,GAAD,CAAJ,CAAnB;AACD;AACF,GArBiB,CAsBlB;;;AACA,SAAOjB,MAAP;AACD;;AAED,SAASc,cAAT,CAAwBI,MAAxB,EAAgC;AAC9B,MAAI,OAAOA,MAAM,CAACL,MAAP,CAAcM,KAArB,IAA8B,QAAlC,EAA4C;AAC1C,WAAOD,MAAM,CAACL,MAAP,CAAcM,KAArB;AACD,GAFD,MAEO;AACL,QAAIA,KAAK,GAAG,EAAZ;AACAD,IAAAA,MAAM,CAACE,MAAP,IAAiBD,KAAK,CAACE,IAAN,CAAW,GAAX,CAAjB;AACAH,IAAAA,MAAM,CAACI,UAAP,IAAqBH,KAAK,CAACE,IAAN,CAAW,GAAX,CAArB;AACAH,IAAAA,MAAM,CAACK,SAAP,IAAoBJ,KAAK,CAACE,IAAN,CAAW,GAAX,CAApB;AACAH,IAAAA,MAAM,CAACM,MAAP,IAAiBL,KAAK,CAACE,IAAN,CAAW,GAAX,CAAjB;AACAH,IAAAA,MAAM,CAACO,OAAP,IAAkBN,KAAK,CAACE,IAAN,CAAW,GAAX,CAAlB;AACA,WAAOF,KAAK,CAACO,IAAN,CAAW,EAAX,CAAP;AACD;AACF;;AAED,SAAQ7B,eAAe,IAAI8B,OAA3B","sourcesContent":["var collectionClone = clone;\n\n/*\n  Deep clones all properties except functions\n\n  var arr = [1, 2, 3];\n  var subObj = {aa: 1};\n  var obj = {a: 3, b: 5, c: arr, d: subObj};\n  var objClone = clone(obj);\n  arr.push(4);\n  subObj.bb = 2;\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4], d: {aa: 1}}\n  objClone; // {a: 3, b: 5, c: [1, 2, 3], d: {aa: 1, bb: 2}}\n*/\n\nfunction clone(obj) {\n  let result = obj;\n  var type = {}.toString.call(obj).slice(8, -1);\n  if (type == 'Set') {\n    return new Set([...obj].map(value => clone(value)));\n  }\n  if (type == 'Map') {\n    return new Map([...obj].map(kv => [clone(kv[0]), clone(kv[1])]));\n  }\n  if (type == 'Date') {\n    return new Date(obj.getTime());\n  }\n  if (type == 'RegExp') {\n    return RegExp(obj.source, getRegExpFlags(obj));\n  }\n  if (type == 'Array' || type == 'Object') {\n    result = Array.isArray(obj) ? [] : {};\n    for (var key in obj) {\n      // include prototype properties\n      result[key] = clone(obj[key]);\n    }\n  }\n  // primitives and non-supported objects (e.g. functions) land here\n  return result;\n}\n\nfunction getRegExpFlags(regExp) {\n  if (typeof regExp.source.flags == 'string') {\n    return regExp.source.flags;\n  } else {\n    var flags = [];\n    regExp.global && flags.push('g');\n    regExp.ignoreCase && flags.push('i');\n    regExp.multiline && flags.push('m');\n    regExp.sticky && flags.push('y');\n    regExp.unicode && flags.push('u');\n    return flags.join('');\n  }\n}\n\nexport {collectionClone as default};\n"]},"metadata":{},"sourceType":"module"}