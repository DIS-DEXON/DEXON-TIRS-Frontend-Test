{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport axios from \"/axios.js\";\nexport default {\n  name: \"chart-forecast-sales-bar\",\n\n  created() {\n    this.FETCH_DATA();\n  },\n\n  data() {\n    return {\n      chartData: {\n        idb: [],\n        rbi: [],\n        ffs: [],\n        itp: []\n      },\n      chartOptions: {\n        chart: {\n          type: \"column\"\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: \"THE QUARTERLY SUMMARY OF FORECAST REVENUE BY SERVICE TYPE IN 2023\"\n        },\n        yAxis: {\n          title: {\n            text: \"FORECAST REVENUE [MB]\",\n            style: {\n              fontSize: \"14\"\n            }\n          },\n          labels: {\n            formatter: function () {\n              return (this.value / 1000000).toFixed(2);\n            },\n            style: {\n              fontSize: \"14\"\n            }\n          }\n        },\n        xAxis: {\n          crosshair: true,\n          categories: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n          labels: {\n            style: {\n              fontSize: \"14\"\n            }\n          }\n        },\n        legend: {\n          layout: \"horizontal\",\n          align: \"center\",\n          verticalAlign: \"bottom\"\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false\n            }\n          }\n        },\n        series: [{\n          name: \"IDB\",\n          data: [],\n          color: \"#3a0ca3\",\n          dataLabels: {\n            enabled: true,\n            rotation: -90,\n            color: \"#FFFFFF\",\n            align: \"right\",\n            y: 10,\n            // 10 pixels down from the top\n            style: {\n              fontSize: \"10px\"\n            },\n            formatter: function () {\n              return (this.point.y / 1000000).toFixed(2);\n            }\n          }\n        }, {\n          name: \"RBI\",\n          data: [],\n          color: \"#7209b7\",\n          dataLabels: {\n            enabled: true,\n            rotation: -90,\n            color: \"#FFFFFF\",\n            align: \"right\",\n            y: 10,\n            // 10 pixels down from the top\n            style: {\n              fontSize: \"10px\"\n            },\n            formatter: function () {\n              return (this.point.y / 1000000).toFixed(2);\n            }\n          }\n        }, {\n          name: \"FFS\",\n          data: [],\n          color: \"#4cc9f0\",\n          dataLabels: {\n            enabled: true,\n            rotation: -90,\n            color: \"#FFFFFF\",\n            align: \"right\",\n            y: 10,\n            // 10 pixels down from the top\n            style: {\n              fontSize: \"10px\"\n            },\n            formatter: function () {\n              return (this.point.y / 1000000).toFixed(2);\n            }\n          }\n        }, {\n          name: \"ITP\",\n          data: [],\n          color: \"#4361ee\",\n          dataLabels: {\n            enabled: true,\n            rotation: -90,\n            color: \"#FFFFFF\",\n            align: \"right\",\n            y: 10,\n            // 10 pixels down from the top\n            style: {\n              fontSize: \"10px\"\n            },\n            formatter: function () {\n              return (this.point.y / 1000000).toFixed(2);\n            }\n          }\n        }],\n        tooltip: {\n          formatter: function () {\n            return \"The <b>\" + this.series.name + \" </b>value for <b>\" + this.x + \"</b> is <b>\" + (this.y / 1000000).toFixed(2) + \"MB\";\n          }\n        },\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 500\n            },\n            chartOptions: {\n              legend: {\n                layout: \"horizontal\",\n                align: \"center\",\n                verticalAlign: \"bottom\"\n              }\n            }\n          }]\n        }\n      }\n    };\n  },\n\n  methods: {\n    FETCH_DATA() {\n      axios({\n        method: \"post\",\n        url: \"forecast-sales/forecast-sales-group-sumbyyear\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n        },\n        data: {\n          year_no: moment().year() + 1\n        }\n      }).then(res => {\n        // console.log(res);\n        if (res.data) {\n          var json_idb = res.data;\n\n          for (var i = 0; i < json_idb.length; i++) {\n            if (json_idb[i].service_type == 1) this.chartData.idb.push(json_idb[i].y);\n            if (json_idb[i].service_type == 2) this.chartData.rbi.push(json_idb[i].y);\n            if (json_idb[i].service_type == 3) this.chartData.ffs.push(json_idb[i].y);\n            if (json_idb[i].service_type == 4) this.chartData.itp.push(json_idb[i].y);\n          }\n\n          if (this.chartData.idb.length > 0) this.chartOptions.series[0].data = this.chartData.idb;\n          if (this.chartData.rbi.length > 0) this.chartOptions.series[1].data = this.chartData.rbi;\n          if (this.chartData.ffs.length > 0) this.chartOptions.series[2].data = this.chartData.ffs;\n          if (this.chartData.itp.length > 0) this.chartOptions.series[3].data = this.chartData.itp;\n        }\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {});\n    }\n\n  },\n  computed: {}\n};","map":{"version":3,"mappings":";;;;;;;AAQA;AACA;AAEA;AACAA,kCADA;;AAEAC;AACA;AACA,GAJA;;AAKAC;AACA;AACAC;AACAC,eADA;AAEAC,eAFA;AAGAC,eAHA;AAIAC;AAJA,OADA;AAOAC;AACAC;AACAC;AADA,SADA;AAIAC;AACAC;AADA,SAJA;AAOAC;AACAC;AADA,SAPA;AAUAC;AACAF;AACAC,yCADA;AAEAE;AACAC;AADA;AAFA,WADA;AAOAC;AACAC;AACA;AACA,aAHA;AAIAH;AACAC;AADA;AAJA;AAPA,SAVA;AA0BAG;AACAC,yBADA;AAEAC,8CAFA;AAGAJ;AACAF;AACAC;AADA;AADA;AAHA,SA1BA;AAmCAM;AACAC,8BADA;AAEAC,yBAFA;AAGAC;AAHA,SAnCA;AAwCAC;AACAC;AACAC;AACAC;AADA;AADA;AADA,SAxCA;AA+CAF,iBACA;AACA5B,qBADA;AAEAE,kBAFA;AAGA6B,0BAHA;AAIAC;AACApB,yBADA;AAEAqB,yBAFA;AAGAF,4BAHA;AAIAN,0BAJA;AAKAS,iBALA;AAKA;AACAlB;AACAC;AADA,aANA;AASAE;AACA;AACA;AAXA;AAJA,SADA,EAmBA;AACAnB,qBADA;AAEAE,kBAFA;AAGA6B,0BAHA;AAIAC;AACApB,yBADA;AAEAqB,yBAFA;AAGAF,4BAHA;AAIAN,0BAJA;AAKAS,iBALA;AAKA;AACAlB;AACAC;AADA,aANA;AASAE;AACA;AACA;AAXA;AAJA,SAnBA,EAqCA;AACAnB,qBADA;AAEAE,kBAFA;AAGA6B,0BAHA;AAIAC;AACApB,yBADA;AAEAqB,yBAFA;AAGAF,4BAHA;AAIAN,0BAJA;AAKAS,iBALA;AAKA;AACAlB;AACAC;AADA,aANA;AASAE;AACA;AACA;AAXA;AAJA,SArCA,EAuDA;AACAnB,qBADA;AAEAE,kBAFA;AAGA6B,0BAHA;AAIAC;AACApB,yBADA;AAEAqB,yBAFA;AAGAF,4BAHA;AAIAN,0BAJA;AAKAS,iBALA;AAKA;AACAlB;AACAC;AADA,aANA;AASAE;AACA;AACA;AAXA;AAJA,SAvDA,CA/CA;AAyHAgB;AACAhB;AACA,mBACA,YACA,gBADA,GAEA,oBAFA,GAGA,MAHA,GAIA,aAJA,GAKA,6BALA,GAMA,IAPA;AASA;AAXA,SAzHA;AAsIAiB;AACAC,kBACA;AACAC;AACAC;AADA,aADA;AAIA/B;AACAe;AACAC,oCADA;AAEAC,+BAFA;AAGAC;AAHA;AADA;AAJA,WADA;AADA;AAtIA;AAPA;AA+JA,GArKA;;AAsKAc;AACAC;AACAC;AACAC,sBADA;AAEAC,4DAFA;AAGAC;AACAC;AADA,SAHA;AAMA5C;AACA6C;AADA;AANA,SAUAC,IAVA,CAUAC;AACA;AACA;AACA;;AAEA;AACA,+CACA;AACA,+CACA;AACA,+CACA;AACA,+CACA;AACA;;AAEA,6CACA;AACA,6CACA;AACA,6CACA;AACA,6CACA;AACA;AACA,OAnCA,EAoCAC,KApCA,CAoCAC;AACAC;AACA,OAtCA,EAuCAC,OAvCA,CAuCA,QAvCA;AAwCA;;AA1CA,GAtKA;AAkNAC;AAlNA","names":["name","created","data","chartData","idb","rbi","ffs","itp","chartOptions","chart","type","credits","enabled","title","text","yAxis","style","fontSize","labels","formatter","xAxis","crosshair","categories","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","color","dataLabels","rotation","y","tooltip","responsive","rules","condition","maxWidth","methods","FETCH_DATA","axios","method","url","headers","Authorization","year_no","then","res","catch","error","console","finally","computed"],"sourceRoot":"src/views/Applications/ExecutiveManagement/Charts","sources":["forecast-sales-bar.vue"],"sourcesContent":["<template>\n  <div class=\"chart-item\">\n    <highcharts :options=\"chartOptions\" v-if=\"this.chartData\"></highcharts>\n    <div class=\"\" v-if=\"!this.chartData\">no data</div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport axios from \"/axios.js\";\n\nexport default {\n  name: \"chart-forecast-sales-bar\",\n  created() {\n    this.FETCH_DATA();\n  },\n  data() {\n    return {\n      chartData: {\n        idb: [],\n        rbi: [],\n        ffs: [],\n        itp: [],\n      },\n      chartOptions: {\n        chart: {\n          type: \"column\",\n        },\n        credits: {\n          enabled: false,\n        },\n        title: {\n          text: \"THE QUARTERLY SUMMARY OF FORECAST REVENUE BY SERVICE TYPE IN 2023\",\n        },\n        yAxis: {\n          title: {\n            text: \"FORECAST REVENUE [MB]\",\n            style: {\n              fontSize: \"14\",\n            },\n          },\n          labels: {\n            formatter: function () {\n              return (this.value / 1000000).toFixed(2);\n            },\n            style: {\n              fontSize: \"14\",\n            },\n          },\n        },\n        xAxis: {\n          crosshair: true,\n          categories: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n          labels: {\n            style: {\n              fontSize: \"14\",\n            },\n          },\n        },\n        legend: {\n          layout: \"horizontal\",\n          align: \"center\",\n          verticalAlign: \"bottom\",\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false,\n            },\n          },\n        },\n        series: [\n          {\n            name: \"IDB\",\n            data: [],\n            color: \"#3a0ca3\",\n            dataLabels: {\n              enabled: true,\n              rotation: -90,\n              color: \"#FFFFFF\",\n              align: \"right\",\n              y: 10, // 10 pixels down from the top\n              style: {\n                fontSize: \"10px\",\n              },\n              formatter: function () {\n                return (this.point.y / 1000000).toFixed(2);\n              },\n            },\n          },\n          {\n            name: \"RBI\",\n            data: [],\n            color: \"#7209b7\",\n            dataLabels: {\n              enabled: true,\n              rotation: -90,\n              color: \"#FFFFFF\",\n              align: \"right\",\n              y: 10, // 10 pixels down from the top\n              style: {\n                fontSize: \"10px\",\n              },\n              formatter: function () {\n                return (this.point.y / 1000000).toFixed(2);\n              },\n            },\n          },\n          {\n            name: \"FFS\",\n            data: [],\n            color: \"#4cc9f0\",\n            dataLabels: {\n              enabled: true,\n              rotation: -90,\n              color: \"#FFFFFF\",\n              align: \"right\",\n              y: 10, // 10 pixels down from the top\n              style: {\n                fontSize: \"10px\",\n              },\n              formatter: function () {\n                return (this.point.y / 1000000).toFixed(2);\n              },\n            },\n          },\n          {\n            name: \"ITP\",\n            data: [],\n            color: \"#4361ee\",\n            dataLabels: {\n              enabled: true,\n              rotation: -90,\n              color: \"#FFFFFF\",\n              align: \"right\",\n              y: 10, // 10 pixels down from the top\n              style: {\n                fontSize: \"10px\",\n              },\n              formatter: function () {\n                return (this.point.y / 1000000).toFixed(2);\n              },\n            },\n          },\n        ],\n        tooltip: {\n          formatter: function () {\n            return (\n              \"The <b>\" +\n              this.series.name +\n              \" </b>value for <b>\" +\n              this.x +\n              \"</b> is <b>\" +\n              (this.y / 1000000).toFixed(2) +\n              \"MB\"\n            );\n          },\n        },\n        responsive: {\n          rules: [\n            {\n              condition: {\n                maxWidth: 500,\n              },\n              chartOptions: {\n                legend: {\n                  layout: \"horizontal\",\n                  align: \"center\",\n                  verticalAlign: \"bottom\",\n                },\n              },\n            },\n          ],\n        },\n      },\n    };\n  },\n  methods: {\n    FETCH_DATA() {\n      axios({\n        method: \"post\",\n        url: \"forecast-sales/forecast-sales-group-sumbyyear\",\n        headers: {\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n        },\n        data: {\n          year_no: moment().year() + 1,\n        },\n      })\n        .then((res) => {\n          // console.log(res);\n          if (res.data) {\n            var json_idb = res.data;\n\n            for (var i = 0; i < json_idb.length; i++) {\n              if (json_idb[i].service_type == 1)\n                this.chartData.idb.push(json_idb[i].y);\n              if (json_idb[i].service_type == 2)\n                this.chartData.rbi.push(json_idb[i].y);\n              if (json_idb[i].service_type == 3)\n                this.chartData.ffs.push(json_idb[i].y);\n              if (json_idb[i].service_type == 4)\n                this.chartData.itp.push(json_idb[i].y);\n            }\n\n            if (this.chartData.idb.length > 0)\n              this.chartOptions.series[0].data = this.chartData.idb;\n            if (this.chartData.rbi.length > 0)\n              this.chartOptions.series[1].data = this.chartData.rbi;\n            if (this.chartData.ffs.length > 0)\n              this.chartOptions.series[2].data = this.chartData.ffs;\n            if (this.chartData.itp.length > 0)\n              this.chartOptions.series[3].data = this.chartData.itp;\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(() => {});\n    },\n  },\n  computed: {},\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.chart-item {\n  min-height: 200px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}