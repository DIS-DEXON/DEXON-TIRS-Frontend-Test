{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ChartProjectProgress from \"@/views/Applications/ExecutiveManagement/Charts/project-progress-line-nodetail.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupEdit from \"@/views/Applications/ProjectManager/Projects/project-edit.vue\";\nimport VueTabsChrome from \"vue-tabs-chrome\";\nimport pdfvuer from \"pdfvuer\";\nimport axios from \"/axios.js\";\nimport moment from \"moment\";\nexport default {\n  name: \"ViewProjectInfo\",\n  components: {\n    toolbar: toolbar,\n    popupEdit: popupEdit,\n    pdf: pdfvuer,\n    VueTabsChrome: VueTabsChrome,\n    ChartProjectProgress: ChartProjectProgress\n  },\n  created: function created() {\n    if (this.$store.state.status.server == true) {\n      this.FETCH_INFO();\n      this.FETCH_INFO_PROGRESS();\n    }\n  },\n  data: function data() {\n    return {\n      info: {},\n      isEdit: false,\n      page: 1,\n      numPages: 0,\n      pdfdata: undefined,\n      fileUpload: \"\",\n      tabCurrent: \"progress\",\n      tabs: [{\n        label: \"Project Progress\",\n        key: \"progress\",\n        closable: false\n      }, {\n        label: \"PDF Attached\",\n        key: \"pdf\",\n        closable: false\n      }],\n      progressInfo: {}\n    };\n  },\n  methods: {\n    FETCH_INFO: function FETCH_INFO() {\n      var _this = this;\n\n      var id_project = this.$route.params;\n\n      if (id_project) {\n        axios({\n          method: \"post\",\n          url: \"/project-manager/project-info\",\n          headers: {\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n          },\n          data: id_project\n        }).then(function (res) {\n          // console.log(res);\n          if (res.status == 200 && res.data[0]) {\n            _this.info = res.data[0];\n\n            _this.GET_PDF();\n          }\n        }).catch(function (error) {\n          _this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n        }).finally(function () {});\n      }\n    },\n    FETCH_INFO_PROGRESS: function FETCH_INFO_PROGRESS() {\n      var _this2 = this;\n\n      var id_project = this.$route.params;\n      console.log(id_project);\n\n      if (id_project) {\n        axios({\n          method: \"post\",\n          url: \"/current-sales/project-current-sales-progress-byid\",\n          headers: {\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n          },\n          data: id_project\n        }).then(function (res) {\n          console.log(res);\n\n          if (res.status == 200 && res.data[0]) {\n            _this2.progressInfo = res.data[0];\n          }\n        }).catch(function (error) {\n          _this2.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n        }).finally(function () {});\n      }\n    },\n    GET_PDF: function GET_PDF() {\n      // console.log(axios);\n      if (this.info.pdf_path != null) {\n        var self = this;\n        var pdfPath = this.info.pdf_path;\n        self.pdfdata = pdfvuer.createLoadingTask(this.baseURL + pdfPath);\n        self.pdfdata.then(function (pdf) {\n          self.numPages = pdf.numPages; // console.log(\"pdf page count: \" + self.numPages);\n        });\n      }\n    },\n    UPLOAD_FILE: function UPLOAD_FILE() {\n      var _this3 = this;\n\n      this.fileUpload = this.$refs.file.files[0]; // console.log(this.fileUpload);\n\n      if (this.fileUpload && this.fileUpload.type == \"application/pdf\") {\n        if (this.fileUpload.size < 20000000) {\n          axios({\n            method: \"post\",\n            url: \"/project-manager/project-upload-pdf\",\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n            },\n            data: {\n              id_project: this.info.id_project,\n              file: this.fileUpload\n            }\n          }).then(function (res) {\n            if (res.status == 200) {\n              _this3.FETCH_INFO();\n            }\n          }).catch(function (error) {\n            _this3.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n          }).finally(function () {});\n        } else {\n          this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n          var file = document.getElementById(\"pdf-upload-btn\");\n          file.val = \"\";\n        }\n      } else {\n        this.$ons.notification.alert(\"Incorrect filetype. <br/> Only PDF file can be uploaded.\");\n\n        var _file = document.getElementById(\"pdf-upload-btn\");\n\n        _file.val = \"\";\n      }\n    },\n    DELETE_PDF: function DELETE_PDF() {\n      var _this4 = this;\n\n      this.$ons.notification.confirm(\"Confirm delete PDF file?\").then(function (res) {\n        if (res == 1) {\n          if (_this4.info.id_pdf) {\n            axios({\n              method: \"delete\",\n              url: \"/project-manager/project-delete-pdf\",\n              headers: {\n                Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n              },\n              data: {\n                id_project: _this4.info.id_project,\n                id_pdf: _this4.info.id_pdf\n              }\n            }).then(function (res) {\n              if (res.status == 200) {\n                _this4.FETCH_INFO();\n              }\n            }).catch(function (error) {\n              _this4.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n            }).finally(function () {});\n          }\n        }\n      });\n    },\n    DOWNLOAD_PDF: function DOWNLOAD_PDF() {\n      var _this5 = this;\n\n      this.$ons.notification.confirm(\"You are downloading project information sheet of project no: \" + this.info.project_no).then(function (res) {\n        if (res == 1) {\n          var link = document.createElement(\"a\");\n          link.href = _this5.info.pdf_path;\n          link.download = \"project_information_\" + _this5.info.project_no + \".pdf\";\n          link.click();\n        }\n      });\n    },\n    DELETE_PROJECT: function DELETE_PROJECT() {\n      var _this6 = this;\n\n      var id_project = this.$route.params;\n      this.$ons.notification.confirm(\"Confirm delete?\").then(function (res) {\n        if (res == 1) {\n          axios({\n            method: \"delete\",\n            url: \"/project-manager/project-delete\",\n            headers: {\n              Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n            },\n            data: id_project\n          }).then(function (res) {\n            if (res.status == 200) {\n              _this6.$ons.notification.alert(\"Project delete successful\");\n\n              _this6.$router.go(-1);\n            }\n          }).catch(function (error) {\n            _this6.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n          }).finally(function () {});\n        }\n      });\n    },\n    TOGGLE_POPUP: function TOGGLE_POPUP() {\n      this.isEdit = !this.isEdit;\n    }\n  },\n  computed: {\n    isShowDownloadBtn: function isShowDownloadBtn() {\n      if (this.info.pdf_path) return true;\n      return false;\n    },\n    jobConfirmDate: function jobConfirmDate() {\n      if (this.info.job_confirm_date) return moment(this.info.job_confirm_date).format(\"LL\");else return \"N/A\";\n    },\n    baseURL: function baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;else if (mode == \"prod\") return this.$store.state.modeURL.prod;else return console.log(\"develpment mode set up incorrect.\");\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","components","toolbar","popupEdit","pdf","VueTabsChrome","ChartProjectProgress","created","data","info","isEdit","page","numPages","pdfdata","fileUpload","tabCurrent","tabs","label","key","closable","progressInfo","methods","FETCH_INFO","axios","method","url","headers","Authorization","then","catch","error","finally","FETCH_INFO_PROGRESS","console","GET_PDF","self","UPLOAD_FILE","id_project","file","DELETE_PDF","id_pdf","DOWNLOAD_PDF","confirm","link","DELETE_PROJECT","TOGGLE_POPUP","computed","isShowDownloadBtn","jobConfirmDate","baseURL"],"sourceRoot":"src/views/Applications/ProjectManager/Projects","sources":["ProjectsInfo.vue"],"sourcesContent":["<template>\n  <div class=\"pm-page\">\n    <div class=\"pm-toolbar\">\n      <toolbar\n        :pageSubName=\"info.project_no + ' - ' + info.project_name\"\n        :isBack=\"true\"\n        :isEdit=\"true\"\n        :isDelete=\"true\"\n        :isPrint=\"false\"\n        :isDownload=\"isShowDownloadBtn\"\n        @isDeleteBtn=\"DELETE_PROJECT()\"\n        @isEditBtn=\"TOGGLE_POPUP()\"\n        @isDownloadBtn=\"DOWNLOAD_PDF()\"\n        @refreshInfo=\"FETCH_INFO()\"\n      />\n    </div>\n    <div class=\"pm-page-container\">\n      <div class=\"pm-project-info-sidebar form\">\n        <p class=\"pm-section-label\">Project Informations</p>\n        <div class=\"form-item-container\">\n          <div class=\"input-set\">\n            <p class=\"label\">Project Number:</p>\n            <p class=\"info\">\n              {{ info.project_no }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Project Name:</p>\n            <p class=\"info\">\n              {{ info.project_name }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Purchase Order Number:</p>\n            <p class=\"info\">\n              {{ info.po_no }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Quotation Number:</p>\n            <p class=\"info\">\n              {{ info.quotation_no }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Job Type:</p>\n            <p class=\"info\">\n              {{ info.job_type }}\n            </p>\n          </div>\n          <!-- <div class=\"input-set\">\n            <p class=\"label\">Job Confirm by Client Date:</p>\n            <p class=\"info\">\n              {{ jobConfirmDate }}\n            </p>\n          </div> -->\n\n          <p class=\"pm-section-label\">Client Contact</p>\n\n          <div class=\"input-set\">\n            <p class=\"label\">Client Name:</p>\n            <p class=\"info\">\n              {{ info.client_name }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Contact Name:</p>\n            <p class=\"info\">\n              {{ info.client_contact_name }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Phone:</p>\n            <p class=\"info\">\n              {{ info.client_contact_phone_no }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <p class=\"label\">Email:</p>\n            <p class=\"info\">\n              {{ info.client_contact_email }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div class=\"tab-wrapper\">\n        <vue-tabs-chrome v-model=\"tabCurrent\" :tabs=\"tabs\" />\n      </div>\n      <div class=\"page-content\" v-if=\"this.tabCurrent == 'progress'\">\n        <ChartProjectProgress :info=\"progressInfo\" />\n      </div>\n      <div\n        class=\"page-content\"\n        v-if=\"this.tabCurrent == 'pdf' && this.info.pdf_path\"\n      >\n        <div class=\"render-view\" v-if=\"numPages >= 1\">\n          <pdf\n            :src=\"pdfdata\"\n            :page=\"1\"\n            style=\"width: 100%; margin: 20px auto\"\n            :annotation=\"true\"\n            :resize=\"true\"\n          >\n          </pdf>\n        </div>\n        <div class=\"render-view\" v-if=\"numPages >= 2\">\n          <pdf\n            :src=\"pdfdata\"\n            :page=\"2\"\n            style=\"width: 100%; margin: 20px auto\"\n            :annotation=\"true\"\n            :resize=\"true\"\n          >\n          </pdf>\n        </div>\n        <div class=\"render-view\" v-if=\"numPages >= 3\">\n          <pdf\n            :src=\"pdfdata\"\n            :page=\"3\"\n            style=\"width: 100%; margin: 20px auto\"\n            :annotation=\"true\"\n            :resize=\"true\"\n          >\n          </pdf>\n        </div>\n      </div>\n\n      <div class=\"upload-btn-wrapper\" v-if=\"this.tabCurrent == 'pdf'\">\n        <input\n          type=\"file\"\n          id=\"pdf-upload-btn\"\n          style=\"display: none\"\n          ref=\"file\"\n          @change=\"UPLOAD_FILE()\"\n        />\n        <v-ons-toolbar-button v-if=\"!this.info.pdf_path\">\n          <label for=\"pdf-upload-btn\"\n            ><i class=\"las la-plus\"></i>Add PDF file</label\n          >\n        </v-ons-toolbar-button>\n        <v-ons-toolbar-button\n          class=\"btn-delete\"\n          v-if=\"this.info.pdf_path\"\n          v-on:click=\"DELETE_PDF()\"\n        >\n          <i class=\"las la-trash\"></i>\n        </v-ons-toolbar-button>\n      </div>\n    </div>\n    <popupEdit\n      v-if=\"isEdit == true\"\n      @closePopup=\"TOGGLE_POPUP()\"\n      @refreshInfo=\"FETCH_INFO()\"\n      :editInfo=\"info\"\n    />\n  </div>\n</template>\n\n<script>\nimport ChartProjectProgress from \"@/views/Applications/ExecutiveManagement/Charts/project-progress-line-nodetail.vue\";\nimport toolbar from \"@/components/app-structures/app-toolbar.vue\";\nimport popupEdit from \"@/views/Applications/ProjectManager/Projects/project-edit.vue\";\nimport VueTabsChrome from \"vue-tabs-chrome\";\nimport pdfvuer from \"pdfvuer\";\nimport axios from \"/axios.js\";\nimport moment from \"moment\";\nexport default {\n  name: \"ViewProjectInfo\",\n  components: {\n    toolbar,\n    popupEdit,\n    pdf: pdfvuer,\n    VueTabsChrome,\n    ChartProjectProgress,\n  },\n  created() {\n    if (this.$store.state.status.server == true) {\n      this.FETCH_INFO();\n      this.FETCH_INFO_PROGRESS();\n    }\n  },\n  data() {\n    return {\n      info: {},\n      isEdit: false,\n      page: 1,\n      numPages: 0,\n      pdfdata: undefined,\n      fileUpload: \"\",\n      tabCurrent: \"progress\",\n      tabs: [\n        {\n          label: \"Project Progress\",\n          key: \"progress\",\n          closable: false,\n        },\n        {\n          label: \"PDF Attached\",\n          key: \"pdf\",\n          closable: false,\n        },\n      ],\n      progressInfo: {},\n    };\n  },\n  methods: {\n    FETCH_INFO() {\n      const id_project = this.$route.params;\n      if (id_project) {\n        axios({\n          method: \"post\",\n          url: \"/project-manager/project-info\",\n          headers: {\n            Authorization:\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n          },\n          data: id_project,\n        })\n          .then((res) => {\n            // console.log(res);\n\n            if (res.status == 200 && res.data[0]) {\n              this.info = res.data[0];\n              this.GET_PDF();\n            }\n          })\n          .catch((error) => {\n            this.$ons.notification.alert(\n              error.code + \" \" + error.response.status + \" \" + error.message\n            );\n          })\n          .finally(() => {});\n      }\n    },\n    FETCH_INFO_PROGRESS() {\n      const id_project = this.$route.params;\n      console.log(id_project);\n      if (id_project) {\n        axios({\n          method: \"post\",\n          url: \"/current-sales/project-current-sales-progress-byid\",\n          headers: {\n            Authorization:\n              \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n          },\n          data: id_project,\n        })\n          .then((res) => {\n            console.log(res);\n\n            if (res.status == 200 && res.data[0]) {\n              this.progressInfo = res.data[0];\n            }\n          })\n          .catch((error) => {\n            this.$ons.notification.alert(\n              error.code + \" \" + error.response.status + \" \" + error.message\n            );\n          })\n          .finally(() => {});\n      }\n    },\n    GET_PDF() {\n      // console.log(axios);\n      if (this.info.pdf_path != null) {\n        var self = this;\n        var pdfPath = this.info.pdf_path;\n        self.pdfdata = pdfvuer.createLoadingTask(this.baseURL + pdfPath);\n        self.pdfdata.then((pdf) => {\n          self.numPages = pdf.numPages;\n          // console.log(\"pdf page count: \" + self.numPages);\n        });\n      }\n    },\n    UPLOAD_FILE() {\n      this.fileUpload = this.$refs.file.files[0];\n      // console.log(this.fileUpload);\n      if (this.fileUpload && this.fileUpload.type == \"application/pdf\") {\n        if (this.fileUpload.size < 20000000) {\n          axios({\n            method: \"post\",\n            url: \"/project-manager/project-upload-pdf\",\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n              Authorization:\n                \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n            },\n            data: {\n              id_project: this.info.id_project,\n              file: this.fileUpload,\n            },\n          })\n            .then((res) => {\n              if (res.status == 200) {\n                this.FETCH_INFO();\n              }\n            })\n            .catch((error) => {\n              this.$ons.notification.alert(\n                error.code + \" \" + error.response.status + \" \" + error.message\n              );\n            })\n            .finally(() => {});\n        } else {\n          this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n          const file = document.getElementById(\"pdf-upload-btn\");\n          file.val = \"\";\n        }\n      } else {\n        this.$ons.notification.alert(\n          \"Incorrect filetype. <br/> Only PDF file can be uploaded.\"\n        );\n        const file = document.getElementById(\"pdf-upload-btn\");\n        file.val = \"\";\n      }\n    },\n    DELETE_PDF() {\n      this.$ons.notification.confirm(\"Confirm delete PDF file?\").then((res) => {\n        if (res == 1) {\n          if (this.info.id_pdf) {\n            axios({\n              method: \"delete\",\n              url: \"/project-manager/project-delete-pdf\",\n              headers: {\n                Authorization:\n                  \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n              },\n              data: {\n                id_project: this.info.id_project,\n                id_pdf: this.info.id_pdf,\n              },\n            })\n              .then((res) => {\n                if (res.status == 200) {\n                  this.FETCH_INFO();\n                }\n              })\n              .catch((error) => {\n                this.$ons.notification.alert(\n                  error.code + \" \" + error.response.status + \" \" + error.message\n                );\n              })\n              .finally(() => {});\n          }\n        }\n      });\n    },\n    DOWNLOAD_PDF() {\n      this.$ons.notification\n        .confirm(\n          \"You are downloading project information sheet of project no: \" +\n            this.info.project_no\n        )\n        .then((res) => {\n          if (res == 1) {\n            const link = document.createElement(\"a\");\n            link.href = this.info.pdf_path;\n            link.download =\n              \"project_information_\" + this.info.project_no + \".pdf\";\n            link.click();\n          }\n        });\n    },\n    DELETE_PROJECT() {\n      const id_project = this.$route.params;\n      this.$ons.notification.confirm(\"Confirm delete?\").then((res) => {\n        if (res == 1) {\n          axios({\n            method: \"delete\",\n            url: \"/project-manager/project-delete\",\n            headers: {\n              Authorization:\n                \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n            },\n            data: id_project,\n          })\n            .then((res) => {\n              if (res.status == 200) {\n                this.$ons.notification.alert(\"Project delete successful\");\n                this.$router.go(-1);\n              }\n            })\n            .catch((error) => {\n              this.$ons.notification.alert(\n                error.code + \" \" + error.response.status + \" \" + error.message\n              );\n            })\n            .finally(() => {});\n        }\n      });\n    },\n    TOGGLE_POPUP() {\n      this.isEdit = !this.isEdit;\n    },\n  },\n  computed: {\n    isShowDownloadBtn() {\n      if (this.info.pdf_path) return true;\n      return false;\n    },\n    jobConfirmDate() {\n      if (this.info.job_confirm_date)\n        return moment(this.info.job_confirm_date).format(\"LL\");\n      else return \"N/A\";\n    },\n    baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;\n      else if (mode == \"prod\") return this.$store.state.modeURL.prod;\n      else return console.log(\"develpment mode set up incorrect.\");\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n.pm-page {\n  border: 1px solid #e6e6e6;\n  border-width: 0 0 0 1px;\n  background-color: #ffffff;\n  width: 100%;\n  height: calc(100vh - 78px);\n  display: grid;\n  grid-template-rows: 61px calc(100vh - 61px);\n\n  .pm-page-container {\n    background-color: #d9d9d9;\n    display: grid;\n    grid-template-columns: 360px calc(100% - 360px);\n    height: calc(100% - 78px);\n\n    @media screen and (max-width: 1024px) {\n      grid-template-columns: 100%;\n    }\n\n    .page-content {\n      // width: calc(100vw - 600px);\n      width: 100%;\n      height: calc(100vh - 139px);\n      // padding: 20px;\n      overflow-x: scroll;\n      overflow-y: scroll;\n      display: block;\n      background-color: #fff;\n      .render-view {\n        width: 100%;\n        height: 100%;\n        min-height: 1130px;\n        // min-width: 800px;\n        -o-object-fit: contain;\n        object-fit: contain;\n        max-width: 800px;\n        margin: 0 auto;\n        margin-bottom: 20px;\n        box-shadow: $web-card-shadow;\n        .pdf-view {\n          padding-top: 20px;\n        }\n\n        @media screen and (max-width: 1024px) {\n          max-width: 90%;\n        }\n      }\n      .render-view:last-child {\n        margin-bottom: 60px;\n      }\n    }\n\n    .page-content::-webkit-scrollbar {\n      display: none;\n    }\n  }\n}\nh1 {\n  font-size: 2em;\n}\n\n.pm-project-info-sidebar {\n  width: auto;\n  height: 100%;\n  background: #fff;\n  padding: 0 20px;\n  overflow-y: scroll;\n  border: 1px solid #e6e6e6;\n  border-width: 0 1px 0 0px;\n  grid-row: span 2;\n  @media screen and (max-width: 1024px) {\n    display: none;\n  }\n\n  .pm-section-label {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 1.75em;\n    line-height: 16px;\n    letter-spacing: -0.08px;\n    color: $web-font-color-black;\n    padding: 20px 0 10px 0;\n    margin: 0;\n    user-select: text;\n  }\n  .form-item-container {\n    display: block;\n  }\n}\n\n.pm-project-info-sidebar::-webkit-scrollbar {\n  display: none;\n}\n\n.input-set:last-child {\n  margin-bottom: 40px;\n}\n\n.upload-btn-wrapper {\n  width: 100%;\n  height: 100%;\n}\n\n.dx-tabs {\n  border: none;\n}\n\n.vue-tabs-chrome {\n  padding-top: 10px;\n  background-color: #d9d9d9;\n  font-size: 14px;\n  font-weight: 600px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}