{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"/axios.js\";\nimport clone from \"just-clone\";\nimport DxDateBox from \"devextreme-vue/date-box\"; // import moment from \"moment\";\n\nexport default {\n  name: \"popup-edit-gasbill\",\n  components: {\n    DxDateBox\n  },\n  props: {\n    editInfo: Object\n  },\n\n  data() {\n    return {\n      formData: {},\n      formSelect: {\n        now: new Date()\n      }\n    };\n  },\n\n  computed: {\n    baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;else if (mode == \"prod\") return this.$store.state.modeURL.prod;else return console.log(\"develpment mode set up incorrect.\");\n    }\n\n  },\n\n  created() {\n    this.formData = clone(this.editInfo);\n    let id = JSON.parse(localStorage.getItem(\"user\"));\n    this.formData.id_user = id.id_user;\n    this.formData.doc_seq = parseInt(this.formData.doc_seq);\n  },\n\n  mounted() {\n    if (this.formData.receipt_img != null) {\n      document.getElementById(\"preview_img\").src = this.baseURL + this.formData.receipt_img;\n    }\n  },\n\n  methods: {\n    PREVIEW_IMG_UPLOAD() {\n      this.formData.file = this.$refs.file_img.files[0];\n      var img = this.formData.file;\n\n      if (img) {\n        if (img.type == \"image/png\" || img.type == \"image/jpeg\") {\n          if (img.size < 20000000) {\n            document.getElementById(\"preview_img\").src = window.URL.createObjectURL(img);\n          } else {\n            this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n            this.PREVIEW_IMG_FORM_CLEAR();\n          }\n        } else {\n          this.$ons.notification.alert(\"Incorrect filetype. <br/> Only PNG/JPG/JPEG file can be uploaded.\");\n          this.PREVIEW_IMG_FORM_CLEAR();\n        }\n      }\n    },\n\n    PREVIEW_IMG_DELETE() {\n      this.formData.file = null;\n      this.formData.receipt_img = null;\n      document.getElementById(\"preview_img\").src = \"\";\n    },\n\n    PREVIEW_IMG_FORM_CLEAR() {\n      const file = document.getElementById(\"preview_input_img\");\n      file.val = \"\";\n      this.formData.file = null;\n    },\n\n    SAVE() {\n      if (this.formData.bill_date) {\n        if (this.formData.price) {\n          this.$ons.notification.confirm(\"Confirm save?\").then(res => {\n            if (res == 1) {\n              const data = this.formData;\n              axios({\n                method: \"put\",\n                url: \"/fuel-bill/fuel-bill-edit\",\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\",\n                  Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"token\"))\n                },\n                data: data\n              }).then(res => {\n                // console.log(res.data);\n                if (res.status == 200) {\n                  this.$ons.notification.alert(\"Bill Record Edit successful\");\n                  this.$emit(\"btn-cancel-edit\");\n                  this.$emit(\"refreshList\");\n                }\n              }).catch(error => {\n                this.$ons.notification.alert(error.code + \" \" + error.response.status + \" \" + error.message);\n              }).finally(() => {});\n            }\n          });\n        } else {\n          this.$ons.notification.alert('\"Price\" field cannot be empty');\n        }\n      } else {\n        this.$ons.notification.alert('\"Bill Date\" field cannot be empty');\n      }\n    },\n\n    CANCEL() {\n      // console.log(this.formData);\n      let form = this.formData; // console.log(form);\n\n      if (this.formData != form) {\n        this.$ons.notification.confirm(\"Your unsaved changes will be lost\").then(res => {\n          if (res == 1) {\n            this.$emit(\"btn-cancel-edit\");\n          }\n        });\n      } else {\n        this.$emit(\"btn-cancel-edit\");\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;AACA,gD,CACA;;AACA;AACAA,4BADA;AAEAC;AAAAC;AAAA,GAFA;AAGAC;AACAC;AADA,GAHA;;AAMAC;AACA;AACAC,kBADA;AAEAC;AACAC;AADA;AAFA;AAMA,GAbA;;AAcAC;AACAC;AACA;AACA,mEACA,+DACA;AACA;;AANA,GAdA;;AAsBAC;AACA;AACA;AACA;AACA;AACA,GA3BA;;AA4BAC;AACA;AACAC,mDACA,wCADA;AAEA;AACA,GAjCA;;AAkCAC;AACAC;AACA;AACA;;AACA;AACA;AACA;AACAF,yDACAG,+BADA;AAEA,WAHA,MAGA;AACA;AACA;AACA;AACA,SARA,MAQA;AACA,uCACA,mEADA;AAGA;AACA;AACA;AACA,KApBA;;AAqBAC;AACA;AACA;AACAJ;AACA,KAzBA;;AA0BAK;AACA;AACAC;AACA;AACA,KA9BA;;AA+BAC;AACA;AACA;AACA;AACA;AACA;AACAC;AACAC,6BADA;AAEAC,gDAFA;AAGAC;AACA,uDADA;AAEAC,iCACA;AAHA,iBAHA;AAQApB;AARA,iBAUAqB,IAVA,CAUAC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAjBA,EAkBAC,KAlBA,CAkBAC;AACA,6CACAA,aACA,GADA,GAEAA,qBAFA,GAGA,GAHA,GAIAA,aALA;AAOA,eA1BA,EA2BAC,OA3BA,CA2BA,QA3BA;AA4BA;AACA,WAhCA;AAiCA,SAlCA,MAkCA;AACA;AACA;AACA,OAtCA,MAsCA;AACA;AACA;AACA,KAzEA;;AA0EAC;AACA;AACA,+BAFA,CAGA;;AACA;AACA,+BACAC,OADA,CACA,mCADA,EAEAN,IAFA,CAEAC;AACA;AACA;AACA;AACA,SANA;AAOA,OARA,MAQA;AACA;AACA;AACA;;AAzFA;AAlCA","names":["name","components","DxDateBox","props","editInfo","data","formData","formSelect","now","computed","baseURL","created","mounted","document","methods","PREVIEW_IMG_UPLOAD","window","PREVIEW_IMG_DELETE","PREVIEW_IMG_FORM_CLEAR","file","SAVE","axios","method","url","headers","Authorization","then","res","catch","error","finally","CANCEL","confirm"],"sourceRoot":"src/views/Applications/Record/GasBill","sources":["gasbill-edit.vue"],"sourcesContent":["<template>\n  <div class=\"popup-wrapper\">\n    <div class=\"popup-card\">\n      <div class=\"popup-header\">\n        <label>Edit Record</label>\n      </div>\n      <div class=\"popup-content form\">\n        <div class=\"form-item-container\">\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Record No:</p>\n            </div>\n            <p class=\"info\">\n              {{ formData.record_no }}\n            </p>\n          </div>\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Bill Date:</p>\n              <span class=\"star-label\"><i class=\"las la-asterisk\"></i></span>\n            </div>\n            <DxDateBox\n              :value=\"formSelect.now\"\n              type=\"date\"\n              v-model=\"formData.bill_date\"\n              placeholder=\"Bill Date\"\n            />\n          </div>\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Price:</p>\n              <span class=\"star-label\"><i class=\"las la-asterisk\"></i></span>\n            </div>\n            <input type=\"text\" placeholder=\"Price\" v-model=\"formData.price\" />\n          </div>\n        </div>\n        <div class=\"form-item-container\">\n          <div class=\"input-set\">\n            <div class=\"label-box\">\n              <p class=\"label\">Receipt Image:</p>\n              <!-- <span class=\"star-label\"><i class=\"las la-asterisk\"></i></span> -->\n            </div>\n            <div class=\"picture-upload-box\">\n              <div class=\"preview-box\">\n                <img id=\"preview_img\" src=\"\" alt=\"\" />\n              </div>\n              <div class=\"upload-box\">\n                <div class=\"upload-btn-wrapper\">\n                  <input\n                    type=\"file\"\n                    id=\"preview_input_img\"\n                    style=\"display: none\"\n                    ref=\"file_img\"\n                    @change=\"PREVIEW_IMG_UPLOAD()\"\n                  />\n                  <v-ons-toolbar-button>\n                    <label for=\"preview_input_img\"\n                      ><i class=\"las la-image\"></i>Select File</label\n                    >\n                  </v-ons-toolbar-button>\n                  <v-ons-toolbar-button\n                    class=\"btn-delete\"\n                    v-on:click=\"PREVIEW_IMG_DELETE()\"\n                  >\n                    <i class=\"las la-trash\"></i>\n                  </v-ons-toolbar-button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <div class=\"button-set\">\n          <button class=\"blue\" v-on:click=\"SAVE()\">\n            <label>Save</label>\n          </button>\n          <button class=\"grey\" v-on:click=\"CANCEL()\">\n            <label>Cancel</label>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"/axios.js\";\nimport clone from \"just-clone\";\nimport DxDateBox from \"devextreme-vue/date-box\";\n// import moment from \"moment\";\nexport default {\n  name: \"popup-edit-gasbill\",\n  components: { DxDateBox },\n  props: {\n    editInfo: Object,\n  },\n  data() {\n    return {\n      formData: {},\n      formSelect: {\n        now: new Date(),\n      },\n    };\n  },\n  computed: {\n    baseURL() {\n      var mode = this.$store.state.mode;\n      if (mode == \"dev\") return this.$store.state.modeURL.dev;\n      else if (mode == \"prod\") return this.$store.state.modeURL.prod;\n      else return console.log(\"develpment mode set up incorrect.\");\n    },\n  },\n  created() {\n    this.formData = clone(this.editInfo);\n    let id = JSON.parse(localStorage.getItem(\"user\"));\n    this.formData.id_user = id.id_user;\n    this.formData.doc_seq = parseInt(this.formData.doc_seq);\n  },\n  mounted() {\n    if (this.formData.receipt_img != null) {\n      document.getElementById(\"preview_img\").src =\n        this.baseURL + this.formData.receipt_img;\n    }\n  },\n  methods: {\n    PREVIEW_IMG_UPLOAD() {\n      this.formData.file = this.$refs.file_img.files[0];\n      var img = this.formData.file;\n      if (img) {\n        if (img.type == \"image/png\" || img.type == \"image/jpeg\") {\n          if (img.size < 20000000) {\n            document.getElementById(\"preview_img\").src =\n              window.URL.createObjectURL(img);\n          } else {\n            this.$ons.notification.alert(\"File size too large. (20 MB max)\");\n            this.PREVIEW_IMG_FORM_CLEAR();\n          }\n        } else {\n          this.$ons.notification.alert(\n            \"Incorrect filetype. <br/> Only PNG/JPG/JPEG file can be uploaded.\"\n          );\n          this.PREVIEW_IMG_FORM_CLEAR();\n        }\n      }\n    },\n    PREVIEW_IMG_DELETE() {\n      this.formData.file = null;\n      this.formData.receipt_img = null;\n      document.getElementById(\"preview_img\").src = \"\";\n    },\n    PREVIEW_IMG_FORM_CLEAR() {\n      const file = document.getElementById(\"preview_input_img\");\n      file.val = \"\";\n      this.formData.file = null;\n    },\n    SAVE() {\n      if (this.formData.bill_date) {\n        if (this.formData.price) {\n          this.$ons.notification.confirm(\"Confirm save?\").then((res) => {\n            if (res == 1) {\n              const data = this.formData;\n              axios({\n                method: \"put\",\n                url: \"/fuel-bill/fuel-bill-edit\",\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\",\n                  Authorization:\n                    \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")),\n                },\n                data: data,\n              })\n                .then((res) => {\n                  // console.log(res.data);\n                  if (res.status == 200) {\n                    this.$ons.notification.alert(\"Bill Record Edit successful\");\n                    this.$emit(\"btn-cancel-edit\");\n                    this.$emit(\"refreshList\");\n                  }\n                })\n                .catch((error) => {\n                  this.$ons.notification.alert(\n                    error.code +\n                      \" \" +\n                      error.response.status +\n                      \" \" +\n                      error.message\n                  );\n                })\n                .finally(() => {});\n            }\n          });\n        } else {\n          this.$ons.notification.alert('\"Price\" field cannot be empty');\n        }\n      } else {\n        this.$ons.notification.alert('\"Bill Date\" field cannot be empty');\n      }\n    },\n    CANCEL() {\n      // console.log(this.formData);\n      let form = this.formData;\n      // console.log(form);\n      if (this.formData != form) {\n        this.$ons.notification\n          .confirm(\"Your unsaved changes will be lost\")\n          .then((res) => {\n            if (res == 1) {\n              this.$emit(\"btn-cancel-edit\");\n            }\n          });\n      } else {\n        this.$emit(\"btn-cancel-edit\");\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/main.scss\";\n.popup-content {\n  display: grid;\n  grid-template-columns: 300px 300px;\n  grid-gap: 20px;\n}\n.form-item-container {\n  width: auto;\n  display: block;\n  // grid-gap: 10px;\n}\n\ntextarea {\n  max-width: 610px;\n  min-width: 610px;\n}\n\np.info {\n  margin-bottom: 0 !important;\n}\n</style>"]},"metadata":{},"sourceType":"module"}